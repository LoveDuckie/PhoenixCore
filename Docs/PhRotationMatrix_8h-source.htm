<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: /home/jon/Phoenix/svn/0.3/libPhoenixGL/PhRotationMatrix.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>/home/jon/Phoenix/svn/0.3/libPhoenixGL/PhRotationMatrix.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="preprocessor">#ifndef PHROTATIONMATRIX_H</span>
<a name="l00002"></a>00002 <span class="preprocessor"></span><span class="preprocessor">#define PHROTATIONMATRIX_H</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span>
<a name="l00004"></a>00004 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="keyword">namespace </span>phoenix
<a name="l00007"></a>00007 {
<a name="l00008"></a>00008     <span class="comment">//pre-declaration of vector &amp; polygon class.</span>
<a name="l00009"></a>00009     <span class="keyword">class </span>PhVector2d;
<a name="l00010"></a>00010 
<a name="l00012"></a>00012 
<a name="l00017"></a><a class="code" href="classphoenix_1_1PhRotationMatrix.htm">00017</a>     <span class="keyword">class </span><a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>
<a name="l00018"></a>00018     {
<a name="l00019"></a>00019 
<a name="l00020"></a>00020     <span class="keyword">public</span>:
<a name="l00021"></a>00021 
<a name="l00023"></a>00023 
<a name="l00026"></a>00026         <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#2f8a9028c21576d876f086e21ee79a67" title="Constructor.">PhRotationMatrix</a>();
<a name="l00027"></a>00027 
<a name="l00029"></a>00029 
<a name="l00036"></a>00036         <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#2f8a9028c21576d876f086e21ee79a67" title="Constructor.">PhRotationMatrix</a>( <span class="keywordtype">float</span> a, <span class="keywordtype">float</span> b, <span class="keywordtype">float</span> c, <span class="keywordtype">float</span> d);
<a name="l00037"></a>00037 
<a name="l00039"></a>00039 
<a name="l00043"></a>00043         <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#2f8a9028c21576d876f086e21ee79a67" title="Constructor.">PhRotationMatrix</a>( <span class="keywordtype">float</span> a );
<a name="l00044"></a>00044 
<a name="l00045"></a>00045         <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#2f8a9028c21576d876f086e21ee79a67" title="Constructor.">PhRotationMatrix</a>( <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other );
<a name="l00046"></a>00046 
<a name="l00047"></a>00047         ~<a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>();
<a name="l00048"></a>00048 
<a name="l00050"></a><a class="code" href="classphoenix_1_1PhRotationMatrix.htm#23ebe8c46ca0c469eaf74c3fd0e61223">00050</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#23ebe8c46ca0c469eaf74c3fd0e61223" title="Get element.">getElement</a>( <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; <span class="keywordtype">id</span> )<span class="keyword"> const </span>{ <span class="keywordflow">return</span> Elements[0]; }
<a name="l00051"></a>00051 
<a name="l00053"></a><a class="code" href="classphoenix_1_1PhRotationMatrix.htm#325201b09aa8abdd9cba1639de475da1">00053</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#325201b09aa8abdd9cba1639de475da1" title="Set element.">setElement</a>( <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; <span class="keywordtype">id</span>, <span class="keyword">const</span> <span class="keywordtype">float</span>&amp; val ) { Elements[id] = val; }
<a name="l00054"></a>00054 
<a name="l00056"></a>00056 
<a name="l00060"></a>00060         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#0271fb63ed65d3b342bb71cf7d66dfaa" title="Set rotation.">setRotation</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; rad);
<a name="l00061"></a>00061 
<a name="l00063"></a>00063 
<a name="l00067"></a>00067         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#1f4bcfcfcd790bfb5f048ecf895ed3ec" title="Get rotation.">getRotation</a>() <span class="keyword">const</span>;
<a name="l00068"></a>00068 
<a name="l00070"></a>00070 
<a name="l00075"></a>00075         <span class="keywordtype">float</span>&amp; <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#e475ff665bb82a66bc1476ff283da0bb" title="Element access operator.">operator[]</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; x);
<a name="l00076"></a>00076 
<a name="l00077"></a>00077         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a> operator+(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00078"></a>00078         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a> operator-(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00079"></a>00079         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a> operator*(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00080"></a>00080         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a> operator*(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; scalar) <span class="keyword">const</span>;
<a name="l00081"></a>00081 
<a name="l00083"></a>00083 
<a name="l00091"></a>00091         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator*(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; other) <span class="keyword">const</span>;
<a name="l00092"></a>00092 
<a name="l00093"></a>00093         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a> operator/(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00094"></a>00094         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a> operator/(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; scalar) <span class="keyword">const</span>;
<a name="l00095"></a>00095 
<a name="l00096"></a>00096         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; operator+=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other);
<a name="l00097"></a>00097         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; operator-=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other);
<a name="l00098"></a>00098         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; operator*=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other);
<a name="l00099"></a>00099         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; operator*=(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; scalar);
<a name="l00100"></a>00100         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; operator/=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other);
<a name="l00101"></a>00101         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; operator/=(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; scalar);
<a name="l00102"></a>00102 
<a name="l00104"></a>00104 
<a name="l00108"></a>00108         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#6680adc49ccd794b206ceef5765b6a48" title="Determinant.">getDeterminant</a>() <span class="keyword">const</span>;
<a name="l00109"></a>00109 
<a name="l00111"></a>00111 
<a name="l00115"></a>00115         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm#0e3ab987bd99bfd70eeaf30572e837fa" title="Inverse.">getInverse</a>() <span class="keyword">const</span>;
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00118"></a>00118         <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00119"></a>00119 
<a name="l00120"></a>00120     <span class="keyword">protected</span>:
<a name="l00121"></a>00121 
<a name="l00122"></a>00122         <span class="keywordtype">float</span> Elements[4];
<a name="l00123"></a>00123 
<a name="l00124"></a>00124     <span class="keyword">private</span>:
<a name="l00125"></a>00125     };
<a name="l00126"></a>00126 
<a name="l00127"></a>00127 }
<a name="l00128"></a>00128 
<a name="l00129"></a>00129 <span class="comment">/*Vector class has to be defined before the source*/</span>
<a name="l00130"></a>00130 <span class="preprocessor">#include "PhVector2d.h"</span>
<a name="l00131"></a>00131 
<a name="l00132"></a>00132 <span class="preprocessor">#endif // PHROTATIONMATRIX_H</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Apr 26 01:07:54 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
