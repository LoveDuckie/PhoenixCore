<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: svn/0.3/libPhoenixGL/PhLog.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>svn/0.3/libPhoenixGL/PhLog.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2008, Jonathan Wayne Parrott, Denzel Morris.</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the "Software"), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE.</span>
<a name="l00022"></a>00022 <span class="comment"></span>
<a name="l00023"></a>00023 <span class="comment">*/</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef __PHOENIXLOGC__</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define __PHOENIXLOGC__</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;cstdio&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include "PhLogManager.h"</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="keyword">namespace </span>phoenix
<a name="l00033"></a>00033 {
<a name="l00034"></a>00034 
<a name="l00036"></a>00036 
<a name="l00041"></a><a class="code" href="classphoenix_1_1PhLog.htm">00041</a>         <span class="keyword">class </span><a class="code" href="classphoenix_1_1PhLog.htm" title="Log class.">PhLog</a>
<a name="l00042"></a>00042         {
<a name="l00043"></a>00043                 <span class="keyword">protected</span>:
<a name="l00044"></a>00044                         std::string name;
<a name="l00045"></a>00045                         FILE* mLogFile;
<a name="l00046"></a>00046                         <span class="keywordtype">int</span> mNumTabs;
<a name="l00047"></a>00047                         <span class="keywordtype">int</span> mNumSpaces;
<a name="l00048"></a>00048                         <span class="keywordtype">bool</span> mUseTabs;
<a name="l00049"></a>00049                         <span class="keywordtype">bool</span> mUseSpaces;
<a name="l00050"></a>00050                         <span class="keywordtype">bool</span> mTreeView;
<a name="l00051"></a>00051                         <span class="keywordtype">int</span> mNumSpacesPerTab;
<a name="l00052"></a>00052                         <a class="code" href="classphoenix_1_1PhLogManager.htm" title="Log manager.">PhLogManager</a>* logManager;
<a name="l00053"></a>00053 
<a name="l00054"></a>00054                 <span class="keyword">public</span>:
<a name="l00055"></a>00055 
<a name="l00057"></a>00057                         <a class="code" href="classphoenix_1_1PhLog.htm#e9c62a0eb667f3d7c21a5b3d1164f50a" title="Constructor.">PhLog</a>(<a class="code" href="classphoenix_1_1PhLogManager.htm" title="Log manager.">PhLogManager</a>* lmgr, std::string filename = std::string(<span class="stringliteral">""</span>));
<a name="l00058"></a>00058 
<a name="l00060"></a>00060                         <a class="code" href="classphoenix_1_1PhLog.htm#cf7d6233f7835ced1b1b7bfd1d2b084b" title="Destructor.">~PhLog</a>();
<a name="l00061"></a>00061 
<a name="l00063"></a>00063 
<a name="l00068"></a>00068                         <span class="keywordtype">bool</span> <a class="code" href="classphoenix_1_1PhLog.htm#1107db5d5d88c4590786d66345a62ccd" title="Open file.">openFile</a>(std::string logFileName );
<a name="l00069"></a>00069 
<a name="l00071"></a>00071 
<a name="l00076"></a>00076                         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhLog.htm#1efb692148f63ddf1747ffdc297828bb" title="Write to log.">writeToLog</a>(std::string text);
<a name="l00077"></a>00077 
<a name="l00079"></a>00079 
<a name="l00085"></a><a class="code" href="classphoenix_1_1PhLog.htm#aa567de77dd9244e4f8741efb535e75c">00085</a>                         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhLog.htm#aa567de77dd9244e4f8741efb535e75c" title="Use tabs.">useTabs</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; tabs) { mUseTabs = tabs; }
<a name="l00086"></a>00086 
<a name="l00088"></a>00088 
<a name="l00093"></a><a class="code" href="classphoenix_1_1PhLog.htm#90e49a108b3e9cf6e21ec8f464688060">00093</a>                         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhLog.htm#90e49a108b3e9cf6e21ec8f464688060" title="Use spaces.">useSpaces</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; spaces) { mUseSpaces = spaces; }
<a name="l00094"></a>00094 
<a name="l00096"></a>00096 
<a name="l00100"></a><a class="code" href="classphoenix_1_1PhLog.htm#189d25501b1c4de11a13f16e231b9d4a">00100</a>                         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; <a class="code" href="classphoenix_1_1PhLog.htm#189d25501b1c4de11a13f16e231b9d4a" title="Are tabs used.">areTabsUsed</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> mUseTabs; }
<a name="l00101"></a>00101 
<a name="l00103"></a>00103 
<a name="l00107"></a><a class="code" href="classphoenix_1_1PhLog.htm#ac200a67db1fd85eb8b4e9ad3aced34b">00107</a>                         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; <a class="code" href="classphoenix_1_1PhLog.htm#ac200a67db1fd85eb8b4e9ad3aced34b" title="Are spaces used.">areSpacesUsed</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> mUseSpaces; }
<a name="l00108"></a>00108 
<a name="l00110"></a>00110 
<a name="l00114"></a><a class="code" href="classphoenix_1_1PhLog.htm#7bda33df98b19d7e6ca31d10e905e236">00114</a>                         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhLog.htm#7bda33df98b19d7e6ca31d10e905e236" title="Set number of tabs.">setNumberOfTabs</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; numTabs) { mNumTabs = numTabs; }
<a name="l00115"></a>00115 
<a name="l00117"></a>00117 
<a name="l00121"></a><a class="code" href="classphoenix_1_1PhLog.htm#6bf5f3fb7ff18e336da8333cc81553ea">00121</a>                         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhLog.htm#6bf5f3fb7ff18e336da8333cc81553ea" title="Set number of spaces.">setNumberOfSpaces</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; numSpaces) { mNumSpaces = numSpaces; }
<a name="l00122"></a>00122 
<a name="l00124"></a>00124 
<a name="l00128"></a><a class="code" href="classphoenix_1_1PhLog.htm#df14416c85640a3a82fa302efa20ba66">00128</a>                         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; <a class="code" href="classphoenix_1_1PhLog.htm#df14416c85640a3a82fa302efa20ba66" title="Get number of tabs.">getNumberOfTabs</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> mNumTabs; }
<a name="l00129"></a>00129 
<a name="l00131"></a>00131 
<a name="l00135"></a><a class="code" href="classphoenix_1_1PhLog.htm#43268bc89eecb2d4f55cb85e811dfc62">00135</a>                         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; <a class="code" href="classphoenix_1_1PhLog.htm#43268bc89eecb2d4f55cb85e811dfc62" title="Get number of spaces.">getNumberOfSpaces</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> mNumSpaces; }
<a name="l00136"></a>00136 
<a name="l00138"></a>00138 
<a name="l00144"></a><a class="code" href="classphoenix_1_1PhLog.htm#2c9ba8c88346d3c733fa12cc6a58136b">00144</a>                         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhLog.htm#2c9ba8c88346d3c733fa12cc6a58136b" title="Set number of spaces per tab.">setNumberOfSpacesPerTab</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; spacesPerTab) { mNumSpacesPerTab = spacesPerTab; }
<a name="l00145"></a>00145 
<a name="l00147"></a>00147 
<a name="l00152"></a><a class="code" href="classphoenix_1_1PhLog.htm#562f0a4ed03a1551a4312fd76e4ff903">00152</a>                         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; <a class="code" href="classphoenix_1_1PhLog.htm#562f0a4ed03a1551a4312fd76e4ff903" title="Get number of spaces per tab.">getNumberOfSpacesPerTab</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> mNumSpacesPerTab; }
<a name="l00153"></a>00153 
<a name="l00155"></a>00155 
<a name="l00160"></a><a class="code" href="classphoenix_1_1PhLog.htm#1da13c16277c41b50b7312c780fca552">00160</a>                         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhLog.htm#1da13c16277c41b50b7312c780fca552" title="Set tree view.">setTreeView</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; treeView) { mTreeView = treeView; }
<a name="l00161"></a>00161 
<a name="l00163"></a>00163 
<a name="l00167"></a><a class="code" href="classphoenix_1_1PhLog.htm#4a89dff70aff6c2e680f65a17886bcb4">00167</a>                         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; <a class="code" href="classphoenix_1_1PhLog.htm#4a89dff70aff6c2e680f65a17886bcb4" title="Get tree view.">getTreeView</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> mTreeView; }
<a name="l00168"></a>00168 
<a name="l00170"></a>00170 
<a name="l00174"></a><a class="code" href="classphoenix_1_1PhLog.htm#54caff5e7bc9ea03a1d9b00d346d80a0">00174</a>                         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhLog.htm#54caff5e7bc9ea03a1d9b00d346d80a0" title="Set name.">setName</a>(<span class="keyword">const</span> std::string&amp; n) { name = n; }
<a name="l00175"></a>00175 
<a name="l00177"></a>00177 
<a name="l00181"></a><a class="code" href="classphoenix_1_1PhLog.htm#37a4bd05d36b51fc858678b6e6d13a3d">00181</a>                         <span class="keyword">inline</span> <span class="keyword">const</span> std::string&amp; <a class="code" href="classphoenix_1_1PhLog.htm#37a4bd05d36b51fc858678b6e6d13a3d" title="Get name.">getName</a>() { <span class="keywordflow">return</span> name; }
<a name="l00182"></a>00182 
<a name="l00183"></a>00183         };
<a name="l00184"></a>00184 
<a name="l00185"></a>00185 }
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:29:49 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
