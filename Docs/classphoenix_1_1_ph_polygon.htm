<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhPolygon Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.4 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1_ph_polygon.htm">PhPolygon</a></div>
<h1>phoenix::PhPolygon Class Reference</h1><!-- doxytag: class="phoenix::PhPolygon" -->Polygon class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;PhPolygon.h&gt;</code>
<p>

<p>
<a href="classphoenix_1_1_ph_polygon-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="505a51d10ad11e395270166094213f52"></a><!-- doxytag: member="phoenix::PhPolygon::PhPolygon" ref="505a51d10ad11e395270166094213f52" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#505a51d10ad11e395270166094213f52">PhPolygon</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#273ab5487d030dd22623539dbea19674">PhPolygon</a> (<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#273ab5487d030dd22623539dbea19674"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c78ab77df131f1c1a583b8c7d534e900"></a><!-- doxytag: member="phoenix::PhPolygon::~PhPolygon" ref="c78ab77df131f1c1a583b8c7d534e900" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#c78ab77df131f1c1a583b8c7d534e900">~PhPolygon</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#1b4e69def70d0e851c4a4bfa1b899f29">clear</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear.  <a href="#1b4e69def70d0e851c4a4bfa1b899f29"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#cec73ce9c67cdfc0752876c65a57a538">getPosition</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get position.  <a href="#cec73ce9c67cdfc0752876c65a57a538"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#82a7b68fe6b366c116d2f48b8dd7fdf1">setPosition</a> (<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set position.  <a href="#82a7b68fe6b366c116d2f48b8dd7fdf1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#95a7c7bae9368fc49f2c138266699716">pushVertex</a> (<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Push vertex.  <a href="#95a7c7bae9368fc49f2c138266699716"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#dcd687056a76318d3a44949face1689f">pushPoint</a> (<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Push point.  <a href="#dcd687056a76318d3a44949face1689f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#880bb0c4977628e77d170177494fed70">getVertexCount</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get vertex count.  <a href="#880bb0c4977628e77d170177494fed70"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#649980724896bc2bb4f3fa9454e5858e">getVertex</a> (int a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get vertex.  <a href="#649980724896bc2bb4f3fa9454e5858e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#5baced03391bac7862f3a7d90d944304">setVertex</a> (int a, <a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> v)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set vertex.  <a href="#5baced03391bac7862f3a7d90d944304"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#7feee3a5aa7df342198ad9d7e3c4e1f9">getRadius</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get radius.  <a href="#7feee3a5aa7df342198ad9d7e3c4e1f9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#a99c3b7e176d68234f92c188b6cc9382">rotate</a> (float rad)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rotate.  <a href="#a99c3b7e176d68234f92c188b6cc9382"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#66d18c16ca9f3e3356541060fd676a79">rotate</a> (PhRotationMatrix &amp;m)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rotate (Matrix).  <a href="#66d18c16ca9f3e3356541060fd676a79"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_polygon.htm#fd00e691e06f722e967c62adf03b5b2c">operator[]</a> (int a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Array operator.  <a href="#fd00e691e06f722e967c62adf03b5b2c"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Polygon class. 
<p>
This class represents polygons for collision detection. They can be used for drawing, but there are much easier ways to do that. a polygon is basically any geometric object that can be represented by a triangle fan. the vertices are basically the definitions of the vectors that make up the triangle fan. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_polygon_collision_handler.htm" title="The polygon collision handler.">phoenix::PhPolygonCollisionHandler</a> </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="273ab5487d030dd22623539dbea19674"></a><!-- doxytag: member="phoenix::PhPolygon::PhPolygon" ref="273ab5487d030dd22623539dbea19674" args="(PhVector2d a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhPolygon::PhPolygon           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Vector representing the center (position) of the polygon. </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="1b4e69def70d0e851c4a4bfa1b899f29"></a><!-- doxytag: member="phoenix::PhPolygon::clear" ref="1b4e69def70d0e851c4a4bfa1b899f29" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhPolygon::clear           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear. 
<p>
Removes all the vertices from the polygon. 
</div>
</div><p>
<a class="anchor" name="cec73ce9c67cdfc0752876c65a57a538"></a><!-- doxytag: member="phoenix::PhPolygon::getPosition" ref="cec73ce9c67cdfc0752876c65a57a538" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> phoenix::PhPolygon::getPosition           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get position. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The center of the polygon (The position). </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_polygon.htm#82a7b68fe6b366c116d2f48b8dd7fdf1" title="Set position.">setPosition()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="82a7b68fe6b366c116d2f48b8dd7fdf1"></a><!-- doxytag: member="phoenix::PhPolygon::setPosition" ref="82a7b68fe6b366c116d2f48b8dd7fdf1" args="(PhVector2d a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhPolygon::setPosition           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set position. 
<p>
Sets the center (position) of the polygon. Note that the vertices are relative to the center of the polygon, therefore changing this value will not effect the shape of the polygon. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The new center of the polygon. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_polygon.htm#cec73ce9c67cdfc0752876c65a57a538" title="Get position.">getPosition()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="95a7c7bae9368fc49f2c138266699716"></a><!-- doxytag: member="phoenix::PhPolygon::pushVertex" ref="95a7c7bae9368fc49f2c138266699716" args="(PhVector2d a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhPolygon::pushVertex           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Push vertex. 
<p>
Adds a vertex to the polygon. It doesn't care were the polygon is, so <a class="el" href="classphoenix_1_1_ph_vector2d.htm" title="2D Vector class">PhVector2d</a>(0.0f,10.0f) would push an vector that's 10 units above the polygon's center. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Vertex to add. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_polygon.htm#dcd687056a76318d3a44949face1689f" title="Push point.">pushPoint()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="dcd687056a76318d3a44949face1689f"></a><!-- doxytag: member="phoenix::PhPolygon::pushPoint" ref="dcd687056a76318d3a44949face1689f" args="(PhVector2d a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhPolygon::pushPoint           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Push point. 
<p>
Adds a point to the polygon by making a vertex based on the position of the point and the center point of the polygon. Push point does care about where the polygon is: it takes the vector between our position and where the point is and puts it onto the polygon. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Point to add. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_polygon.htm#95a7c7bae9368fc49f2c138266699716" title="Push vertex.">pushVertex()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="880bb0c4977628e77d170177494fed70"></a><!-- doxytag: member="phoenix::PhPolygon::getVertexCount" ref="880bb0c4977628e77d170177494fed70" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int phoenix::PhPolygon::getVertexCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get vertex count. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current number of vertices in the polygon. </dd></dl>

</div>
</div><p>
<a class="anchor" name="649980724896bc2bb4f3fa9454e5858e"></a><!-- doxytag: member="phoenix::PhPolygon::getVertex" ref="649980724896bc2bb4f3fa9454e5858e" args="(int a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> phoenix::PhPolygon::getVertex           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get vertex. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The index of the vertex wanted. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The vertex at index a. </dd></dl>

</div>
</div><p>
<a class="anchor" name="5baced03391bac7862f3a7d90d944304"></a><!-- doxytag: member="phoenix::PhPolygon::setVertex" ref="5baced03391bac7862f3a7d90d944304" args="(int a, PhVector2d v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhPolygon::setVertex           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>v</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set vertex. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The index of the vertex to set. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>v</em>&nbsp;</td><td>What to set it to. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="7feee3a5aa7df342198ad9d7e3c4e1f9"></a><!-- doxytag: member="phoenix::PhPolygon::getRadius" ref="7feee3a5aa7df342198ad9d7e3c4e1f9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhPolygon::getRadius           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get radius. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The magnitude of the largest vertex in the polygon. </dd></dl>

</div>
</div><p>
<a class="anchor" name="a99c3b7e176d68234f92c188b6cc9382"></a><!-- doxytag: member="phoenix::PhPolygon::rotate" ref="a99c3b7e176d68234f92c188b6cc9382" args="(float rad)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhPolygon::rotate           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>rad</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rotate. 
<p>
Rotates the polygon by the given measurement. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>rad</em>&nbsp;</td><td>Angle measurement in Radians. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="66d18c16ca9f3e3356541060fd676a79"></a><!-- doxytag: member="phoenix::PhPolygon::rotate" ref="66d18c16ca9f3e3356541060fd676a79" args="(PhRotationMatrix &amp;m)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhPolygon::rotate           </td>
          <td>(</td>
          <td class="paramtype">PhRotationMatrix &amp;&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rotate (Matrix). 
<p>
Rotates the polygon by the given matrix. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>m</em>&nbsp;</td><td>The matrix. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="fd00e691e06f722e967c62adf03b5b2c"></a><!-- doxytag: member="phoenix::PhPolygon::operator[]" ref="fd00e691e06f722e967c62adf03b5b2c" args="(int a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> phoenix::PhPolygon::operator[]           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Array operator. 
<p>
This allows you to treat the polygon like a const array of vectors. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The index wanted. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A vector representing the vertex at the given index. </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>PhPolygon.h</ul>
<hr size="1"><address style="text-align: right;"><small>Generated on Sat Dec 1 20:29:04 2007 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.4 </small></address>
</body>
</html>
