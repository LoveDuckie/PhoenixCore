<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: svn/0.3/libPhoenixGL/PhPolygonCollisionObject.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>svn/0.3/libPhoenixGL/PhPolygonCollisionObject.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2007, Jonathan Wayne Parrott.</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the "Software"), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE.</span>
<a name="l00022"></a>00022 <span class="comment"></span>
<a name="l00023"></a>00023 <span class="comment">*/</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef PHPOLYGONCOLLISIONOBJECT_H</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define PHPOLYGONCOLLISIONOBJECT_H</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor">#include "PhVector2d.h"</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include "PhPolygon.h"</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;boost/bind.hpp&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;boost/function.hpp&gt;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="keyword">using namespace </span>std;
<a name="l00034"></a>00034 <span class="keyword">using namespace </span>boost;
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">namespace </span>phoenix
<a name="l00037"></a>00037 {
<a name="l00038"></a>00038 
<a name="l00039"></a><a class="code" href="namespacephoenix.htm#e7c1dbb22b3ff875bdd09aa11b6ea2fb">00039</a>     <span class="keyword">struct </span><a class="code" href="structphoenix_1_1PhCollisionData.htm" title="Collision data.">PhCollisionData</a>;
<a name="l00040"></a>00040 
<a name="l00042"></a>00042 
<a name="l00052"></a>00052     <span class="keyword">typedef</span> function&lt;void (PhCollisionData data)&gt; <a class="code" href="namespacephoenix.htm#e7c1dbb22b3ff875bdd09aa11b6ea2fb" title="Callback typedef.">PhObjectCallback</a>;
<a name="l00053"></a>00053 
<a name="l00055"></a>00055 
<a name="l00059"></a><a class="code" href="classphoenix_1_1PhCollisionObject.htm">00059</a>     <span class="keyword">class </span><a class="code" href="classphoenix_1_1PhCollisionObject.htm" title="Collision object.">PhCollisionObject</a>
<a name="l00060"></a>00060     {
<a name="l00061"></a>00061 
<a name="l00062"></a>00062     <span class="keyword">protected</span>:
<a name="l00063"></a>00063 
<a name="l00065"></a>00065 
<a name="l00070"></a><a class="code" href="classphoenix_1_1PhCollisionObject.htm#621b32b79c6d6b47f1630f9982f4cff3">00070</a>         <span class="keywordtype">void</span>* <a class="code" href="classphoenix_1_1PhCollisionObject.htm#621b32b79c6d6b47f1630f9982f4cff3" title="User data.">userdata</a>;
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 
<a name="l00074"></a>00074 
<a name="l00079"></a><a class="code" href="classphoenix_1_1PhCollisionObject.htm#e399f26fef6376e0342818f2b1ea24fb">00079</a>         <span class="keywordtype">int</span> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#e399f26fef6376e0342818f2b1ea24fb" title="Type.">RTTI</a>;
<a name="l00080"></a>00080 
<a name="l00082"></a>00082 
<a name="l00085"></a><a class="code" href="classphoenix_1_1PhCollisionObject.htm#250a6762fbcfae89e68b072661fc1f31">00085</a>         <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>* <a class="code" href="classphoenix_1_1PhCollisionObject.htm#250a6762fbcfae89e68b072661fc1f31" title="Polygon.">poly</a>;
<a name="l00086"></a>00086 
<a name="l00088"></a>00088 
<a name="l00092"></a><a class="code" href="classphoenix_1_1PhCollisionObject.htm#989311b2f2b50873446f17eed5b7b1ae">00092</a>         <a class="code" href="namespacephoenix.htm#e7c1dbb22b3ff875bdd09aa11b6ea2fb" title="Callback typedef.">PhObjectCallback</a> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#989311b2f2b50873446f17eed5b7b1ae" title="Callback.">callback</a>;
<a name="l00093"></a>00093 
<a name="l00095"></a>00095 
<a name="l00098"></a><a class="code" href="classphoenix_1_1PhCollisionObject.htm#be61e86a0afb44ad6fc12ac3f00b5f04">00098</a>         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#be61e86a0afb44ad6fc12ac3f00b5f04" title="Displacement.">displacement</a>;
<a name="l00099"></a>00099 
<a name="l00100"></a>00100     <span class="keyword">public</span>:
<a name="l00101"></a>00101 
<a name="l00103"></a>00103         <a class="code" href="classphoenix_1_1PhCollisionObject.htm#da1e0052822cb193e15e06150a937b36" title="Construct.">PhCollisionObject</a>();
<a name="l00104"></a>00104 
<a name="l00106"></a>00106 
<a name="l00112"></a>00112         <a class="code" href="classphoenix_1_1PhCollisionObject.htm#da1e0052822cb193e15e06150a937b36" title="Construct.">PhCollisionObject</a>(<a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>* p, <span class="keywordtype">int</span> r = 0, <a class="code" href="namespacephoenix.htm#e7c1dbb22b3ff875bdd09aa11b6ea2fb" title="Callback typedef.">PhObjectCallback</a> c = NULL, <span class="keywordtype">void</span> * o = NULL);
<a name="l00113"></a>00113 
<a name="l00115"></a>00115 
<a name="l00119"></a>00119         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#7d5116e9537fd15c490273899124c75b" title="Set user data.">setUserData</a>(<span class="keywordtype">void</span>* o);
<a name="l00120"></a>00120 
<a name="l00122"></a>00122 
<a name="l00126"></a>00126         <span class="keywordtype">void</span>* <a class="code" href="classphoenix_1_1PhCollisionObject.htm#777245b6db4fe9a0f163bded42c392ce" title="Get user data.">getUserData</a>();
<a name="l00127"></a>00127 
<a name="l00129"></a>00129 
<a name="l00133"></a>00133         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#e1ce2fa6fc09f7440586c781c03d8c73" title="Set callback.">setCallback</a>( <a class="code" href="namespacephoenix.htm#e7c1dbb22b3ff875bdd09aa11b6ea2fb" title="Callback typedef.">PhObjectCallback</a> c );
<a name="l00134"></a>00134 
<a name="l00136"></a>00136 
<a name="l00140"></a>00140         <a class="code" href="namespacephoenix.htm#e7c1dbb22b3ff875bdd09aa11b6ea2fb" title="Callback typedef.">PhObjectCallback</a> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#f70c90aeb34cdadd5cf2b3e799a59573" title="Get callback.">getCallback</a>();
<a name="l00141"></a>00141 
<a name="l00143"></a>00143 
<a name="l00147"></a>00147         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#d9e09e62146b3acac05121af5a38c4bd" title="Set type.">setType</a>(<span class="keywordtype">int</span> r);
<a name="l00148"></a>00148 
<a name="l00150"></a>00150 
<a name="l00154"></a>00154         <span class="keywordtype">int</span> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#0adc7d7605bf04394b23526417c11689" title="Get type.">getType</a>();
<a name="l00155"></a>00155 
<a name="l00157"></a>00157 
<a name="l00161"></a>00161         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#391c153e208b9a6a574b8f5af184a147" title="Set polygon.">setPolygon</a>(<a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>* p);
<a name="l00162"></a>00162 
<a name="l00164"></a>00164 
<a name="l00168"></a>00168         <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>* <a class="code" href="classphoenix_1_1PhCollisionObject.htm#8a7b6ea50717445108ea203f0aae6d97" title="Get polygon.">getPolygon</a>();
<a name="l00169"></a>00169 
<a name="l00171"></a>00171 
<a name="l00175"></a>00175         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhCollisionObject.htm#6ee80746ff079913f7271bdfb55a0d22" title="Set displacement.">setDisplacement</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; d);
<a name="l00176"></a>00176 
<a name="l00178"></a>00178 
<a name="l00182"></a>00182         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; <a class="code" href="classphoenix_1_1PhCollisionObject.htm#28bfb22effedcfb947fdc85653a30555" title="Get displacement.">getDisplacement</a>() <span class="keyword">const</span>;
<a name="l00183"></a>00183 
<a name="l00184"></a>00184         <span class="keywordtype">bool</span> operator== (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhCollisionObject.htm" title="Collision object.">PhCollisionObject</a> other);
<a name="l00185"></a>00185 
<a name="l00186"></a>00186     };
<a name="l00187"></a>00187 
<a name="l00189"></a>00189 
<a name="l00192"></a><a class="code" href="structphoenix_1_1PhCollisionData.htm">00192</a>     <span class="keyword">struct </span><a class="code" href="structphoenix_1_1PhCollisionData.htm" title="Collision data.">PhCollisionData</a>
<a name="l00193"></a>00193     {
<a name="l00195"></a><a class="code" href="structphoenix_1_1PhCollisionData.htm#cf0ec8884812d5ba419ea4d1a6e07a4e">00195</a>         <span class="keywordtype">bool</span> <a class="code" href="structphoenix_1_1PhCollisionData.htm#cf0ec8884812d5ba419ea4d1a6e07a4e" title="True if a collision occured. This should always be true but it&amp;#39;s here for sanity&amp;#39;s...">collision</a>;
<a name="l00196"></a>00196 
<a name="l00198"></a>00198 
<a name="l00203"></a><a class="code" href="structphoenix_1_1PhCollisionData.htm#93309afeec0ad0fdbf25e051fe045096">00203</a>         <a class="code" href="classphoenix_1_1PhCollisionObject.htm" title="Collision object.">PhCollisionObject</a> <a class="code" href="structphoenix_1_1PhCollisionData.htm#93309afeec0ad0fdbf25e051fe045096" title="The first object.">objA</a>;
<a name="l00204"></a>00204 
<a name="l00206"></a>00206 
<a name="l00210"></a><a class="code" href="structphoenix_1_1PhCollisionData.htm#26d12f4913e7471512f297c8eb807b3d">00210</a>         <a class="code" href="classphoenix_1_1PhCollisionObject.htm" title="Collision object.">PhCollisionObject</a> <a class="code" href="structphoenix_1_1PhCollisionData.htm#26d12f4913e7471512f297c8eb807b3d" title="The second object.">objB</a>;
<a name="l00211"></a>00211 
<a name="l00213"></a>00213 
<a name="l00218"></a><a class="code" href="structphoenix_1_1PhCollisionData.htm#1e649bb6b04d9e87126b8411d21a2467">00218</a>         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> <a class="code" href="structphoenix_1_1PhCollisionData.htm#1e649bb6b04d9e87126b8411d21a2467" title="Normal of collision.">sep</a>;
<a name="l00219"></a>00219 
<a name="l00221"></a>00221 
<a name="l00226"></a><a class="code" href="structphoenix_1_1PhCollisionData.htm#d13369086eebac4bc06058cc315744b3">00226</a>         <span class="keywordtype">float</span> <a class="code" href="structphoenix_1_1PhCollisionData.htm#d13369086eebac4bc06058cc315744b3" title="Magnitude of separation.">sepmag</a>;
<a name="l00227"></a>00227     };
<a name="l00228"></a>00228 
<a name="l00229"></a>00229 }
<a name="l00230"></a>00230 
<a name="l00231"></a>00231 
<a name="l00232"></a>00232 <span class="preprocessor">#endif // PHPOLYGONCOLLISIONOBJECT_H</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:29:49 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
