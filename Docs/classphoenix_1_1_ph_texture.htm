<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhTexture Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.4 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1_ph_texture.htm">PhTexture</a></div>
<h1>phoenix::PhTexture Class Reference</h1><!-- doxytag: class="phoenix::PhTexture" -->Texture class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;PhTexture.h&gt;</code>
<p>

<p>
<a href="classphoenix_1_1_ph_texture-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#99c3abf21ee715edab8904e17f503822">PhTexture</a> (<a class="el" href="classphoenix_1_1_ph_texture_manager.htm">PhTextureManager</a> *t)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#99c3abf21ee715edab8904e17f503822"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#99d702bc6797ddf3667020aa93b0b3a9">PhTexture</a> (<a class="el" href="classphoenix_1_1_ph_texture_manager.htm">PhTextureManager</a> *t, int a, int b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#99d702bc6797ddf3667020aa93b0b3a9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#2443e84b4a2c02836e6ca12f554177f5">~PhTexture</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#2443e84b4a2c02836e6ca12f554177f5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#72b859841bfdb85fcb9ed049f89e8fca">setTexture</a> (GLuint text)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set texture.  <a href="#72b859841bfdb85fcb9ed049f89e8fca"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">GLuint&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#dc3a0dd9d77644ba0a3a3670add09a43">getTexture</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get texture.  <a href="#dc3a0dd9d77644ba0a3a3670add09a43"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#6f76067867160eb39a70bba72703b3f7">setName</a> (std::string nm)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set name.  <a href="#6f76067867160eb39a70bba72703b3f7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#77984931ab6c98d9cdcec38fa2919f6e">getName</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get name.  <a href="#77984931ab6c98d9cdcec38fa2919f6e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#ff188dd78688f0a60ae743b42b334fd2">setModified</a> (bool a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set modified.  <a href="#ff188dd78688f0a60ae743b42b334fd2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#cf275adf64b6cf115ac17d75a9dd2497">getModified</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get modified.  <a href="#cf275adf64b6cf115ac17d75a9dd2497"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#8f6608c5995775cf451770517612a34b">setWidth</a> (int var)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set width.  <a href="#8f6608c5995775cf451770517612a34b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#b9efc028441fb69e4e9de1c82e7de7f9">getWidth</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get width.  <a href="#b9efc028441fb69e4e9de1c82e7de7f9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#d1e44f4c2b233ffe966d446776cb0cf9">setHeight</a> (int var)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set height.  <a href="#d1e44f4c2b233ffe966d446776cb0cf9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#f0bfa803e97b1a87e866a279191bd873">getHeight</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get height.  <a href="#f0bfa803e97b1a87e866a279191bd873"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#1e0b05d8a00275da4c61b506eb671bba">lockTexture</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Lock texture.  <a href="#1e0b05d8a00275da4c61b506eb671bba"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#19bfc86ab392211ad40632ca99c71a02">unlockTexture</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Unlock texture.  <a href="#19bfc86ab392211ad40632ca99c71a02"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17">setPixel</a> (int x, int y, <a class="el" href="classphoenix_1_1_ph_color.htm">PhColor</a> col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set pixel.  <a href="#761d78842c461d40d70c592c02b13d17"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1_ph_color.htm">PhColor</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#cd399ca19b4b029354fdca43809c4a56">getPixel</a> (int x, int y)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get pixel.  <a href="#cd399ca19b4b029354fdca43809c4a56"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#2b24d288c536730fac9d1c7054f19763">bindTexture</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Bind texture.  <a href="#2b24d288c536730fac9d1c7054f19763"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="67fc7cc3c1c24b353906aa5800e998bb"></a><!-- doxytag: member="phoenix::PhTexture::texture" ref="67fc7cc3c1c24b353906aa5800e998bb" args="" -->
GLuint&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#67fc7cc3c1c24b353906aa5800e998bb">texture</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pointer to the OpenGL Texture. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="81863e77ccf3e9b76deb3593b05a437e"></a><!-- doxytag: member="phoenix::PhTexture::txtmgr" ref="81863e77ccf3e9b76deb3593b05a437e" args="" -->
<a class="el" href="classphoenix_1_1_ph_texture_manager.htm">PhTextureManager</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#81863e77ccf3e9b76deb3593b05a437e">txtmgr</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pointer to the texture manager. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="47c65d2bbddd94e1b0c6e8b95c9f7e84"></a><!-- doxytag: member="phoenix::PhTexture::width" ref="47c65d2bbddd94e1b0c6e8b95c9f7e84" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#47c65d2bbddd94e1b0c6e8b95c9f7e84">width</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Width of the texture. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="69aaf7b6e679624c3cbf19e8e217803a"></a><!-- doxytag: member="phoenix::PhTexture::height" ref="69aaf7b6e679624c3cbf19e8e217803a" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#69aaf7b6e679624c3cbf19e8e217803a">height</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Height of the texture. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#68cf41a1f457375b28b2812aea6a16b9">data</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Data used during texture manipulation.  <a href="#68cf41a1f457375b28b2812aea6a16b9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2699b1b2b7ccb38bac76cf7cfac6d6bd"></a><!-- doxytag: member="phoenix::PhTexture::name" ref="2699b1b2b7ccb38bac76cf7cfac6d6bd" args="" -->
std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_texture.htm#2699b1b2b7ccb38bac76cf7cfac6d6bd">name</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The texture's name. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Texture class. 
<p>
Provides a wrapper to OpenGL textures. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="99c3abf21ee715edab8904e17f503822"></a><!-- doxytag: member="phoenix::PhTexture::PhTexture" ref="99c3abf21ee715edab8904e17f503822" args="(PhTextureManager *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhTexture::PhTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_texture_manager.htm">PhTextureManager</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Simple constructor that makes a texture object that contains no texture. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>A pointer to the texture manager (for garbage collection). </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="99d702bc6797ddf3667020aa93b0b3a9"></a><!-- doxytag: member="phoenix::PhTexture::PhTexture" ref="99d702bc6797ddf3667020aa93b0b3a9" args="(PhTextureManager *t, int a, int b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhTexture::PhTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_texture_manager.htm">PhTextureManager</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>b</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Constructor that creates a texture object with the given dimensions. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>A pointer to the texture manager (for garbage collection). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The width of the texture. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>The height of the texture. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="2443e84b4a2c02836e6ca12f554177f5"></a><!-- doxytag: member="phoenix::PhTexture::~PhTexture" ref="2443e84b4a2c02836e6ca12f554177f5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhTexture::~PhTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>
Destroys this texture object and deletes the OpenGL texture. 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="72b859841bfdb85fcb9ed049f89e8fca"></a><!-- doxytag: member="phoenix::PhTexture::setTexture" ref="72b859841bfdb85fcb9ed049f89e8fca" args="(GLuint text)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTexture::setTexture           </td>
          <td>(</td>
          <td class="paramtype">GLuint&nbsp;</td>
          <td class="paramname"> <em>text</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set texture. 
<p>
Sets the OpenGL texture identifier of this texture object. Should never be called directly by the user, but can be used by custom image loading routines. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>text</em>&nbsp;</td><td>An OpenGL texture identifier. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#dc3a0dd9d77644ba0a3a3670add09a43" title="Get texture.">getTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="dc3a0dd9d77644ba0a3a3670add09a43"></a><!-- doxytag: member="phoenix::PhTexture::getTexture" ref="dc3a0dd9d77644ba0a3a3670add09a43" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLuint phoenix::PhTexture::getTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get texture. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The openGL texture identifier stored by this object. </dd></dl>

</div>
</div><p>
<a class="anchor" name="6f76067867160eb39a70bba72703b3f7"></a><!-- doxytag: member="phoenix::PhTexture::setName" ref="6f76067867160eb39a70bba72703b3f7" args="(std::string nm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTexture::setName           </td>
          <td>(</td>
          <td class="paramtype">std::string&nbsp;</td>
          <td class="paramname"> <em>nm</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set name. 
<p>
Sets a name for this texture, can be used by the user to keep track of textures. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>nm</em>&nbsp;</td><td>The name of the string (It is usually the filename of the texture loaded). </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#6f76067867160eb39a70bba72703b3f7" title="Set name.">setName()</a>, <a class="el" href="classphoenix_1_1_ph_texture_manager.htm" title="Texture manager.">phoenix::PhTextureManager</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="77984931ab6c98d9cdcec38fa2919f6e"></a><!-- doxytag: member="phoenix::PhTexture::getName" ref="77984931ab6c98d9cdcec38fa2919f6e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string phoenix::PhTexture::getName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get name. 
<p>
Gets the name of this texture. <dl class="return" compact><dt><b>Returns:</b></dt><dd>A string containing the name of this texture. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#77984931ab6c98d9cdcec38fa2919f6e" title="Get name.">getName()</a>, <a class="el" href="classphoenix_1_1_ph_texture_manager.htm" title="Texture manager.">phoenix::PhTextureManager</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="ff188dd78688f0a60ae743b42b334fd2"></a><!-- doxytag: member="phoenix::PhTexture::setModified" ref="ff188dd78688f0a60ae743b42b334fd2" args="(bool a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTexture::setModified           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set modified. 
<p>
Overrides the modifed value. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The new modified value. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#cf275adf64b6cf115ac17d75a9dd2497" title="Get modified.">getModified()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="cf275adf64b6cf115ac17d75a9dd2497"></a><!-- doxytag: member="phoenix::PhTexture::getModified" ref="cf275adf64b6cf115ac17d75a9dd2497" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool phoenix::PhTexture::getModified           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get modified. 
<p>
Returns true if the texture has been modified by the <a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17" title="Set pixel.">setPixel()</a> command. <dl class="return" compact><dt><b>Returns:</b></dt><dd>True if the texture has been modified. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#ff188dd78688f0a60ae743b42b334fd2" title="Set modified.">setModified()</a>, <a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17" title="Set pixel.">setPixel()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="8f6608c5995775cf451770517612a34b"></a><!-- doxytag: member="phoenix::PhTexture::setWidth" ref="8f6608c5995775cf451770517612a34b" args="(int var)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTexture::setWidth           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>var</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set width. 
<p>
Changes the width of the current texture (Power of 2). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>var</em>&nbsp;</td><td>The new width. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#b9efc028441fb69e4e9de1c82e7de7f9" title="Get width.">getWidth()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="b9efc028441fb69e4e9de1c82e7de7f9"></a><!-- doxytag: member="phoenix::PhTexture::getWidth" ref="b9efc028441fb69e4e9de1c82e7de7f9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int phoenix::PhTexture::getWidth           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get width. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current width of the texture. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#8f6608c5995775cf451770517612a34b" title="Set width.">setWidth()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="d1e44f4c2b233ffe966d446776cb0cf9"></a><!-- doxytag: member="phoenix::PhTexture::setHeight" ref="d1e44f4c2b233ffe966d446776cb0cf9" args="(int var)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTexture::setHeight           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>var</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set height. 
<p>
Changes the height of the current texture (Power of 2). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>var</em>&nbsp;</td><td>The new height. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#f0bfa803e97b1a87e866a279191bd873" title="Get height.">getHeight()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="f0bfa803e97b1a87e866a279191bd873"></a><!-- doxytag: member="phoenix::PhTexture::getHeight" ref="f0bfa803e97b1a87e866a279191bd873" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int phoenix::PhTexture::getHeight           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get height. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current height of the texture. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#d1e44f4c2b233ffe966d446776cb0cf9" title="Set height.">setHeight()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="1e0b05d8a00275da4c61b506eb671bba"></a><!-- doxytag: member="phoenix::PhTexture::lockTexture" ref="1e0b05d8a00275da4c61b506eb671bba" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool phoenix::PhTexture::lockTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Lock texture. 
<p>
Locks the texture. Before <a class="el" href="classphoenix_1_1_ph_texture.htm#cd399ca19b4b029354fdca43809c4a56" title="Get pixel.">getPixel()</a> or <a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17" title="Set pixel.">setPixel()</a> can be called, this must be called first. <dl class="return" compact><dt><b>Returns:</b></dt><dd>True if it was able to lock the texture. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#19bfc86ab392211ad40632ca99c71a02" title="Unlock texture.">unlockTexture()</a>, <a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17" title="Set pixel.">setPixel()</a>, <a class="el" href="classphoenix_1_1_ph_texture.htm#cd399ca19b4b029354fdca43809c4a56" title="Get pixel.">getPixel()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="19bfc86ab392211ad40632ca99c71a02"></a><!-- doxytag: member="phoenix::PhTexture::unlockTexture" ref="19bfc86ab392211ad40632ca99c71a02" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTexture::unlockTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Unlock texture. 
<p>
Unlocks the texture. It transfers all the texture data back into video memory. This must be called after the user is done modifying the texture with <a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17" title="Set pixel.">setPixel()</a>. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#1e0b05d8a00275da4c61b506eb671bba" title="Lock texture.">lockTexture()</a>, <a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17" title="Set pixel.">setPixel()</a>, <a class="el" href="classphoenix_1_1_ph_texture.htm#cd399ca19b4b029354fdca43809c4a56" title="Get pixel.">getPixel()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="761d78842c461d40d70c592c02b13d17"></a><!-- doxytag: member="phoenix::PhTexture::setPixel" ref="761d78842c461d40d70c592c02b13d17" args="(int x, int y, PhColor col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTexture::setPixel           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_color.htm">PhColor</a>&nbsp;</td>
          <td class="paramname"> <em>col</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set pixel. 
<p>
Changes a pixel to the given color. <a class="el" href="classphoenix_1_1_ph_texture.htm#1e0b05d8a00275da4c61b506eb671bba" title="Lock texture.">lockTexture()</a> must be called before this is possible. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>X value of the pixel. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Y value of the pixel. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>col</em>&nbsp;</td><td>The new color of the pixel. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#cd399ca19b4b029354fdca43809c4a56" title="Get pixel.">getPixel()</a>, <a class="el" href="classphoenix_1_1_ph_texture.htm#1e0b05d8a00275da4c61b506eb671bba" title="Lock texture.">lockTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="cd399ca19b4b029354fdca43809c4a56"></a><!-- doxytag: member="phoenix::PhTexture::getPixel" ref="cd399ca19b4b029354fdca43809c4a56" args="(int x, int y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1_ph_color.htm">PhColor</a> phoenix::PhTexture::getPixel           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get pixel. 
<p>
Gives the color of the given pixel. <a class="el" href="classphoenix_1_1_ph_texture.htm#1e0b05d8a00275da4c61b506eb671bba" title="Lock texture.">lockTexture()</a> must be called before this is possible. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>X value of the pixel. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Y value of the pixel. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The color of the pixel at position (x,y) </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17" title="Set pixel.">setPixel()</a>, <a class="el" href="classphoenix_1_1_ph_texture.htm#1e0b05d8a00275da4c61b506eb671bba" title="Lock texture.">lockTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="2b24d288c536730fac9d1c7054f19763"></a><!-- doxytag: member="phoenix::PhTexture::bindTexture" ref="2b24d288c536730fac9d1c7054f19763" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool phoenix::PhTexture::bindTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Bind texture. 
<p>
Binds this texture as the current openGL texture use for drawing. <dl class="return" compact><dt><b>Returns:</b></dt><dd>True if it was able to bind. </dd></dl>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="68cf41a1f457375b28b2812aea6a16b9"></a><!-- doxytag: member="phoenix::PhTexture::data" ref="68cf41a1f457375b28b2812aea6a16b9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char* <a class="el" href="classphoenix_1_1_ph_texture.htm#68cf41a1f457375b28b2812aea6a16b9">phoenix::PhTexture::data</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Data used during texture manipulation. 
<p>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_texture.htm#1e0b05d8a00275da4c61b506eb671bba" title="Lock texture.">lockTexture()</a>,<a class="el" href="classphoenix_1_1_ph_texture.htm#19bfc86ab392211ad40632ca99c71a02" title="Unlock texture.">unlockTexture()</a>,<a class="el" href="classphoenix_1_1_ph_texture.htm#761d78842c461d40d70c592c02b13d17" title="Set pixel.">setPixel()</a>,<a class="el" href="classphoenix_1_1_ph_texture.htm#cd399ca19b4b029354fdca43809c4a56" title="Get pixel.">getPixel()</a> </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>PhTexture.h</ul>
<hr size="1"><address style="text-align: right;"><small>Generated on Sat Dec 1 20:29:05 2007 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.4 </small></address>
</body>
</html>
