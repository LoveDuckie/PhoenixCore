<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhPolygonCollisionHandler Member List</h1>This is the complete list of members for <a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#be8702aa719ad5b711a3416a0cf69158">addObject</a>(PhCollisionObject *a)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#93330ba6be42cac9d090a0fb1f4f66a6">addStaticGeometry</a>(PhPolygon p, int t=1)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#b6bf447076414402c6201cf1f08f4fdc">addStaticGeometry</a>(PhStaticGeometry g)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#401ec582367346e05fb56e578367d27f">clearStaticGeometry</a>()</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#c62b4a6d2043e308299d25f91720f248">colobjs</a></td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>FindMTD</b>(vector&lt; PhVector2d &gt; *xAxis, vector&lt; float &gt; *taxis, int iNumAxes, PhVector2d &amp;N, float &amp;t) (defined in <a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a>)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>GetInterval</b>(const PhPolygon P, const PhVector2d &amp;xAxis, float &amp;min, float &amp;max) (defined in <a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a>)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#bfac41f918d9855484055b3115a4cc64">getStaticGeometry</a>()</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>IntervalIntersect</b>(const PhPolygon A, const PhPolygon B, const PhVector2d &amp;xAxis, float &amp;taxis) (defined in <a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a>)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#740f81298729bda1f4d665e6c0d1eb15">isColliding</a>(PhPolygon A, PhPolygon B)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#c412abbe15db9da27e7f3f504888dce6">isColliding</a>(PhCollisionObject *A, PhCollisionObject *B)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#d601bb23995d10bf4a8eaeeb246f5e45">level</a></td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#3f89a846226a998bc79ab6e15e81b190">PhPolygonCollisionHandler</a>()</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>PolygonCollision</b>(PhPolygon A, PhPolygon B, PhVector2d &amp;N, float &amp;t) (defined in <a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a>)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#1b3cc3ea86aab5d3d6556596e81c1d34">removeObject</a>(PhCollisionObject *a)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#baa4ecd0264df98c4280fcc54633d04d">removeStaticGeometry</a>(PhStaticGeometry g)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#b3d38b45f4e359eb28d2516f94f047f3">testCollisions</a>()</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#d50b7553a24c7beb37b73fb2c1585ae5">testObjectCollidingStatic</a>(PhCollisionObject *A)</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm#e37619e7163b231030bce92f7c78376a">~PhPolygonCollisionHandler</a>()</td><td><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">phoenix::PhPolygonCollisionHandler</a></td><td></td></tr>
</table></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:29:49 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
