<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhTimer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhTimer.htm">PhTimer</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhTimer Class Reference</h1><!-- doxytag: class="phoenix::PhTimer" -->Timer class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhTimer_8h-source.htm">PhTimer.h</a>&gt;</code>
<p>

<p>
<a href="classphoenix_1_1PhTimer-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9ec3e641cc3eeafcf2175bf76a84d950"></a><!-- doxytag: member="phoenix::PhTimer::PhTimer" ref="9ec3e641cc3eeafcf2175bf76a84d950" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm#9ec3e641cc3eeafcf2175bf76a84d950">PhTimer</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm#bae7bb2b578899d7361545319980bee4">startTimer</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Start timer.  <a href="#bae7bb2b578899d7361545319980bee4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm#733e92a757293eaad4af2bc11af46da9">stopTimer</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Stop timer.  <a href="#733e92a757293eaad4af2bc11af46da9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm#ed025f1890d0f2f49c5d56a6d09adedf">pauseTimer</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pause timer.  <a href="#ed025f1890d0f2f49c5d56a6d09adedf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm#4f820e3659872c72f944240410cbc080">resumeTimer</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resume Timer.  <a href="#4f820e3659872c72f944240410cbc080"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm#37f18186b40430d8aaf4e8adc1fdbf28">getTicks</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get ticks.  <a href="#37f18186b40430d8aaf4e8adc1fdbf28"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm#1f8deb95d0ce26ef2874b9eb35abff89">isStarted</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is started.  <a href="#1f8deb95d0ce26ef2874b9eb35abff89"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm#8b1b998501a2efc75c132b9d9ec09036">isPaused</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is paused.  <a href="#8b1b998501a2efc75c132b9d9ec09036"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Timer class. 
<p>
A class that provides a simple interface to a real time clock. This class might not ever be used by the user but it is used internally for FPS calculations. It's not suggested to do events based on a timer because of the fact that everything is done by frames, therefore it is better to do things by frames instead of seconds. <hr><h2>Member Function Documentation</h2>
<a class="anchor" name="37f18186b40430d8aaf4e8adc1fdbf28"></a><!-- doxytag: member="phoenix::PhTimer::getTicks" ref="37f18186b40430d8aaf4e8adc1fdbf28" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double phoenix::PhTimer::getTicks           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get ticks. 
<p>
Returns how many ticks (ms) the timer has gone through. <dl class="return" compact><dt><b>Returns:</b></dt><dd>Ticks in miliseconds. </dd></dl>

</div>
</div><p>
<a class="anchor" name="8b1b998501a2efc75c132b9d9ec09036"></a><!-- doxytag: member="phoenix::PhTimer::isPaused" ref="8b1b998501a2efc75c132b9d9ec09036" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool phoenix::PhTimer::isPaused           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is paused. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if the timer is paused. </dd></dl>

</div>
</div><p>
<a class="anchor" name="1f8deb95d0ce26ef2874b9eb35abff89"></a><!-- doxytag: member="phoenix::PhTimer::isStarted" ref="1f8deb95d0ce26ef2874b9eb35abff89" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool phoenix::PhTimer::isStarted           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is started. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if the timer has started. </dd></dl>

</div>
</div><p>
<a class="anchor" name="ed025f1890d0f2f49c5d56a6d09adedf"></a><!-- doxytag: member="phoenix::PhTimer::pauseTimer" ref="ed025f1890d0f2f49c5d56a6d09adedf" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTimer::pauseTimer           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Pause timer. 
<p>
Pauses the timer in place. 
</div>
</div><p>
<a class="anchor" name="4f820e3659872c72f944240410cbc080"></a><!-- doxytag: member="phoenix::PhTimer::resumeTimer" ref="4f820e3659872c72f944240410cbc080" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTimer::resumeTimer           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Resume Timer. 
<p>
Resumes the timer from where it stopped. 
</div>
</div><p>
<a class="anchor" name="bae7bb2b578899d7361545319980bee4"></a><!-- doxytag: member="phoenix::PhTimer::startTimer" ref="bae7bb2b578899d7361545319980bee4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTimer::startTimer           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Start timer. 
<p>
Starts the timer. 
</div>
</div><p>
<a class="anchor" name="733e92a757293eaad4af2bc11af46da9"></a><!-- doxytag: member="phoenix::PhTimer::stopTimer" ref="733e92a757293eaad4af2bc11af46da9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTimer::stopTimer           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Stop timer. 
<p>
Stops the timer and sets it to zero. 
</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>/home/jon/Phoenix/svn/0.3/libPhoenixGL/<a class="el" href="PhTimer_8h-source.htm">PhTimer.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri Apr 24 00:25:40 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
