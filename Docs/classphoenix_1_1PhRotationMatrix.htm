<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhRotationMatrix Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhRotationMatrix Class Reference</h1><!-- doxytag: class="phoenix::PhRotationMatrix" -->2D Rotation Matrix Class  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhRotationMatrix_8h-source.htm">PhRotationMatrix.h</a>&gt;</code>
<p>

<p>
<a href="classphoenix_1_1PhRotationMatrix-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#2f8a9028c21576d876f086e21ee79a67">PhRotationMatrix</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#2f8a9028c21576d876f086e21ee79a67"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#3ffc1de21fffc5ad9af0750c5247ef40">PhRotationMatrix</a> (float a, float b, float c, float d)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#3ffc1de21fffc5ad9af0750c5247ef40"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#a44b5fdd4fdfafe6ee57da1bd550dce6">PhRotationMatrix</a> (float a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#a44b5fdd4fdfafe6ee57da1bd550dce6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="29c0590b4bd01f04a80d03cac93bcca8"></a><!-- doxytag: member="phoenix::PhRotationMatrix::PhRotationMatrix" ref="29c0590b4bd01f04a80d03cac93bcca8" args="(const PhRotationMatrix &amp;other)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>PhRotationMatrix</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="23ebe8c46ca0c469eaf74c3fd0e61223"></a><!-- doxytag: member="phoenix::PhRotationMatrix::getElement" ref="23ebe8c46ca0c469eaf74c3fd0e61223" args="(const int &amp;id) const " -->
const float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#23ebe8c46ca0c469eaf74c3fd0e61223">getElement</a> (const int &amp;id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get element. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="325201b09aa8abdd9cba1639de475da1"></a><!-- doxytag: member="phoenix::PhRotationMatrix::setElement" ref="325201b09aa8abdd9cba1639de475da1" args="(const int &amp;id, const float &amp;val)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#325201b09aa8abdd9cba1639de475da1">setElement</a> (const int &amp;id, const float &amp;val)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set element. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#0271fb63ed65d3b342bb71cf7d66dfaa">setRotation</a> (const float &amp;rad)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set rotation.  <a href="#0271fb63ed65d3b342bb71cf7d66dfaa"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#1f4bcfcfcd790bfb5f048ecf895ed3ec">getRotation</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get rotation.  <a href="#1f4bcfcfcd790bfb5f048ecf895ed3ec"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#e475ff665bb82a66bc1476ff283da0bb">operator[]</a> (const int &amp;x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Element access operator.  <a href="#e475ff665bb82a66bc1476ff283da0bb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a230c4a74e5cedb98d2c93de0ca2ecd3"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator+" ref="a230c4a74e5cedb98d2c93de0ca2ecd3" args="(const PhRotationMatrix &amp;other) const " -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="934abdaa2836268392e450e7451f291b"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator&#45;" ref="934abdaa2836268392e450e7451f291b" args="(const PhRotationMatrix &amp;other) const " -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ba56f64fc6ec5f6e417ccf1e29127bf2"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator*" ref="ba56f64fc6ec5f6e417ccf1e29127bf2" args="(const PhRotationMatrix &amp;other) const " -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="62dab502a6559973255ea2d16c7582a8"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator*" ref="62dab502a6559973255ea2d16c7582a8" args="(const float &amp;scalar) const " -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (const float &amp;scalar) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#302bdb511406ed2d4215299ef6c27fab">operator*</a> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;other) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Vector multiplication operation.  <a href="#302bdb511406ed2d4215299ef6c27fab"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6d81fc4d6f48e8351d243b17e6d617e1"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator/" ref="6d81fc4d6f48e8351d243b17e6d617e1" args="(const PhRotationMatrix &amp;other) const " -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="440cd34d86866625b167492159a06d6f"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator/" ref="440cd34d86866625b167492159a06d6f" args="(const float &amp;scalar) const " -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/</b> (const float &amp;scalar) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1f16845ce3c909fb0ea7b9cbd05a1231"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator+=" ref="1f16845ce3c909fb0ea7b9cbd05a1231" args="(const PhRotationMatrix &amp;other)" -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="31b5cb78a1f95c4f790f8e629dfae769"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator&#45;=" ref="31b5cb78a1f95c4f790f8e629dfae769" args="(const PhRotationMatrix &amp;other)" -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ed8f0ae79cd5095b6744d93a5944ffd8"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator*=" ref="ed8f0ae79cd5095b6744d93a5944ffd8" args="(const PhRotationMatrix &amp;other)" -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="370c3038c0a40da59f8eeed2bd14a059"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator*=" ref="370c3038c0a40da59f8eeed2bd14a059" args="(const float &amp;scalar)" -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (const float &amp;scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6d987231ecde605d5285cd76cdf66c44"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator/=" ref="6d987231ecde605d5285cd76cdf66c44" args="(const PhRotationMatrix &amp;other)" -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="52407542ee584c403ae94c28ebb109d8"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator/=" ref="52407542ee584c403ae94c28ebb109d8" args="(const float &amp;scalar)" -->
const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (const float &amp;scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#6680adc49ccd794b206ceef5765b6a48">getDeterminant</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Determinant.  <a href="#6680adc49ccd794b206ceef5765b6a48"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#0e3ab987bd99bfd70eeaf30572e837fa">getInverse</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Inverse.  <a href="#0e3ab987bd99bfd70eeaf30572e837fa"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b2b630aed6f589a257a823a72e1cfdd8"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator==" ref="b2b630aed6f589a257a823a72e1cfdd8" args="(const PhRotationMatrix &amp;other) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ffde3664ea1bedef6a27d15b1fc128d4"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator!=" ref="ffde3664ea1bedef6a27d15b1fc128d4" args="(const PhRotationMatrix &amp;other) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other) const </td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6b42cd4b4255907507027846febf42bb"></a><!-- doxytag: member="phoenix::PhRotationMatrix::Elements" ref="6b42cd4b4255907507027846febf42bb" args="[4]" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><b>Elements</b> [4]</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
2D Rotation Matrix Class 
<p>
Provides a fast and efficient way to rotate vectors and polygons. <dl class="note" compact><dt><b>Note:</b></dt><dd>This is generally only used inside PhoenixGL, for rotation of vectors. <p>
Only ambigious operations are documented. </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="2f8a9028c21576d876f086e21ee79a67"></a><!-- doxytag: member="phoenix::PhRotationMatrix::PhRotationMatrix" ref="2f8a9028c21576d876f086e21ee79a67" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhRotationMatrix::PhRotationMatrix           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Creates an identity matrix ([1,0],[0,1]) 
</div>
</div><p>
<a class="anchor" name="3ffc1de21fffc5ad9af0750c5247ef40"></a><!-- doxytag: member="phoenix::PhRotationMatrix::PhRotationMatrix" ref="3ffc1de21fffc5ad9af0750c5247ef40" args="(float a, float b, float c, float d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhRotationMatrix::PhRotationMatrix           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>d</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Creates a matrix with given elements. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Element[0,0]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Element[0,1]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>Element[1,0]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>d</em>&nbsp;</td><td>Element[1,1]. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="a44b5fdd4fdfafe6ee57da1bd550dce6"></a><!-- doxytag: member="phoenix::PhRotationMatrix::PhRotationMatrix" ref="a44b5fdd4fdfafe6ee57da1bd550dce6" args="(float a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhRotationMatrix::PhRotationMatrix           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Creates a rotation matrix with the given angle. (Most common). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The angle (in radians). </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="6680adc49ccd794b206ceef5765b6a48"></a><!-- doxytag: member="phoenix::PhRotationMatrix::getDeterminant" ref="6680adc49ccd794b206ceef5765b6a48" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const float phoenix::PhRotationMatrix::getDeterminant           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Determinant. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The determinant of the matrix. </dd></dl>
<dl class="note" compact><dt><b>Note:</b></dt><dd>This is used by the inverse() function. </dd></dl>

</div>
</div><p>
<a class="anchor" name="0e3ab987bd99bfd70eeaf30572e837fa"></a><!-- doxytag: member="phoenix::PhRotationMatrix::getInverse" ref="0e3ab987bd99bfd70eeaf30572e837fa" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> phoenix::PhRotationMatrix::getInverse           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Inverse. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The multiplicative inverse of this matrix. </dd></dl>
<dl class="note" compact><dt><b>Note:</b></dt><dd>This is used by the division operators. </dd></dl>

</div>
</div><p>
<a class="anchor" name="1f4bcfcfcd790bfb5f048ecf895ed3ec"></a><!-- doxytag: member="phoenix::PhRotationMatrix::getRotation" ref="1f4bcfcfcd790bfb5f048ecf895ed3ec" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const float phoenix::PhRotationMatrix::getRotation           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get rotation. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The angle of rotation in radians. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#0271fb63ed65d3b342bb71cf7d66dfaa" title="Set rotation.">setRotation()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="302bdb511406ed2d4215299ef6c27fab"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator*" ref="302bdb511406ed2d4215299ef6c27fab" args="(const PhVector2d &amp;other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> phoenix::PhRotationMatrix::operator*           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>other</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Vector multiplication operation. 
<p>
Essentially rotates the given vector by this matrix. <dl class="note" compact><dt><b>Note:</b></dt><dd>This is mathematically incorrect, the vector should be the left-hand operand, and the matrix should be the right had operand. This is due to matrix multiplication rules. However we're not bound by that. </dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The rotated vector. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>other</em>&nbsp;</td><td>The vector to rotate. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="e475ff665bb82a66bc1476ff283da0bb"></a><!-- doxytag: member="phoenix::PhRotationMatrix::operator[]" ref="e475ff665bb82a66bc1476ff283da0bb" args="(const int &amp;x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float&amp; phoenix::PhRotationMatrix::operator[]           </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&nbsp;</td>
          <td class="paramname"> <em>x</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Element access operator. 
<p>
Allows you to access the matrix as a one-dimensional array. <dl class="return" compact><dt><b>Returns:</b></dt><dd>An element in the Matrix. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>The index of the element. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="0271fb63ed65d3b342bb71cf7d66dfaa"></a><!-- doxytag: member="phoenix::PhRotationMatrix::setRotation" ref="0271fb63ed65d3b342bb71cf7d66dfaa" args="(const float &amp;rad)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhRotationMatrix::setRotation           </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&nbsp;</td>
          <td class="paramname"> <em>rad</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set rotation. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>rad</em>&nbsp;</td><td>The angle of rotation in radians. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhRotationMatrix.htm#1f4bcfcfcd790bfb5f048ecf895ed3ec" title="Get rotation.">getRotation()</a> </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>/home/jon/Phoenix/svn/0.3/libPhoenixGL/<a class="el" href="PhRotationMatrix_8h-source.htm">PhRotationMatrix.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sat Apr 18 12:14:54 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
