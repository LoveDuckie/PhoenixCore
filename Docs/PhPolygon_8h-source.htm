<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: svn/0.3/libPhoenixGL/PhPolygon.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>svn/0.3/libPhoenixGL/PhPolygon.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2007, Jonathan Wayne Parrott, Denzel Morris</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the "Software"), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE.</span>
<a name="l00022"></a>00022 <span class="comment"></span>
<a name="l00023"></a>00023 <span class="comment">*/</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef PHOENIXPOLY</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define PHOENIXPOLY</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include "PhVector2d.h"</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include "PhRotationMatrix.h"</span>
<a name="l00031"></a>00031 
<a name="l00033"></a>00033 <span class="comment">//</span>
<a name="l00035"></a>00035 <span class="comment"></span>
<a name="l00036"></a>00036 <span class="keyword">namespace </span>phoenix
<a name="l00037"></a>00037 {
<a name="l00038"></a>00038 
<a name="l00039"></a>00039         <span class="comment">//forward decl of PhRect</span>
<a name="l00040"></a>00040         <span class="keyword">class </span>PhRect;
<a name="l00041"></a>00041 
<a name="l00043"></a>00043 
<a name="l00051"></a><a class="code" href="classphoenix_1_1PhPolygon.htm">00051</a>     <span class="keyword">class </span><a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>
<a name="l00052"></a>00052     {
<a name="l00053"></a>00053 
<a name="l00054"></a>00054     <span class="keyword">private</span>:
<a name="l00055"></a>00055 
<a name="l00056"></a>00056         std::vector&lt;PhVector2d&gt; verts; <span class="comment">//stores the list of verticies.</span>
<a name="l00057"></a>00057         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> pos; <span class="comment">//the vector representing the position of this polygon</span>
<a name="l00058"></a>00058         <span class="keywordtype">float</span> radius; <span class="comment">//the magnitude of the largest vector in the polygon, use for circle-exclusions.</span>
<a name="l00059"></a>00059 
<a name="l00060"></a>00060     <span class="keyword">public</span>:
<a name="l00061"></a>00061 
<a name="l00063"></a>00063         <a class="code" href="classphoenix_1_1PhPolygon.htm#505a51d10ad11e395270166094213f52" title="Constructor.">PhPolygon</a>();
<a name="l00064"></a>00064 
<a name="l00066"></a>00066 
<a name="l00069"></a>00069         <a class="code" href="classphoenix_1_1PhPolygon.htm#505a51d10ad11e395270166094213f52" title="Constructor.">PhPolygon</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; a);
<a name="l00070"></a>00070 
<a name="l00072"></a>00072 
<a name="l00075"></a>00075         <a class="code" href="classphoenix_1_1PhPolygon.htm#505a51d10ad11e395270166094213f52" title="Constructor.">PhPolygon</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRect.htm" title="Rectangle class.">PhRect</a>&amp; other);
<a name="l00076"></a>00076 
<a name="l00078"></a>00078         <a class="code" href="classphoenix_1_1PhPolygon.htm#c78ab77df131f1c1a583b8c7d534e900" title="Destructor.">~PhPolygon</a>();
<a name="l00079"></a>00079 
<a name="l00081"></a>00081 
<a name="l00084"></a>00084         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#1b4e69def70d0e851c4a4bfa1b899f29" title="Clear.">clear</a>();
<a name="l00085"></a>00085 
<a name="l00087"></a>00087 
<a name="l00091"></a><a class="code" href="classphoenix_1_1PhPolygon.htm#f304b404741f778c7a0973f25bb246b3">00091</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; <a class="code" href="classphoenix_1_1PhPolygon.htm#f304b404741f778c7a0973f25bb246b3" title="Get position.">getPosition</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> pos; }
<a name="l00092"></a>00092 
<a name="l00094"></a>00094 
<a name="l00100"></a><a class="code" href="classphoenix_1_1PhPolygon.htm#5ebdf47c19f80f7d689de27f76655978">00100</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#5ebdf47c19f80f7d689de27f76655978" title="Set position.">setPosition</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; a) { pos = a; }
<a name="l00101"></a>00101 
<a name="l00103"></a>00103 
<a name="l00111"></a>00111         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#9a71bf1e90daf35d470f55574d761377" title="Add vertex.">addVertex</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; a);
<a name="l00112"></a>00112 
<a name="l00114"></a>00114 
<a name="l00123"></a>00123         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#8e14867d07f5ddcf09b237e7f031b7ca" title="Add point.">addPoint</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; a);
<a name="l00124"></a>00124 
<a name="l00126"></a>00126 
<a name="l00129"></a><a class="code" href="classphoenix_1_1PhPolygon.htm#893d94f3c5fa9d74a57e9b3bcc6a68ed">00129</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#893d94f3c5fa9d74a57e9b3bcc6a68ed" title="Get vertex count.">getVertexCount</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> verts.size(); }
<a name="l00130"></a>00130 
<a name="l00132"></a>00132 
<a name="l00136"></a><a class="code" href="classphoenix_1_1PhPolygon.htm#0106198c6686c868511fea028bfec493">00136</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; <a class="code" href="classphoenix_1_1PhPolygon.htm#0106198c6686c868511fea028bfec493" title="Get vertex.">getVertex</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; a)<span class="keyword"> const</span>
<a name="l00137"></a>00137 <span class="keyword">        </span>{
<a name="l00138"></a>00138                         <span class="keywordflow">if</span> (a &lt; verts.size())
<a name="l00139"></a>00139                         {
<a name="l00140"></a>00140                                 <span class="keywordflow">return</span> verts[a];
<a name="l00141"></a>00141                         }
<a name="l00142"></a>00142                         <span class="keywordflow">return</span> *verts.end();
<a name="l00143"></a>00143                 }
<a name="l00144"></a>00144 
<a name="l00146"></a>00146 
<a name="l00150"></a><a class="code" href="classphoenix_1_1PhPolygon.htm#4eac6dc63bb1032fe1d12885e23a818d">00150</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#4eac6dc63bb1032fe1d12885e23a818d" title="Set vertex.">setVertex</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; a, <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; v)
<a name="l00151"></a>00151                 {
<a name="l00152"></a>00152                         <span class="keywordflow">if</span> (a &lt; verts.size())
<a name="l00153"></a>00153                         {
<a name="l00154"></a>00154                                 verts[a] = v;
<a name="l00155"></a>00155                         }
<a name="l00156"></a>00156                 }
<a name="l00157"></a>00157 
<a name="l00159"></a>00159 
<a name="l00162"></a><a class="code" href="classphoenix_1_1PhPolygon.htm#c4fa0df0db8d1bd94e00429bb0d391f6">00162</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">float</span>&amp; <a class="code" href="classphoenix_1_1PhPolygon.htm#c4fa0df0db8d1bd94e00429bb0d391f6" title="Get radius.">getRadius</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> radius; }
<a name="l00163"></a>00163 
<a name="l00165"></a>00165 
<a name="l00169"></a><a class="code" href="classphoenix_1_1PhPolygon.htm#a336e76bb15ad206bf44e2dcfdf5b037">00169</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#a336e76bb15ad206bf44e2dcfdf5b037" title="Rotate.">rotate</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; rad)
<a name="l00170"></a>00170                 {
<a name="l00171"></a>00171                         <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a> m(rad);
<a name="l00172"></a>00172                         <a class="code" href="classphoenix_1_1PhPolygon.htm#a336e76bb15ad206bf44e2dcfdf5b037" title="Rotate.">rotate</a>(m);
<a name="l00173"></a>00173                 }
<a name="l00174"></a>00174 
<a name="l00176"></a>00176 
<a name="l00180"></a>00180         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#a336e76bb15ad206bf44e2dcfdf5b037" title="Rotate.">rotate</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; m);
<a name="l00181"></a>00181 
<a name="l00183"></a>00183 
<a name="l00188"></a><a class="code" href="classphoenix_1_1PhPolygon.htm#f8b8c6fe178b8297687a7f1e922c0f6d">00188</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; <a class="code" href="classphoenix_1_1PhPolygon.htm#f8b8c6fe178b8297687a7f1e922c0f6d" title="Array operator.">operator[] </a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; a)
<a name="l00189"></a>00189         {
<a name="l00190"></a>00190             <span class="keywordflow">return</span> <a class="code" href="classphoenix_1_1PhPolygon.htm#0106198c6686c868511fea028bfec493" title="Get vertex.">getVertex</a>(a);
<a name="l00191"></a>00191         }
<a name="l00192"></a>00192 
<a name="l00193"></a>00193         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a> operator* (<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; scalar) <span class="keyword">const</span>;
<a name="l00194"></a>00194         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>&amp; operator*= (<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; scalar);
<a name="l00195"></a>00195         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a> operator* (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00196"></a>00196         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>&amp; operator*= (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other);
<a name="l00197"></a>00197 
<a name="l00198"></a>00198         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>&amp; operator= (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>&amp; other);
<a name="l00199"></a>00199         <span class="keyword">const</span> <span class="keywordtype">bool</span> operator== (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhPolygon.htm" title="Polygon class.">PhPolygon</a>&amp; other) <span class="keyword">const</span>;
<a name="l00200"></a>00200 
<a name="l00201"></a>00201     };
<a name="l00202"></a>00202 
<a name="l00203"></a>00203 }
<a name="l00204"></a>00204 
<a name="l00205"></a>00205 <span class="preprocessor">#include "PhRect.h"</span>
<a name="l00206"></a>00206 
<a name="l00207"></a>00207 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:29:49 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
