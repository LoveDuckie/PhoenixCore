<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhSpriteAnimation Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.3 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhSpriteAnimation.htm">PhSpriteAnimation</a></div>
<h1>phoenix::PhSpriteAnimation Class Reference</h1><!-- doxytag: class="phoenix::PhSpriteAnimation" --><!-- doxytag: inherits="phoenix::PhSceneNode" -->Sprite Animation.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;PhSpriteAnimation.h&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for phoenix::PhSpriteAnimation:</div>
<div class="dynsection">

<p><center><img src="classphoenix_1_1PhSpriteAnimation.png" usemap="#phoenix::PhSpriteAnimation_map" border="0" alt=""></center>
<map name="phoenix::PhSpriteAnimation_map">
<area href="classphoenix_1_1PhSceneNode.htm" alt="phoenix::PhSceneNode" shape="rect" coords="0,0,165,24">
</map>
</div>

<p>
<a href="classphoenix_1_1PhSpriteAnimation-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#ca99d3ee7521b8b57d774575a22a2116">PhSpriteAnimation</a> (<a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *s)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#ca99d3ee7521b8b57d774575a22a2116"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#9ac50417864105234a0d146aa5b40273">PhSpriteAnimation</a> (<a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *s, <a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *t, <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> a, <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> p=<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(0.0f, 0.0f))</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#9ac50417864105234a0d146aa5b40273"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2d3aebb219cebc266200e79c13d2142d"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::~PhSpriteAnimation" ref="2d3aebb219cebc266200e79c13d2142d" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#2d3aebb219cebc266200e79c13d2142d">~PhSpriteAnimation</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#933bf1e5b85a108379d2012da1a21c06">setTexture</a> (<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *t)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set texture.  <a href="#933bf1e5b85a108379d2012da1a21c06"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#cbf1d0a036c2c0bff307afb8ca865d70">getTexture</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">GEt Texture.  <a href="#cbf1d0a036c2c0bff307afb8ca865d70"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#21971bdb89d968a63e77467ad7305ae1">setAnimation</a> (int b, int e)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set animation.  <a href="#21971bdb89d968a63e77467ad7305ae1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#fbfe4e144685b372b5864291cfa313b6">setFrame</a> (int a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set frame.  <a href="#fbfe4e144685b372b5864291cfa313b6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#31a27d756cf4e620792b448f0eb29b98">getFrame</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get frame.  <a href="#31a27d756cf4e620792b448f0eb29b98"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#ec41d48e7c183e0e7eb09620cbbf6aed">setAnimationSpeed</a> (float a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set animation speed.  <a href="#ec41d48e7c183e0e7eb09620cbbf6aed"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#684ee775cc4b5bc378f0f452b984481c">getAnimationSpeed</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get animation speed.  <a href="#684ee775cc4b5bc378f0f452b984481c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#9c2d5a1f5c3b01b6c734e9d66e4213f0">setFrameSize</a> (<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> s)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set frame size.  <a href="#9c2d5a1f5c3b01b6c734e9d66e4213f0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#6a063d284d1ebaae954cf00d5d19bb75">getFrameSize</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get frame size.  <a href="#6a063d284d1ebaae954cf00d5d19bb75"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#bdcd4415808bd5b1837f69c71c6f61d3">setPosition</a> (<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> s)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set position.  <a href="#bdcd4415808bd5b1837f69c71c6f61d3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#f277cd73fc549ce5663fb2a50ead1718">getPosition</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get position.  <a href="#f277cd73fc549ce5663fb2a50ead1718"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#d22389ac0d9b9499dc1a8c2148701c07">getRotation</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get rotation.  <a href="#d22389ac0d9b9499dc1a8c2148701c07"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#65a95572fc771bd03ee9fff508ba605c">setRotation</a> (float r)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set rotation.  <a href="#65a95572fc771bd03ee9fff508ba605c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#f687120bb24884e10d4574fbf99b851c">getFlip</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get flip.  <a href="#f687120bb24884e10d4574fbf99b851c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#b94c6f758f40f140c0aa73088df11981">setFlip</a> (bool f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set flip.  <a href="#b94c6f758f40f140c0aa73088df11981"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#d19006ce1f6042b3574d6447ca961590">getColor</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get color.  <a href="#d19006ce1f6042b3574d6447ca961590"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#9e479f835c9eb0173a521b122dd06ee2">setColor</a> (<a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> c)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set color.  <a href="#9e479f835c9eb0173a521b122dd06ee2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#cfe4e0ecb8e1e54ea26c7d3372c4c85e">enable</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enable.  <a href="#cfe4e0ecb8e1e54ea26c7d3372c4c85e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#efdb5d69f79169ee78eafa5cc0ad1a52">disable</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disable.  <a href="#efdb5d69f79169ee78eafa5cc0ad1a52"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#734acb9f09a93f86419d455ea04c0ad5">onPreRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pre-render call.  <a href="#734acb9f09a93f86419d455ea04c0ad5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#1259f531e34183f660cea73e367a991e">onRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Render call.  <a href="#1259f531e34183f660cea73e367a991e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#634083e8f2a888149a3eaabf94f8663b">onPostRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Post-render call.  <a href="#634083e8f2a888149a3eaabf94f8663b"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Sprite Animation. 
<p>
This class provides a simple way to create simple sprite animations. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="ca99d3ee7521b8b57d774575a22a2116"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::PhSpriteAnimation" ref="ca99d3ee7521b8b57d774575a22a2116" args="(PhSceneManager *s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PhSpriteAnimation::PhSpriteAnimation           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Makes a blank sprite animation. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>A scenemanager. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="9ac50417864105234a0d146aa5b40273"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::PhSpriteAnimation" ref="9ac50417864105234a0d146aa5b40273" args="(PhSceneManager *s, PhTexture *t, PhVector2d a, PhVector2d p=PhVector2d(0.0f, 0.0f))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PhSpriteAnimation::PhSpriteAnimation           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *&nbsp;</td>
          <td class="paramname"> <em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>p</em> = <code><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(0.0f,0.0f)</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Makes a sprite animation. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>A scenemanager. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>Texture of the sprite sheet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Size of one cell (sprite). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p</em>&nbsp;</td><td>Position. </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="933bf1e5b85a108379d2012da1a21c06"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setTexture" ref="933bf1e5b85a108379d2012da1a21c06" args="(PhTexture *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set texture. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>New texture. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#cbf1d0a036c2c0bff307afb8ca865d70" title="GEt Texture.">getTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="cbf1d0a036c2c0bff307afb8ca865d70"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::getTexture" ref="cbf1d0a036c2c0bff307afb8ca865d70" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> * PhSpriteAnimation::getTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
GEt Texture. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current texture. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#933bf1e5b85a108379d2012da1a21c06" title="Set texture.">setTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="21971bdb89d968a63e77467ad7305ae1"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setAnimation" ref="21971bdb89d968a63e77467ad7305ae1" args="(int b, int e)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setAnimation           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>e</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set animation. 
<p>
Sets the bounding frames of the animation. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>The begining frame. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>e</em>&nbsp;</td><td>The ending frame. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="fbfe4e144685b372b5864291cfa313b6"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setFrame" ref="fbfe4e144685b372b5864291cfa313b6" args="(int a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setFrame           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set frame. 
<p>
Forces the frame to change. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The desired frame number. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#31a27d756cf4e620792b448f0eb29b98" title="Get frame.">getFrame()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="31a27d756cf4e620792b448f0eb29b98"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::getFrame" ref="31a27d756cf4e620792b448f0eb29b98" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int PhSpriteAnimation::getFrame           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get frame. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current frame. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#fbfe4e144685b372b5864291cfa313b6" title="Set frame.">setFrame()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="ec41d48e7c183e0e7eb09620cbbf6aed"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setAnimationSpeed" ref="ec41d48e7c183e0e7eb09620cbbf6aed" args="(float a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setAnimationSpeed           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set animation speed. 
<p>
Sets the animation speed, animation speed of 1.0f has no skipping frames. Values above 1.0f may skip frames, values below 1.0f will make frames last longer. <dl class="note" compact><dt><b>Note:</b></dt><dd>The speed is dependent on framerate. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The animation speed. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#684ee775cc4b5bc378f0f452b984481c" title="Get animation speed.">getAnimationSpeed()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="684ee775cc4b5bc378f0f452b984481c"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::getAnimationSpeed" ref="684ee775cc4b5bc378f0f452b984481c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float PhSpriteAnimation::getAnimationSpeed           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get animation speed. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current animation speed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#ec41d48e7c183e0e7eb09620cbbf6aed" title="Set animation speed.">setAnimationSpeed()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="9c2d5a1f5c3b01b6c734e9d66e4213f0"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setFrameSize" ref="9c2d5a1f5c3b01b6c734e9d66e4213f0" args="(PhVector2d s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setFrameSize           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set frame size. 
<p>
Sets the current size of one frame (cell) of animation. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>The new cell size. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#6a063d284d1ebaae954cf00d5d19bb75" title="Get frame size.">getFrameSize()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="6a063d284d1ebaae954cf00d5d19bb75"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::getFrameSize" ref="6a063d284d1ebaae954cf00d5d19bb75" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> PhSpriteAnimation::getFrameSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get frame size. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current frame (cell) size. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#9c2d5a1f5c3b01b6c734e9d66e4213f0" title="Set frame size.">setFrameSize()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="bdcd4415808bd5b1837f69c71c6f61d3"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setPosition" ref="bdcd4415808bd5b1837f69c71c6f61d3" args="(PhVector2d s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setPosition           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set position. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>The new position. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#f277cd73fc549ce5663fb2a50ead1718" title="Get position.">getPosition()</a></dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>The new position. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#f277cd73fc549ce5663fb2a50ead1718" title="Get position.">getPosition()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="f277cd73fc549ce5663fb2a50ead1718"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::getPosition" ref="f277cd73fc549ce5663fb2a50ead1718" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> PhSpriteAnimation::getPosition           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get position. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current position. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#bdcd4415808bd5b1837f69c71c6f61d3" title="Set position.">setPosition()</a></dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current position. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#bdcd4415808bd5b1837f69c71c6f61d3" title="Set position.">setPosition()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="d22389ac0d9b9499dc1a8c2148701c07"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::getRotation" ref="d22389ac0d9b9499dc1a8c2148701c07" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float PhSpriteAnimation::getRotation           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get rotation. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current rotation (in degrees).<p>
The current rotation (in degrees). </dd></dl>

</div>
</div><p>
<a class="anchor" name="65a95572fc771bd03ee9fff508ba605c"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setRotation" ref="65a95572fc771bd03ee9fff508ba605c" args="(float r)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setRotation           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>r</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set rotation. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>r</em>&nbsp;</td><td>New rotation (in degrees).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>r</em>&nbsp;</td><td>New rotation (in degrees). </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="f687120bb24884e10d4574fbf99b851c"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::getFlip" ref="f687120bb24884e10d4574fbf99b851c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool PhSpriteAnimation::getFlip           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get flip. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>If the sprite is being flipped.<p>
If the sprite is being flipped. </dd></dl>

</div>
</div><p>
<a class="anchor" name="b94c6f758f40f140c0aa73088df11981"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setFlip" ref="b94c6f758f40f140c0aa73088df11981" args="(bool f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setFlip           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>f</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set flip. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>f</em>&nbsp;</td><td>Pass true to flip the sprite.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>f</em>&nbsp;</td><td>Pass true to flip the sprite. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="d19006ce1f6042b3574d6447ca961590"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::getColor" ref="d19006ce1f6042b3574d6447ca961590" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> PhSpriteAnimation::getColor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get color. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current blending color.<p>
The current blending color. </dd></dl>

</div>
</div><p>
<a class="anchor" name="9e479f835c9eb0173a521b122dd06ee2"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::setColor" ref="9e479f835c9eb0173a521b122dd06ee2" args="(PhColor c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::setColor           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>&nbsp;</td>
          <td class="paramname"> <em>c</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set color. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>The new blending color.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>The new blending color. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="cfe4e0ecb8e1e54ea26c7d3372c4c85e"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::enable" ref="cfe4e0ecb8e1e54ea26c7d3372c4c85e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::enable           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Enable. 
<p>
Enables this sprite.<p>
PhSpriteAnimation::Enables this sprite. 
</div>
</div><p>
<a class="anchor" name="efdb5d69f79169ee78eafa5cc0ad1a52"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::disable" ref="efdb5d69f79169ee78eafa5cc0ad1a52" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::disable           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Disable. 
<p>
Disables this sprite.<p>
PhSpriteAnimation::Disables this sprite. 
</div>
</div><p>
<a class="anchor" name="734acb9f09a93f86419d455ea04c0ad5"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::onPreRender" ref="734acb9f09a93f86419d455ea04c0ad5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::onPreRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Pre-render call. 
<p>
All nodes in the list will have this function called by the scenemanger once per frame. Overloading this is required. If the scene node wants to be drawn it must call phoenix::PhSceneManger::registerForRendering(). 
<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#aadc8431e4764b5beb8f5dec11b5354f">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="1259f531e34183f660cea73e367a991e"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::onRender" ref="1259f531e34183f660cea73e367a991e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::onRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Render call. 
<p>
Any nodes that called phoenix::PhSceneManger::registerForRendering() will first be sorted according to their depth, then this function is called for each node in order. It is highly suggested that you put any drawing code in this function. Of course, it's possible to draw during any of the three node passes, but this pass is the only one that is exclusive (Nodes must register) and is the only one that is depth sorted. 
<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#dbc845e590cb208ee4aae79e407dc0a0">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="634083e8f2a888149a3eaabf94f8663b"></a><!-- doxytag: member="phoenix::PhSpriteAnimation::onPostRender" ref="634083e8f2a888149a3eaabf94f8663b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhSpriteAnimation::onPostRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Post-render call. 
<p>
The third render pass takes place at the end of every frame, the scene manager calls this function for every node in the list, and any code that should happen after everything is drawn should go here. 
<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#7048c33dcc9397d0c890222d41de0280">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li>/home/jon/Desktop/Documents/workspace/Phoenix SVN/0.1.1/libPhoenixGL/PhSpriteAnimation.h<li>/home/jon/Desktop/Documents/workspace/Phoenix SVN/0.1.1/libPhoenixGL/PhSpriteAnimation.cpp</ul>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Jan 27 21:54:43 2008 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.3 </small></address>
</body>
</html>
