<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: /home/jon/Phoenix/svn/0.3/libPhoenixGL/PhVector2d.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>/home/jon/Phoenix/svn/0.3/libPhoenixGL/PhVector2d.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="preprocessor">#ifndef PHVECTOR2D_H</span>
<a name="l00002"></a>00002 <span class="preprocessor"></span><span class="preprocessor">#define PHVECTOR2D_H</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span>
<a name="l00004"></a>00004 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00005"></a>00005 <span class="preprocessor">#include "PhRotationMatrix.h"</span>
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="keyword">namespace </span>phoenix
<a name="l00008"></a>00008 {
<a name="l00009"></a>00009 
<a name="l00011"></a>00011 
<a name="l00017"></a><a class="code" href="namespacephoenix.htm#4815ace64148335009c65ebf20ee778b">00017</a>     <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacephoenix.htm#4815ace64148335009c65ebf20ee778b" title="Radians to degrees.">RadiansToDegrees</a>(<span class="keywordtype">float</span> rad)
<a name="l00018"></a>00018     {
<a name="l00019"></a>00019         <span class="keyword">const</span> <span class="keywordtype">float</span> k = 180.0f / 3.14159265f;
<a name="l00020"></a>00020         <span class="keywordflow">return</span> rad * k;
<a name="l00021"></a>00021     }
<a name="l00022"></a>00022 
<a name="l00024"></a>00024 
<a name="l00030"></a><a class="code" href="namespacephoenix.htm#1368b3c3902a8c607499ab7455fff300">00030</a>     <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacephoenix.htm#1368b3c3902a8c607499ab7455fff300" title="Degrees to radians.">DegreesToRadians</a>(<span class="keywordtype">float</span> deg)
<a name="l00031"></a>00031     {
<a name="l00032"></a>00032         <span class="keyword">const</span> <span class="keywordtype">float</span> k = 3.14159265f / 180.0f;
<a name="l00033"></a>00033         <span class="keywordflow">return</span> deg * k;
<a name="l00034"></a>00034     }
<a name="l00035"></a>00035 
<a name="l00037"></a>00037 
<a name="l00041"></a><a class="code" href="classphoenix_1_1PhVector2d.htm">00041</a>     <span class="keyword">class </span><a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>
<a name="l00042"></a>00042     {
<a name="l00043"></a>00043     <span class="keyword">public</span>:
<a name="l00044"></a>00044 
<a name="l00045"></a>00045         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>();
<a name="l00046"></a>00046         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>(<span class="keywordtype">float</span> a, <span class="keywordtype">float</span> b);
<a name="l00047"></a>00047 
<a name="l00048"></a>00048         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">float</span> getX()<span class="keyword"> const</span>
<a name="l00049"></a>00049 <span class="keyword">        </span>{
<a name="l00050"></a>00050             <span class="keywordflow">return</span> x;
<a name="l00051"></a>00051         }
<a name="l00052"></a>00052         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">float</span> getY()<span class="keyword"> const</span>
<a name="l00053"></a>00053 <span class="keyword">        </span>{
<a name="l00054"></a>00054             <span class="keywordflow">return</span> y;
<a name="l00055"></a>00055         }
<a name="l00056"></a>00056         <span class="keyword">inline</span> <span class="keywordtype">void</span> setX( <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;a )
<a name="l00057"></a>00057         {
<a name="l00058"></a>00058             x = a;
<a name="l00059"></a>00059         }
<a name="l00060"></a>00060         <span class="keyword">inline</span> <span class="keywordtype">void</span> setY( <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;b )
<a name="l00061"></a>00061         {
<a name="l00062"></a>00062             y = b;
<a name="l00063"></a>00063         }
<a name="l00064"></a>00064 
<a name="l00065"></a>00065         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator = (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue);
<a name="l00066"></a>00066 
<a name="l00067"></a>00067         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator+=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue);
<a name="l00068"></a>00068         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator-=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue);
<a name="l00069"></a>00069 
<a name="l00070"></a>00070         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator+(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00071"></a>00071         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator-(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00072"></a>00072 
<a name="l00073"></a>00073         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator+(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00074"></a>00074         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator-(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00075"></a>00075         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator*(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00076"></a>00076         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator/(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00077"></a>00077 
<a name="l00078"></a>00078         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator+=(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue);
<a name="l00079"></a>00079         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator-=(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue);
<a name="l00080"></a>00080         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator*=(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue);
<a name="l00081"></a>00081         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator/=(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue);
<a name="l00082"></a>00082 
<a name="l00083"></a>00083         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator-(<span class="keywordtype">void</span>) <span class="keyword">const</span>;
<a name="l00084"></a>00084 
<a name="l00085"></a>00085         <span class="keywordtype">bool</span> operator == (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00086"></a>00086         <span class="keywordtype">bool</span> operator != (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00087"></a>00087 
<a name="l00089"></a>00089         <span class="keyword">const</span> <span class="keywordtype">float</span> operator*(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00090"></a>00090 
<a name="l00092"></a>00092         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#4ebbeb5cdb7194d5a78dbfa3eb8d2cfd" title="Cross Product.">operator^</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00093"></a>00093 
<a name="l00095"></a>00095 
<a name="l00099"></a>00099         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#8b1b88ca06bf7ad0e837cc9ae08c4f25" title="Normalization.">normalize</a>();
<a name="l00100"></a>00100 
<a name="l00102"></a>00102 
<a name="l00106"></a>00106         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#3d5bac07b16660fc64d6696b5321d02a" title="Magnitude.">getMagnitude</a>() <span class="keyword">const</span>;
<a name="l00107"></a>00107 
<a name="l00109"></a>00109 
<a name="l00114"></a>00114         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#723764cc87db234b7ab3312a469d201d" title="Magnitude squared.">getMagnitudeSquared</a>() <span class="keyword">const</span>;
<a name="l00115"></a>00115 
<a name="l00117"></a>00117 
<a name="l00122"></a>00122         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> <a class="code" href="classphoenix_1_1PhVector2d.htm#cfa5b3c40471fc4f59a17b0aeb378c61" title="Projection.">project</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; b);
<a name="l00123"></a>00123 
<a name="l00125"></a>00125 
<a name="l00128"></a>00128         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> <a class="code" href="classphoenix_1_1PhVector2d.htm#20121f2f137be421b212f4c8bf91b49f" title="Direction.">getDirection</a>(<span class="keywordtype">void</span>) <span class="keyword">const</span>;
<a name="l00129"></a>00129 
<a name="l00131"></a>00131 
<a name="l00136"></a>00136         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; <a class="code" href="classphoenix_1_1PhVector2d.htm#8c6c7a5dedf95e747f90432244d57343" title="Rotate.">rotate</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; angle);
<a name="l00137"></a>00137 
<a name="l00139"></a>00139 
<a name="l00145"></a>00145         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#bf4fa0bc70bd158129b8f8455f71d016" title="Get angle.">getAngle</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; xE = <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>(1.0f,0) ) <span class="keyword">const</span>;
<a name="l00146"></a>00146 
<a name="l00148"></a>00148 
<a name="l00153"></a>00153         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator * (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00154"></a>00154 
<a name="l00155"></a>00155         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator *= (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other);
<a name="l00156"></a>00156 
<a name="l00157"></a>00157         ~<a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>();
<a name="l00158"></a>00158     <span class="keyword">protected</span>:
<a name="l00159"></a>00159         <span class="keywordtype">float</span> x,y;
<a name="l00160"></a>00160     <span class="keyword">private</span>:
<a name="l00161"></a>00161     };
<a name="l00162"></a>00162 
<a name="l00163"></a>00163     <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator*(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;lvalue, <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue);
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 }
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 <span class="preprocessor">#endif // PHVECTOR2D_H</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri Apr 24 00:25:39 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
