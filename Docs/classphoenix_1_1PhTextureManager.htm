<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhTextureManager Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.3 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhTextureManager.htm">PhTextureManager</a></div>
<h1>phoenix::PhTextureManager Class Reference</h1><!-- doxytag: class="phoenix::PhTextureManager" -->Texture manager.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;PhTextureManager.h&gt;</code>
<p>

<p>
<a href="classphoenix_1_1PhTextureManager-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5a8fd2231786df9f8bdcc0e3041019e0"></a><!-- doxytag: member="phoenix::PhTextureManager::PhTextureManager" ref="5a8fd2231786df9f8bdcc0e3041019e0" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#5a8fd2231786df9f8bdcc0e3041019e0">PhTextureManager</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#c0354b671dcf8be850c7e6b6a5f991bc">~PhTextureManager</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#c0354b671dcf8be850c7e6b6a5f991bc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#51b5aeb69055ef90f1f4c086be828fce">addTexture</a> (<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *texture)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Add texture.  <a href="#51b5aeb69055ef90f1f4c086be828fce"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#9c77623d437aea744d3cac751eea3cee">removeTexture</a> (<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *texture)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Remove texture.  <a href="#9c77623d437aea744d3cac751eea3cee"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#bccaa32d76364958aa912e027396b562">deleteTextures</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Delete textures.  <a href="#bccaa32d76364958aa912e027396b562"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#73be042877f760caae45e923ceee07c9">findTexture</a> (std::string n)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Find texture.  <a href="#73be042877f760caae45e923ceee07c9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#48bc18b5a37c380fa92f03317c78c0e9">findTexture</a> (GLuint n)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Find texture.  <a href="#48bc18b5a37c380fa92f03317c78c0e9"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4ad76e2615e6eba395e17169049b60a4"></a><!-- doxytag: member="phoenix::PhTextureManager::texturelist" ref="4ad76e2615e6eba395e17169049b60a4" args="" -->
vector&lt; <a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#4ad76e2615e6eba395e17169049b60a4">texturelist</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">List of all the textures currently loaded. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Texture manager. 
<p>
This class takes care of cleaning up all textures after the program exits. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhTexture.htm" title="Texture class.">PhTexture</a>, <a class="el" href="classphoenix_1_1PhRenderSystem.htm" title="The render system.">PhRenderSystem</a> </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="c0354b671dcf8be850c7e6b6a5f991bc"></a><!-- doxytag: member="phoenix::PhTextureManager::~PhTextureManager" ref="c0354b671dcf8be850c7e6b6a5f991bc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PhTextureManager::~PhTextureManager           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>
When this object is destroyed (It will be automatically destroyed when the render system is destroyed). It deletes all the textures. 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="51b5aeb69055ef90f1f4c086be828fce"></a><!-- doxytag: member="phoenix::PhTextureManager::addTexture" ref="51b5aeb69055ef90f1f4c086be828fce" args="(PhTexture *texture)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhTextureManager::addTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>texture</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add texture. 
<p>
Adds a texture to the list. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>texture</em>&nbsp;</td><td>A pointer to the texture to be stored. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhTextureManager.htm#9c77623d437aea744d3cac751eea3cee" title="Remove texture.">removeTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="9c77623d437aea744d3cac751eea3cee"></a><!-- doxytag: member="phoenix::PhTextureManager::removeTexture" ref="9c77623d437aea744d3cac751eea3cee" args="(PhTexture *texture)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhTextureManager::removeTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>texture</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remove texture. 
<p>
Removes a texture to the list. Does not actually delete the texture. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>texture</em>&nbsp;</td><td>A pointer to the texture to be stored. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhTextureManager.htm#51b5aeb69055ef90f1f4c086be828fce" title="Add texture.">addTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="bccaa32d76364958aa912e027396b562"></a><!-- doxytag: member="phoenix::PhTextureManager::deleteTextures" ref="bccaa32d76364958aa912e027396b562" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhTextureManager::deleteTextures           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Delete textures. 
<p>
Deletes all the textures in the list. 
</div>
</div><p>
<a class="anchor" name="73be042877f760caae45e923ceee07c9"></a><!-- doxytag: member="phoenix::PhTextureManager::findTexture" ref="73be042877f760caae45e923ceee07c9" args="(std::string n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> * PhTextureManager::findTexture           </td>
          <td>(</td>
          <td class="paramtype">std::string&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Find texture. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>The name of the texture you want to find. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A pointer to the texture if found, else NULL.</dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>The name of the texture you want to find. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A pointer to the texture if found, else NULL. </dd></dl>

</div>
</div><p>
<a class="anchor" name="48bc18b5a37c380fa92f03317c78c0e9"></a><!-- doxytag: member="phoenix::PhTextureManager::findTexture" ref="48bc18b5a37c380fa92f03317c78c0e9" args="(GLuint n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> * PhTextureManager::findTexture           </td>
          <td>(</td>
          <td class="paramtype">GLuint&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Find texture. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>The GL id of the texture you want to find. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A pointer to the texture if found, else NULL.</dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>The GL id of the texture you want to find. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A pointer to the texture if found, else NULL. </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li>/home/jon/Desktop/Documents/workspace/Phoenix SVN/0.1.1/libPhoenixGL/PhTextureManager.h<li>/home/jon/Desktop/Documents/workspace/Phoenix SVN/0.1.1/libPhoenixGL/PhTextureManager.cpp</ul>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Jan 27 21:54:43 2008 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.3 </small></address>
</body>
</html>
