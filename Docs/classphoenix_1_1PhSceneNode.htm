<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhSceneNode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhSceneNode.htm">PhSceneNode</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhSceneNode Class Reference</h1><!-- doxytag: class="phoenix::PhSceneNode" -->Scenenode Prototype.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhSceneNode_8h-source.htm">PhSceneNode.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for phoenix::PhSceneNode:</div>
<div class="dynsection">
<p><center><img src="classphoenix_1_1PhSceneNode__inherit__graph.png" border="0" usemap="#phoenix_1_1PhSceneNode__inherit__map" alt="Inheritance graph"></center>
<map name="phoenix_1_1PhSceneNode__inherit__map">
<area shape="rect" href="classphoenix_1_1PhBackground.htm" title="Simple background implementation." alt="" coords="239,5,399,32"><area shape="rect" href="classphoenix_1_1PhDrawSceneNode.htm" title="Draw scene node." alt="" coords="225,56,412,83"><area shape="rect" href="classphoenix_1_1PhExtendedBackground.htm" title="Extended Background." alt="" coords="212,107,425,133"><area shape="rect" href="classphoenix_1_1PhParticleSystem.htm" title="Abstract Particle System." alt="" coords="229,157,408,184"><area shape="rect" href="classphoenix_1_1PhSolidBackground.htm" title="Solid background node." alt="" coords="225,208,412,235"><area shape="rect" href="classphoenix_1_1PhSpriteAnimation.htm" title="Sprite Animation." alt="" coords="228,259,409,285"><area shape="rect" href="classphoenix_1_1PhTileMap.htm" title="Tile map." alt="" coords="251,309,387,336"></map>
<center><font size="2">[<a href="graph_legend.htm">legend</a>]</font></center></div>

<p>
<a href="classphoenix_1_1PhSceneNode-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm#20f75317ec1cd759226416165cc0f3b7">PhSceneNode</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#20f75317ec1cd759226416165cc0f3b7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d3c59d43acb34ca68bd9d0bae1054d72"></a><!-- doxytag: member="phoenix::PhSceneNode::PhSceneNode" ref="d3c59d43acb34ca68bd9d0bae1054d72" args="(float d)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>PhSceneNode</b> (float d)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm#2341ae69a4e1592045bbdd902589ccb8">~PhSceneNode</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Virtual destructor.  <a href="#2341ae69a4e1592045bbdd902589ccb8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm#aadc8431e4764b5beb8f5dec11b5354f">onPreRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pre-render call.  <a href="#aadc8431e4764b5beb8f5dec11b5354f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm#dbc845e590cb208ee4aae79e407dc0a0">onRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Render call.  <a href="#dbc845e590cb208ee4aae79e407dc0a0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm#7048c33dcc9397d0c890222d41de0280">onPostRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Post-render call.  <a href="#7048c33dcc9397d0c890222d41de0280"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm#8b855da5b707bf4dfd0658583c379500">setDepth</a> (float d)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set depth function.  <a href="#8b855da5b707bf4dfd0658583c379500"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm#28d94938552696b858fa54c548bf2c39">getDepth</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get depth function.  <a href="#28d94938552696b858fa54c548bf2c39"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm#82a555cd9fc4b98a78df8a4ec87ebf38">depth</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Depth value.  <a href="#82a555cd9fc4b98a78df8a4ec87ebf38"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Scenenode Prototype. 
<p>
This is the prototype for a scenenode, all scenenodes should be derived from this class. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="20f75317ec1cd759226416165cc0f3b7"></a><!-- doxytag: member="phoenix::PhSceneNode::PhSceneNode" ref="20f75317ec1cd759226416165cc0f3b7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhSceneNode::PhSceneNode           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Does nothing as this is a base class meant to be derived from. 
</div>
</div><p>
<a class="anchor" name="2341ae69a4e1592045bbdd902589ccb8"></a><!-- doxytag: member="phoenix::PhSceneNode::~PhSceneNode" ref="2341ae69a4e1592045bbdd902589ccb8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual phoenix::PhSceneNode::~PhSceneNode           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Virtual destructor. 
<p>
Does nothing. In overloaded destructors the node should remove itself from the scenemanager. 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="28d94938552696b858fa54c548bf2c39"></a><!-- doxytag: member="phoenix::PhSceneNode::getDepth" ref="28d94938552696b858fa54c548bf2c39" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhSceneNode::getDepth           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get depth function. 
<p>
Returns the current depth of this node. <dl class="return" compact><dt><b>Returns:</b></dt><dd>Current depth. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSceneNode.htm#82a555cd9fc4b98a78df8a4ec87ebf38" title="Depth value.">depth</a> </dd></dl>

<p>References <a class="el" href="PhSceneNode_8h-source.htm#l00047">depth</a>.</p>

</div>
</div><p>
<a class="anchor" name="7048c33dcc9397d0c890222d41de0280"></a><!-- doxytag: member="phoenix::PhSceneNode::onPostRender" ref="7048c33dcc9397d0c890222d41de0280" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void phoenix::PhSceneNode::onPostRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Post-render call. 
<p>
The third render pass takes place at the end of every frame, the scene manager calls this function for every node in the list, and any code that should happen after everything is drawn should go here. 
<p>Reimplemented in <a class="el" href="classphoenix_1_1PhBackground.htm#cd45cb4f715f32f07f7ac155c67d21be">phoenix::PhBackground</a>, <a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#c02b6c1ca444d8f41db301041b8aa08e">phoenix::PhDrawSceneNode</a>, <a class="el" href="classphoenix_1_1PhExtendedBackground.htm#79ec85978c4b0cda714fbe3e7e84ade4">phoenix::PhExtendedBackground</a>, <a class="el" href="classphoenix_1_1PhParticleSystem.htm#6462407dd67d130a6a6dcbcb388d7a5b">phoenix::PhParticleSystem</a>, <a class="el" href="classphoenix_1_1PhSolidBackground.htm#0ecb583cf77e58646c92e8a725cb1be3">phoenix::PhSolidBackground</a>, <a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#9422d23558eed9ff633700b6b9517e19">phoenix::PhSpriteAnimation</a>, and <a class="el" href="classphoenix_1_1PhTileMap.htm#d3d6de5addbee14e229afa8b3d54168a">phoenix::PhTileMap</a>.</p>

</div>
</div><p>
<a class="anchor" name="aadc8431e4764b5beb8f5dec11b5354f"></a><!-- doxytag: member="phoenix::PhSceneNode::onPreRender" ref="aadc8431e4764b5beb8f5dec11b5354f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void phoenix::PhSceneNode::onPreRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Pre-render call. 
<p>
All nodes in the list will have this function called by the scenemanger once per frame. Overloading this is required. If the scene node wants to be drawn it must call phoenix::PhSceneManger::registerForRendering(). 
<p>Reimplemented in <a class="el" href="classphoenix_1_1PhBackground.htm#939ce968e2ea2d5779d7c52b10d3e55f">phoenix::PhBackground</a>, <a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#6b84dfc26a9e117db35a117917b5eb3e">phoenix::PhDrawSceneNode</a>, <a class="el" href="classphoenix_1_1PhExtendedBackground.htm#7326daa543f9b85837eb7316576c424c">phoenix::PhExtendedBackground</a>, <a class="el" href="classphoenix_1_1PhParticleSystem.htm#bbdf877b0b815642b71d86199e8c1af4">phoenix::PhParticleSystem</a>, <a class="el" href="classphoenix_1_1PhSolidBackground.htm#21bb9a5110746dba6ee4bfc2bb48d178">phoenix::PhSolidBackground</a>, <a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#974178fa2fde9014ae2e3505978a74f7">phoenix::PhSpriteAnimation</a>, and <a class="el" href="classphoenix_1_1PhTileMap.htm#b54cb66b7e1dd7899231849bc1c43ca4">phoenix::PhTileMap</a>.</p>

</div>
</div><p>
<a class="anchor" name="dbc845e590cb208ee4aae79e407dc0a0"></a><!-- doxytag: member="phoenix::PhSceneNode::onRender" ref="dbc845e590cb208ee4aae79e407dc0a0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void phoenix::PhSceneNode::onRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Render call. 
<p>
Any nodes that called phoenix::PhSceneManger::registerForRendering() will first be sorted according to their depth, then this function is called for each node in order. It is highly suggested that you put any drawing code in this function. Of course, it's possible to draw during any of the three node passes, but this pass is the only one that is exclusive (Nodes must register) and is the only one that is depth sorted. 
<p>Reimplemented in <a class="el" href="classphoenix_1_1PhBackground.htm#8a68643b6953fc912b89d7b0f82e4225">phoenix::PhBackground</a>, <a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#186d6f7cb0f4cf0c1596c08b944d7a34">phoenix::PhDrawSceneNode</a>, <a class="el" href="classphoenix_1_1PhExtendedBackground.htm#171f38b19443afdae803d74a7e1feacf">phoenix::PhExtendedBackground</a>, <a class="el" href="classphoenix_1_1PhParticleSystem.htm#2aaa57598cf93bad4dd0d823f5ccc6e0">phoenix::PhParticleSystem</a>, <a class="el" href="classphoenix_1_1PhSolidBackground.htm#7213c9b81f49745e4ac333636d2ced76">phoenix::PhSolidBackground</a>, <a class="el" href="classphoenix_1_1PhSpriteAnimation.htm#32ca1eaa995239a3c02048d5e14465d2">phoenix::PhSpriteAnimation</a>, and <a class="el" href="classphoenix_1_1PhTileMap.htm#bc4a2ac72044663e9a0a5dfc2bc18491">phoenix::PhTileMap</a>.</p>

</div>
</div><p>
<a class="anchor" name="8b855da5b707bf4dfd0658583c379500"></a><!-- doxytag: member="phoenix::PhSceneNode::setDepth" ref="8b855da5b707bf4dfd0658583c379500" args="(float d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhSceneNode::setDepth           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set depth function. 
<p>
Sets the depth of this node. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>d</em>&nbsp;</td><td>The new depth. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSceneNode.htm#82a555cd9fc4b98a78df8a4ec87ebf38" title="Depth value.">depth</a> </dd></dl>

<p>References <a class="el" href="PhSceneNode_8h-source.htm#l00047">depth</a>.</p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="82a555cd9fc4b98a78df8a4ec87ebf38"></a><!-- doxytag: member="phoenix::PhSceneNode::depth" ref="82a555cd9fc4b98a78df8a4ec87ebf38" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float <a class="el" href="classphoenix_1_1PhSceneNode.htm#82a555cd9fc4b98a78df8a4ec87ebf38">phoenix::PhSceneNode::depth</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Depth value. 
<p>
This value is used by the scenemanger to depth sort all drawn nodes. if your object does not execute the <a class="el" href="classphoenix_1_1PhSceneNode.htm#dbc845e590cb208ee4aae79e407dc0a0" title="Render call.">onRender()</a> call, then it does not matter to you. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSceneNode.htm#28d94938552696b858fa54c548bf2c39" title="Get depth function.">getDepth()</a>, <a class="el" href="classphoenix_1_1PhSceneNode.htm#8b855da5b707bf4dfd0658583c379500" title="Set depth function.">setDepth()</a>, <a class="el" href="classphoenix_1_1PhSceneManager.htm" title="Scene Manager Class.">phoenix::PhSceneManager</a> </dd></dl>

<p>Referenced by <a class="el" href="PhSceneNode_8h-source.htm#l00114">getDepth()</a>, and <a class="el" href="PhSceneNode_8h-source.htm#l00103">setDepth()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>/home/jon/Phoenix/svn/0.3/libPhoenixGL/<a class="el" href="PhSceneNode_8h-source.htm">PhSceneNode.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Apr 26 01:07:55 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
