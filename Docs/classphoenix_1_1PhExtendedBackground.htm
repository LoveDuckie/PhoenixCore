<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhExtendedBackground Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.3 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhExtendedBackground.htm">PhExtendedBackground</a></div>
<h1>phoenix::PhExtendedBackground Class Reference</h1><!-- doxytag: class="phoenix::PhExtendedBackground" --><!-- doxytag: inherits="phoenix::PhSceneNode" -->Extended Background.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;PhExtendedBackground.h&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for phoenix::PhExtendedBackground:</div>
<div class="dynsection">

<p><center><img src="classphoenix_1_1PhExtendedBackground.png" usemap="#phoenix::PhExtendedBackground_map" border="0" alt=""></center>
<map name="phoenix::PhExtendedBackground_map">
<area href="classphoenix_1_1PhSceneNode.htm" alt="phoenix::PhSceneNode" shape="rect" coords="0,0,197,24">
</map>
</div>

<p>
<a href="classphoenix_1_1PhExtendedBackground-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#3de5793d3225156cfb3246a023b3ac7c">PhExtendedBackground</a> (<a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *s, <a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *t, <a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> c=<a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>(255, 255, 255, 255), float d=-100.0f, bool xt=true, bool yt=true, PhVector2d sp=PhVector2d(0.0f, 0.0f), PhVector2d po=PhVector2d(0.0f, 0.0f), PhVector2d o=PhVector2d(0.0f, 0.0f))</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constuctor.  <a href="#3de5793d3225156cfb3246a023b3ac7c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#ba049a7d4a69e0e28720afdcc47296dd">setColor</a> (<a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> c)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set color function.  <a href="#ba049a7d4a69e0e28720afdcc47296dd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#ba3764fe86df8bdcbaab0d790ecd0f86">getColor</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get color function.  <a href="#ba3764fe86df8bdcbaab0d790ecd0f86"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a00db2d7c922c670b1d6d27ad958550">setTexture</a> (<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *t)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set texture function.  <a href="#0a00db2d7c922c670b1d6d27ad958550"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#99dc87f1f3c8b86b3c524a5bcf42fcd3">getTexture</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get texture function.  <a href="#99dc87f1f3c8b86b3c524a5bcf42fcd3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#ed1cda446e8426ce3fb4625f687351dd">setHorizontalTile</a> (bool b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set horizontal tile.  <a href="#ed1cda446e8426ce3fb4625f687351dd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#040d573f47897e7c751796e7bd06369d">setVerticalTile</a> (bool b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set vertical tile.  <a href="#040d573f47897e7c751796e7bd06369d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#00afbf7167b70c2d54ec4896edbf125c">setPosition</a> (<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> v)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set position.  <a href="#00afbf7167b70c2d54ec4896edbf125c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#96ee4a1840fef72e1dff618d9d69220b">getPosition</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get position.  <a href="#96ee4a1840fef72e1dff618d9d69220b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a51a35ae1735f1db85fa8b33a9945da">setTextureOffset</a> (<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> v)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set texture offset.  <a href="#0a51a35ae1735f1db85fa8b33a9945da"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#591dd029ae580fe35f68773e4b2eafd1">getTextureOffset</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get texture offset.  <a href="#591dd029ae580fe35f68773e4b2eafd1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#980fecbdf218b45250e526807623ae31">setScrollSpeed</a> (<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> v)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set scroll speed.  <a href="#980fecbdf218b45250e526807623ae31"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#4618fa6e04235568bdb619efc87cf2d0">getScrollSpeed</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get scroll speed.  <a href="#4618fa6e04235568bdb619efc87cf2d0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#555533914be19fb278e51847292cc8a1">onPreRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pre-render call.  <a href="#555533914be19fb278e51847292cc8a1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#58bc25359a1080c94280e90da54fcfc3">onRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Render call.  <a href="#58bc25359a1080c94280e90da54fcfc3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#e0af41e2bb1187e676bc5a97533b900d">onPostRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Post-render call.  <a href="#e0af41e2bb1187e676bc5a97533b900d"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Extended Background. 
<p>
This is the extended background class. This is the most advanced background class included with <a class="el" href="namespacephoenix.htm" title="The phoenix namespace.">phoenix</a>. Extended background allow for the most control over the background. It provides the ability to change the texture, color, depth, horizontal tile, vertical tile, scroll speed, relative position, and texture offset of a background. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSolidBackground.htm" title="Solid background node.">phoenix::PhSolidBackground</a>, <a class="el" href="classphoenix_1_1PhBackground.htm" title="Simple background implementation.">phoenix::PhBackground</a> </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="3de5793d3225156cfb3246a023b3ac7c"></a><!-- doxytag: member="phoenix::PhExtendedBackground::PhExtendedBackground" ref="3de5793d3225156cfb3246a023b3ac7c" args="(PhSceneManager *s, PhTexture *t, PhColor c=PhColor(255, 255, 255, 255), float d=-100.0f, bool xt=true, bool yt=true, PhVector2d sp=PhVector2d(0.0f, 0.0f), PhVector2d po=PhVector2d(0.0f, 0.0f), PhVector2d o=PhVector2d(0.0f, 0.0f))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PhExtendedBackground::PhExtendedBackground           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *&nbsp;</td>
          <td class="paramname"> <em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>&nbsp;</td>
          <td class="paramname"> <em>c</em> = <code><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>(255,255,255,255)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>d</em> = <code>-100.0f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>xt</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>yt</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>sp</em> = <code><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(0.0f,0.0f)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>po</em> = <code><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(0.0f,0.0f)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>o</em> = <code><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(0.0f,0.0f)</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constuctor. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>Pointer to the scenemanager. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>Texture to use. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>Color to use. Default white. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>d</em>&nbsp;</td><td>Depth. Default -100.0f. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>xt</em>&nbsp;</td><td>Horizontal tile. Default true. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>yt</em>&nbsp;</td><td>Vertical tile. Default true. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sp</em>&nbsp;</td><td>Scroll speed. Defualt [0,0]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>po</em>&nbsp;</td><td>Relative position of the bg. Default [0,0]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>o</em>&nbsp;</td><td>Texture offset. Default [0,0].</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>Pointer to the scenemanager. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>Texture to use. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>Color to use. Default white. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>d</em>&nbsp;</td><td>Depth. Default -100.0f. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>xt</em>&nbsp;</td><td>Horizontal tile. Default true. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>yt</em>&nbsp;</td><td>Vertical tile. Default true. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sp</em>&nbsp;</td><td>Scroll speed. Defualt [0,0]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>o</em>&nbsp;</td><td>Texture offset. Default [0,0]. </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="ba049a7d4a69e0e28720afdcc47296dd"></a><!-- doxytag: member="phoenix::PhExtendedBackground::setColor" ref="ba049a7d4a69e0e28720afdcc47296dd" args="(PhColor c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::setColor           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>&nbsp;</td>
          <td class="paramname"> <em>c</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set color function. 
<p>
Sets the color used to colorize the texture. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>The new color. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#ba3764fe86df8bdcbaab0d790ecd0f86" title="Get color function.">getColor()</a></dd></dl>
Sets the color used to colorize the texture. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>The new color. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#ba3764fe86df8bdcbaab0d790ecd0f86" title="Get color function.">getColor()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="ba3764fe86df8bdcbaab0d790ecd0f86"></a><!-- doxytag: member="phoenix::PhExtendedBackground::getColor" ref="ba3764fe86df8bdcbaab0d790ecd0f86" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> PhExtendedBackground::getColor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get color function. 
<p>
Get the current color used to colorize the texture. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The current color. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#ba049a7d4a69e0e28720afdcc47296dd" title="Set color function.">setColor()</a></dd></dl>
Get the current color used to colorize the texture. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The current color. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#ba049a7d4a69e0e28720afdcc47296dd" title="Set color function.">setColor()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="0a00db2d7c922c670b1d6d27ad958550"></a><!-- doxytag: member="phoenix::PhExtendedBackground::setTexture" ref="0a00db2d7c922c670b1d6d27ad958550" args="(PhTexture *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::setTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set texture function. 
<p>
Sets the texture used by this node. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>The new texture. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#99dc87f1f3c8b86b3c524a5bcf42fcd3" title="Get texture function.">getTexture()</a></dd></dl>
Sets the texture used by this node. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>The new texture. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#99dc87f1f3c8b86b3c524a5bcf42fcd3" title="Get texture function.">getTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="99dc87f1f3c8b86b3c524a5bcf42fcd3"></a><!-- doxytag: member="phoenix::PhExtendedBackground::getTexture" ref="99dc87f1f3c8b86b3c524a5bcf42fcd3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> * PhExtendedBackground::getTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get texture function. 
<p>
Gets the current texture used by this node. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The current texture. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a00db2d7c922c670b1d6d27ad958550" title="Set texture function.">setTexture()</a></dd></dl>
Gets the current texture used by this node. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The current texture. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a00db2d7c922c670b1d6d27ad958550" title="Set texture function.">setTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="ed1cda446e8426ce3fb4625f687351dd"></a><!-- doxytag: member="phoenix::PhExtendedBackground::setHorizontalTile" ref="ed1cda446e8426ce3fb4625f687351dd" args="(bool b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::setHorizontalTile           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>b</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set horizontal tile. 
<p>
Sets whether of not to tile this background horizontally. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Tile boolean. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#040d573f47897e7c751796e7bd06369d" title="Set vertical tile.">setVerticalTile()</a></dd></dl>
Sets whether of not to tile this background horizontally. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Tile boolean. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#040d573f47897e7c751796e7bd06369d" title="Set vertical tile.">setVerticalTile()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="040d573f47897e7c751796e7bd06369d"></a><!-- doxytag: member="phoenix::PhExtendedBackground::setVerticalTile" ref="040d573f47897e7c751796e7bd06369d" args="(bool b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::setVerticalTile           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>b</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set vertical tile. 
<p>
Sets whether of not to tile this background vertically. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Tile boolean. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#040d573f47897e7c751796e7bd06369d" title="Set vertical tile.">setVerticalTile()</a></dd></dl>
Sets whether of not to tile this background vertically. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Tile boolean. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#040d573f47897e7c751796e7bd06369d" title="Set vertical tile.">setVerticalTile()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="00afbf7167b70c2d54ec4896edbf125c"></a><!-- doxytag: member="phoenix::PhExtendedBackground::setPosition" ref="00afbf7167b70c2d54ec4896edbf125c" args="(PhVector2d v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::setPosition           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set position. 
<p>
Sets the position of this background. <dl class="note" compact><dt><b>Note:</b></dt><dd>Position is relative to the top-left corner of the VIEW, it is a relative position, not an absolute one. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v</em>&nbsp;</td><td>New position. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#96ee4a1840fef72e1dff618d9d69220b" title="Get position.">getPosition()</a></dd></dl>
Sets the position of this background. <dl class="note" compact><dt><b>Note:</b></dt><dd>Position is relative to the top-left corner of the VIEW, it is a relative position, not an absolute one. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v</em>&nbsp;</td><td>New position. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#96ee4a1840fef72e1dff618d9d69220b" title="Get position.">getPosition()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="96ee4a1840fef72e1dff618d9d69220b"></a><!-- doxytag: member="phoenix::PhExtendedBackground::getPosition" ref="96ee4a1840fef72e1dff618d9d69220b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> PhExtendedBackground::getPosition           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get position. 
<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>Position is relative to the top-left corner of the VIEW, it is a relative position, not an absolute one. </dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current position of the background. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#00afbf7167b70c2d54ec4896edbf125c" title="Set position.">setPosition()</a></dd></dl>
<dl class="note" compact><dt><b>Note:</b></dt><dd>Position is relative to the top-left corner of the VIEW, it is a relative position, not an absolute one. </dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current position of the background. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#00afbf7167b70c2d54ec4896edbf125c" title="Set position.">setPosition()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="0a51a35ae1735f1db85fa8b33a9945da"></a><!-- doxytag: member="phoenix::PhExtendedBackground::setTextureOffset" ref="0a51a35ae1735f1db85fa8b33a9945da" args="(PhVector2d v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::setTextureOffset           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set texture offset. 
<p>
Sets the texture offset of the background. The texture offset is a normalized value and simply modifies The texture coords of the background. Can be use to achieve effects such as paralax and scrolling backgrounds. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v</em>&nbsp;</td><td>The new texture offset. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#591dd029ae580fe35f68773e4b2eafd1" title="Get texture offset.">getTextureOffset()</a></dd></dl>
Sets the texture offset of the background. The texture offset is a normalized value and simply modifies The texture coords of the background. Can be use to achieve effects such as paralax and scrolling backgrounds. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v</em>&nbsp;</td><td>The new texture offset. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#591dd029ae580fe35f68773e4b2eafd1" title="Get texture offset.">getTextureOffset()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="591dd029ae580fe35f68773e4b2eafd1"></a><!-- doxytag: member="phoenix::PhExtendedBackground::getTextureOffset" ref="591dd029ae580fe35f68773e4b2eafd1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> PhExtendedBackground::getTextureOffset           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get texture offset. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The texture offset. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a51a35ae1735f1db85fa8b33a9945da" title="Set texture offset.">setTextureOffset()</a></dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The texture offset. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a51a35ae1735f1db85fa8b33a9945da" title="Set texture offset.">setTextureOffset()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="980fecbdf218b45250e526807623ae31"></a><!-- doxytag: member="phoenix::PhExtendedBackground::setScrollSpeed" ref="980fecbdf218b45250e526807623ae31" args="(PhVector2d v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::setScrollSpeed           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set scroll speed. 
<p>
Using scroll speed the background will automatically change its texture offset every frame, creating the illusion of moving backgrounds. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v</em>&nbsp;</td><td>The new speed; </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a51a35ae1735f1db85fa8b33a9945da" title="Set texture offset.">setTextureOffset()</a>, <a class="el" href="classphoenix_1_1PhExtendedBackground.htm#4618fa6e04235568bdb619efc87cf2d0" title="Get scroll speed.">getScrollSpeed()</a></dd></dl>
Using scroll speed the background will automatically change its texture offset every frame, creating the illusion of moving backgrounds. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v</em>&nbsp;</td><td>The new speed; </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a51a35ae1735f1db85fa8b33a9945da" title="Set texture offset.">setTextureOffset()</a>, <a class="el" href="classphoenix_1_1PhExtendedBackground.htm#4618fa6e04235568bdb619efc87cf2d0" title="Get scroll speed.">getScrollSpeed()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="4618fa6e04235568bdb619efc87cf2d0"></a><!-- doxytag: member="phoenix::PhExtendedBackground::getScrollSpeed" ref="4618fa6e04235568bdb619efc87cf2d0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> PhExtendedBackground::getScrollSpeed           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get scroll speed. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current scroll speed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a51a35ae1735f1db85fa8b33a9945da" title="Set texture offset.">setTextureOffset()</a>, <a class="el" href="classphoenix_1_1PhExtendedBackground.htm#980fecbdf218b45250e526807623ae31" title="Set scroll speed.">setScrollSpeed()</a></dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current scroll speed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhExtendedBackground.htm#0a51a35ae1735f1db85fa8b33a9945da" title="Set texture offset.">setTextureOffset()</a>, <a class="el" href="classphoenix_1_1PhExtendedBackground.htm#980fecbdf218b45250e526807623ae31" title="Set scroll speed.">setScrollSpeed()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="555533914be19fb278e51847292cc8a1"></a><!-- doxytag: member="phoenix::PhExtendedBackground::onPreRender" ref="555533914be19fb278e51847292cc8a1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::onPreRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Pre-render call. 
<p>
All nodes in the list will have this function called by the scenemanger once per frame. Overloading this is required. If the scene node wants to be drawn it must call phoenix::PhSceneManger::registerForRendering(). 
<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#aadc8431e4764b5beb8f5dec11b5354f">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="58bc25359a1080c94280e90da54fcfc3"></a><!-- doxytag: member="phoenix::PhExtendedBackground::onRender" ref="58bc25359a1080c94280e90da54fcfc3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::onRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Render call. 
<p>
Any nodes that called phoenix::PhSceneManger::registerForRendering() will first be sorted according to their depth, then this function is called for each node in order. It is highly suggested that you put any drawing code in this function. Of course, it's possible to draw during any of the three node passes, but this pass is the only one that is exclusive (Nodes must register) and is the only one that is depth sorted. 
<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#dbc845e590cb208ee4aae79e407dc0a0">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="e0af41e2bb1187e676bc5a97533b900d"></a><!-- doxytag: member="phoenix::PhExtendedBackground::onPostRender" ref="e0af41e2bb1187e676bc5a97533b900d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PhExtendedBackground::onPostRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Post-render call. 
<p>
The third render pass takes place at the end of every frame, the scene manager calls this function for every node in the list, and any code that should happen after everything is drawn should go here. 
<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#7048c33dcc9397d0c890222d41de0280">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li>/home/jon/Desktop/Documents/workspace/Phoenix SVN/0.1.1/libPhoenixGL/PhExtendedBackground.h<li>/home/jon/Desktop/Documents/workspace/Phoenix SVN/0.1.1/libPhoenixGL/PhExtendedBackground.cpp</ul>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Jan 27 21:54:43 2008 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.3 </small></address>
</body>
</html>
