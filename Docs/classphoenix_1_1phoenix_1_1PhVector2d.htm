<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::phoenix::PhVector2d Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<b>phoenix</b>::<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::phoenix::PhVector2d Class Reference</h1><!-- doxytag: class="phoenix::phoenix::PhVector2d" -->2D Vector class  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhVertexLightSystem_8h-source.htm">PhVertexLightSystem.h</a>&gt;</code>
<p>

<p>
<a href="classphoenix_1_1phoenix_1_1PhVector2d-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#5939e5b556183549b444e422480fc82a">PhVector2d</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#5939e5b556183549b444e422480fc82a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#4c3fa4724e99624e5a2f146a009ced5c">PhVector2d</a> (float a, float b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#4c3fa4724e99624e5a2f146a009ced5c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#fc275c9c7365bf81b54c2aca27561156">getX</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get X component.  <a href="#fc275c9c7365bf81b54c2aca27561156"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#a2d2e90a26915557c65bd6ce0dbc047a">getY</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get Y component.  <a href="#a2d2e90a26915557c65bd6ce0dbc047a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#fe8dcfa28d2402d412b7c9531d0572e5">setX</a> (float a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set X component.  <a href="#fe8dcfa28d2402d412b7c9531d0572e5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#c1afd7d7b5c5e318537ff87af983f1fb">setY</a> (float a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set Y component.  <a href="#c1afd7d7b5c5e318537ff87af983f1fb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#d30c9429836aaa77e3f19785661684de">normalize</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Normalization.  <a href="#d30c9429836aaa77e3f19785661684de"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#d08d185694a5015780da57c9af3ff5fd">getMagnitude</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Magnitude.  <a href="#d08d185694a5015780da57c9af3ff5fd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#67dfe0db48157c2c41af4b801564d6a0">getMagnitudeSquared</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Magnitude squared.  <a href="#67dfe0db48157c2c41af4b801564d6a0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#2af6b0daa878e6aebe4a5f20b1472258">project</a> (<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Projection.  <a href="#2af6b0daa878e6aebe4a5f20b1472258"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#3c3f208423b0867b12c18ae7d2533c13">direction</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Direction.  <a href="#3c3f208423b0867b12c18ae7d2533c13"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#5296bf6e352685635d636de876033e3b">rotate</a> (float angle)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rotate.  <a href="#5296bf6e352685635d636de876033e3b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#4a4c32e9f3109c2c357d9acc66cf4375">getAngle</a> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;xE=<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>(1.0f, 0))</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get angle.  <a href="#4a4c32e9f3109c2c357d9acc66cf4375"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="383af2979fbd495ad54101bf20ba7657"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator/=" ref="383af2979fbd495ad54101bf20ba7657" args="(const float Scalar)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (const float Scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d94aa51846d48f9f8da2c367f418afa6"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator*=" ref="d94aa51846d48f9f8da2c367f418afa6" args="(const float Scalar)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (const float Scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="18fb63f3d6aeafc84e03c9cd65196f58"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator+=" ref="18fb63f3d6aeafc84e03c9cd65196f58" args="(const PhVector2d &amp;Other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;Other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b8b8e3280f0d5cf3bc3ab075da1c3930"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator&#45;=" ref="b8b8e3280f0d5cf3bc3ab075da1c3930" args="(const PhVector2d &amp;Other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;Other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f70677ee8304d3ccf9d0d2dcdda62ac7"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator==" ref="f70677ee8304d3ccf9d0d2dcdda62ac7" args="(const PhVector2d &amp;V) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#cac4239ea16f470b89882d241f8562cd">operator^</a> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Cross product.  <a href="#cac4239ea16f470b89882d241f8562cd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#214d151101649e92e9fb3947d081290a">operator*</a> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dot product.  <a href="#214d151101649e92e9fb3947d081290a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1141450310ed455dff7e4e03e7d672ad"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator*" ref="1141450310ed455dff7e4e03e7d672ad" args="(float s) const " -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (float s) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7ab6536ae285e574ab43ee7298490b8c"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator/" ref="7ab6536ae285e574ab43ee7298490b8c" args="(float s) const " -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/</b> (float s) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="93bdf5df9fd48bad29d891abbcda7310"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator+" ref="93bdf5df9fd48bad29d891abbcda7310" args="(const PhVector2d &amp;V) const " -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="89a9c7b7fc7ea27be1b6a53315da0146"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator&#45;" ref="89a9c7b7fc7ea27be1b6a53315da0146" args="(const PhVector2d &amp;V) const " -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f825b237f38a51db39b5147b24dc40ee"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator&#45;" ref="f825b237f38a51db39b5147b24dc40ee" args="(void) const " -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#ad753204164ef73a21fdeabab4c5a01e">operator*</a> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Matrix multiplication.  <a href="#ad753204164ef73a21fdeabab4c5a01e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d12a29b5925ea87490b41aab5aa90597"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator*=" ref="d12a29b5925ea87490b41aab5aa90597" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="90a133d69be667c05a8b90eda9193523"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator*" ref="90a133d69be667c05a8b90eda9193523" args="(float k, const PhVector2d &amp;V)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (float k, const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
2D Vector class 
<p>
Provides a fast and efficient way to do vector math. <dl class="note" compact><dt><b>Note:</b></dt><dd>Only the ambigious operators are documented, the others (such as +, -, +=, etc.) are considered obvious and therefore not documented. </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="5939e5b556183549b444e422480fc82a"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::PhVector2d" ref="5939e5b556183549b444e422480fc82a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::phoenix::PhVector2d::PhVector2d           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Basic constructor, creates a zero-length vector &lt;0,0&gt;. 
</div>
</div><p>
<a class="anchor" name="4c3fa4724e99624e5a2f146a009ced5c"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::PhVector2d" ref="4c3fa4724e99624e5a2f146a009ced5c" args="(float a, float b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::phoenix::PhVector2d::PhVector2d           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>b</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Creates a vector with the given rectangular coordinates. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The X component of the vector. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>The Y component of the vector. </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="3c3f208423b0867b12c18ae7d2533c13"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::direction" ref="3c3f208423b0867b12c18ae7d2533c13" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> phoenix::phoenix::PhVector2d::direction           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Direction. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A unit-length (normalized) vector with the same angle measure as this one. </dd></dl>

</div>
</div><p>
<a class="anchor" name="4a4c32e9f3109c2c357d9acc66cf4375"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::getAngle" ref="4a4c32e9f3109c2c357d9acc66cf4375" args="(const PhVector2d &amp;xE=PhVector2d(1.0f, 0))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhVector2d::getAngle           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>xE</em> = <code><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>(1.0f,&nbsp;0)</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get angle. 
<p>
Get the angle measure of the vector relative to the reference vector given. By defualt this is &lt;1,0&gt; but it can be changed. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>xE</em>&nbsp;</td><td>The reference vector, by defualt this is &lt;1,0&gt; </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The angle between the reference vector and this vector. </dd></dl>

</div>
</div><p>
<a class="anchor" name="d08d185694a5015780da57c9af3ff5fd"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::getMagnitude" ref="d08d185694a5015780da57c9af3ff5fd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhVector2d::getMagnitude           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Magnitude. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The magnitude (length) of the vector. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd>getManitudeSquared(); </dd></dl>

</div>
</div><p>
<a class="anchor" name="67dfe0db48157c2c41af4b801564d6a0"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::getMagnitudeSquared" ref="67dfe0db48157c2c41af4b801564d6a0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhVector2d::getMagnitudeSquared           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Magnitude squared. 
<p>
This is much faster than the above because it does not bother to take the square root. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The squared magnitude (length) of the vector. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#d08d185694a5015780da57c9af3ff5fd" title="Magnitude.">getMagnitude()</a>; </dd></dl>

</div>
</div><p>
<a class="anchor" name="fc275c9c7365bf81b54c2aca27561156"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::getX" ref="fc275c9c7365bf81b54c2aca27561156" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhVector2d::getX           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get X component. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The X component of the vector. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#fe8dcfa28d2402d412b7c9531d0572e5" title="Set X component.">setX()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="a2d2e90a26915557c65bd6ce0dbc047a"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::getY" ref="a2d2e90a26915557c65bd6ce0dbc047a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhVector2d::getY           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get Y component. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The Y component of the vector. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#c1afd7d7b5c5e318537ff87af983f1fb" title="Set Y component.">setY()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="d30c9429836aaa77e3f19785661684de"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::normalize" ref="d30c9429836aaa77e3f19785661684de" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhVector2d::normalize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Normalization. 
<p>
Normalizes the vector, as in turns in into a unit-length vector. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The length of the vector before normalization. </dd></dl>

</div>
</div><p>
<a class="anchor" name="ad753204164ef73a21fdeabab4c5a01e"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator*" ref="ad753204164ef73a21fdeabab4c5a01e" args="(PhRotationMatrix &amp;other)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> phoenix::phoenix::PhVector2d::operator*           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>other</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Matrix multiplication. 
<p>
Essentially rotates this vector by the matrix. <dl class="note" compact><dt><b>Note:</b></dt><dd>this is technically mathematically illegal. The matrix should be multiplied by the vector. </dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The rotated vector. </dd></dl>

</div>
</div><p>
<a class="anchor" name="214d151101649e92e9fb3947d081290a"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator*" ref="214d151101649e92e9fb3947d081290a" args="(const PhVector2d &amp;V) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhVector2d::operator*           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>V</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Dot product. 
<p>
Returns the dot product. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The dot product. </dd></dl>

</div>
</div><p>
<a class="anchor" name="cac4239ea16f470b89882d241f8562cd"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::operator^" ref="cac4239ea16f470b89882d241f8562cd" args="(const PhVector2d &amp;V) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhVector2d::operator^           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>V</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Cross product. 
<p>
Returns the cross product of the vector. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The cross product. </dd></dl>

</div>
</div><p>
<a class="anchor" name="2af6b0daa878e6aebe4a5f20b1472258"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::project" ref="2af6b0daa878e6aebe4a5f20b1472258" args="(PhVector2d b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> phoenix::phoenix::PhVector2d::project           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>b</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Projection. 
<p>
Projects this vector onto vector b. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Vector to project this vector onto </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The product of projection. </dd></dl>

</div>
</div><p>
<a class="anchor" name="5296bf6e352685635d636de876033e3b"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::rotate" ref="5296bf6e352685635d636de876033e3b" args="(float angle)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&amp; phoenix::phoenix::PhVector2d::rotate           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>angle</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rotate. 
<p>
Rotates the vector the desired amount. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>angle</em>&nbsp;</td><td>The measure of the angle in radians. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The rotated vector. Note that this vector itself is also rotated. </dd></dl>

</div>
</div><p>
<a class="anchor" name="fe8dcfa28d2402d412b7c9531d0572e5"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::setX" ref="fe8dcfa28d2402d412b7c9531d0572e5" args="(float a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::phoenix::PhVector2d::setX           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set X component. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The X component of the vector. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#fc275c9c7365bf81b54c2aca27561156" title="Get X component.">getX()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="c1afd7d7b5c5e318537ff87af983f1fb"></a><!-- doxytag: member="phoenix::phoenix::PhVector2d::setY" ref="c1afd7d7b5c5e318537ff87af983f1fb" args="(float a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::phoenix::PhVector2d::setY           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set Y component. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The Y component of the vector. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm#a2d2e90a26915557c65bd6ce0dbc047a" title="Get Y component.">getY()</a> </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>trunk/libPhoenixGL/<a class="el" href="PhVertexLightSystem_8h-source.htm">PhVertexLightSystem.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Nov 2 17:26:52 2008 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.7.1 </small></address>
</body>
</html>
