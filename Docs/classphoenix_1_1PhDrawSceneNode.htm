<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhDrawSceneNode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhDrawSceneNode.htm">PhDrawSceneNode</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhDrawSceneNode Class Reference</h1><!-- doxytag: class="phoenix::PhDrawSceneNode" --><!-- doxytag: inherits="phoenix::PhSceneNode" -->Draw scene node.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhDrawNode_8h-source.htm">svn/0.3/libPhoenixGL/PhDrawNode.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for phoenix::PhDrawSceneNode:</div>
<div class="dynsection">
<p><center><img src="classphoenix_1_1PhDrawSceneNode__inherit__graph.png" border="0" usemap="#phoenix_1_1PhDrawSceneNode__inherit__map" alt="Inheritance graph"></center>
<map name="phoenix_1_1PhDrawSceneNode__inherit__map">
<area shape="rect" href="classphoenix_1_1PhSceneNode.htm" title="Scenenode Prototype." alt="" coords="20,5,177,32"></map>
<center><font size="2">[<a href="graph_legend.htm">legend</a>]</font></center></div>

<p>
<a href="classphoenix_1_1PhDrawSceneNode-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#7f7921d34710afa88b1ae82d00672afa">PhDrawSceneNode</a> (<a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *s, <a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *i, const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;p=<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(0, 0), const bool &amp;c=false)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Construct.  <a href="#7f7921d34710afa88b1ae82d00672afa"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f907b63547083619f8886054c7f30f90"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::~PhDrawSceneNode" ref="f907b63547083619f8886054c7f30f90" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#f907b63547083619f8886054c7f30f90">~PhDrawSceneNode</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destruct. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#289e5ba0737f2c568ef10633fca48ee5">getPosition</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get position.  <a href="#289e5ba0737f2c568ef10633fca48ee5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#69df2e087044a70b0aa13f3adf3f01e4">setPosition</a> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set position.  <a href="#69df2e087044a70b0aa13f3adf3f01e4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#7d6b1a168f31b36a322f198edbc0b6f1">setTexture</a> (<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *img)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set texture.  <a href="#7d6b1a168f31b36a322f198edbc0b6f1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#b32617edf3d5ca2491527ba1a6e11756">getTexture</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get texture.  <a href="#b32617edf3d5ca2491527ba1a6e11756"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#9bca742679af9f861e2da5ecb550fce9">setFod</a> (const bool &amp;a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Free on destroy.  <a href="#9bca742679af9f861e2da5ecb550fce9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const bool &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#2aef56883f4232e58e1cddcdd4455b33">getFod</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get Fod.  <a href="#2aef56883f4232e58e1cddcdd4455b33"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6b84dfc26a9e117db35a117917b5eb3e"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::onPreRender" ref="6b84dfc26a9e117db35a117917b5eb3e" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#6b84dfc26a9e117db35a117917b5eb3e">onPreRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pre render. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="186d6f7cb0f4cf0c1596c08b944d7a34"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::onRender" ref="186d6f7cb0f4cf0c1596c08b944d7a34" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#186d6f7cb0f4cf0c1596c08b944d7a34">onRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Render. <br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d953398f2a53683e67deb5521fd45f9c"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::pos" ref="d953398f2a53683e67deb5521fd45f9c" args="" -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#d953398f2a53683e67deb5521fd45f9c">pos</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Position. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="493bf20cc48057f35626018633aecd2d"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::image" ref="493bf20cc48057f35626018633aecd2d" args="" -->
<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#493bf20cc48057f35626018633aecd2d">image</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Texture. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="75f43fb142026d9a43372f42a3ef0711"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::fod" ref="75f43fb142026d9a43372f42a3ef0711" args="" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#75f43fb142026d9a43372f42a3ef0711">fod</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Free on destroy. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Draw scene node. 
<p>
Created more as an example than anything, this is a simple scene node that draws a texture. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="7f7921d34710afa88b1ae82d00672afa"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::PhDrawSceneNode" ref="7f7921d34710afa88b1ae82d00672afa" args="(PhSceneManager *s, PhTexture *i, const PhVector2d &amp;p=PhVector2d(0, 0), const bool &amp;c=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhDrawSceneNode::PhDrawSceneNode           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *&nbsp;</td>
          <td class="paramname"> <em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>p</em> = <code><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(0,&nbsp;0)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&nbsp;</td>
          <td class="paramname"> <em>c</em> = <code>false</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Construct. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>Pointer to the scene manager. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>i</em>&nbsp;</td><td>Texture to draw. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p</em>&nbsp;</td><td>Position. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>Determines if the node deletes the texture when the node is deleted. </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="2aef56883f4232e58e1cddcdd4455b33"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::getFod" ref="2aef56883f4232e58e1cddcdd4455b33" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool&amp; phoenix::PhDrawSceneNode::getFod           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get Fod. 
<p>
True if the node will free the texture when it is destroyed. 
<p>References <a class="el" href="PhDrawNode_8h-source.htm#l00049">fod</a>.</p>

</div>
</div><p>
<a class="anchor" name="289e5ba0737f2c568ef10633fca48ee5"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::getPosition" ref="289e5ba0737f2c568ef10633fca48ee5" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&amp; phoenix::PhDrawSceneNode::getPosition           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get position. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The position of the node. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#69df2e087044a70b0aa13f3adf3f01e4" title="Set position.">setPosition()</a> </dd></dl>

<p>References <a class="el" href="PhDrawNode_8h-source.htm#l00043">pos</a>.</p>

</div>
</div><p>
<a class="anchor" name="b32617edf3d5ca2491527ba1a6e11756"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::getTexture" ref="b32617edf3d5ca2491527ba1a6e11756" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a>* phoenix::PhDrawSceneNode::getTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get texture. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The current texture of the node. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#7d6b1a168f31b36a322f198edbc0b6f1" title="Set texture.">setTexture()</a> </dd></dl>

<p>References <a class="el" href="PhDrawNode_8h-source.htm#l00046">image</a>.</p>

</div>
</div><p>
<a class="anchor" name="9bca742679af9f861e2da5ecb550fce9"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::setFod" ref="9bca742679af9f861e2da5ecb550fce9" args="(const bool &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhDrawSceneNode::setFod           </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Free on destroy. 
<p>
If this is true then the node will automatically delete the texture when the node is destroyed. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Free on destroy. </td></tr>
  </table>
</dl>

<p>References <a class="el" href="PhDrawNode_8h-source.htm#l00049">fod</a>.</p>

</div>
</div><p>
<a class="anchor" name="69df2e087044a70b0aa13f3adf3f01e4"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::setPosition" ref="69df2e087044a70b0aa13f3adf3f01e4" args="(const PhVector2d &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhDrawSceneNode::setPosition           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set position. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The new position of the node. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#289e5ba0737f2c568ef10633fca48ee5" title="Get position.">getPosition()</a> </dd></dl>

<p>References <a class="el" href="PhDrawNode_8h-source.htm#l00043">pos</a>.</p>

</div>
</div><p>
<a class="anchor" name="7d6b1a168f31b36a322f198edbc0b6f1"></a><!-- doxytag: member="phoenix::PhDrawSceneNode::setTexture" ref="7d6b1a168f31b36a322f198edbc0b6f1" args="(PhTexture *img)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhDrawSceneNode::setTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>img</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set texture. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>img</em>&nbsp;</td><td>The new texture of the node. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm#b32617edf3d5ca2491527ba1a6e11756" title="Get texture.">getTexture()</a> </dd></dl>

<p>References <a class="el" href="PhDrawNode_8h-source.htm#l00046">image</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>svn/0.3/libPhoenixGL/<a class="el" href="PhDrawNode_8h-source.htm">PhDrawNode.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:29:49 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
