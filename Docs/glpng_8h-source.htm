<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: /home/jon/Desktop/Documents/workspace/Phoenix SVN/trunk/libPhoenixGL/glpng.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.3 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="classes.htm"><span>Classes</span></a></li>
    <li class="current"><a href="files.htm"><span>Files</span></a></li>
  </ul>
</div>
<h1>/home/jon/Desktop/Documents/workspace/Phoenix SVN/trunk/libPhoenixGL/glpng.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * PNG loader library for OpenGL v1.45 (10/07/00)</span>
<a name="l00003"></a>00003 <span class="comment"> * by Ben Wyatt ben@wyatt100.freeserve.co.uk</span>
<a name="l00004"></a>00004 <span class="comment"> * Using LibPNG 1.0.2 and ZLib 1.1.3</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This software is provided 'as-is', without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment"> * In no event will the author be held liable for any damages arising from the</span>
<a name="l00008"></a>00008 <span class="comment"> * use of this software.</span>
<a name="l00009"></a>00009 <span class="comment"> *</span>
<a name="l00010"></a>00010 <span class="comment"> * Permission is hereby granted to use, copy, modify, and distribute this</span>
<a name="l00011"></a>00011 <span class="comment"> * source code, or portions hereof, for any purpose, without fee, subject to</span>
<a name="l00012"></a>00012 <span class="comment"> * the following restrictions:</span>
<a name="l00013"></a>00013 <span class="comment"> *</span>
<a name="l00014"></a>00014 <span class="comment"> * 1. The origin of this source code must not be misrepresented. You must not</span>
<a name="l00015"></a>00015 <span class="comment"> *    claim that you wrote the original software. If you use this software in</span>
<a name="l00016"></a>00016 <span class="comment"> *    a product, an acknowledgment in the product documentation would be</span>
<a name="l00017"></a>00017 <span class="comment"> *    appreciated but is not required.</span>
<a name="l00018"></a>00018 <span class="comment"> * 2. Altered versions must be plainly marked as such and must not be</span>
<a name="l00019"></a>00019 <span class="comment"> *    misrepresented as being the original source.</span>
<a name="l00020"></a>00020 <span class="comment"> * 3. This notice must not be removed or altered from any source distribution.</span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#ifndef _GLPNG_H_</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="preprocessor">#define _GLPNG_H_</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">"C"</span> {
<a name="l00030"></a>00030 <span class="preprocessor">#endif</span>
<a name="l00031"></a>00031 <span class="preprocessor"></span>
<a name="l00032"></a>00032 <span class="preprocessor">#ifdef _MSC_VER</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span><span class="preprocessor">        #ifdef _DEBUG</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span><span class="preprocessor">                #pragma comment (lib, "glpngd.lib")</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span><span class="preprocessor">        #else</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span><span class="preprocessor">                #pragma comment (lib, "glpng.lib")</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span><span class="preprocessor">        #endif</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 <span class="comment">/* XXX This is from Win32's &lt;windef.h&gt; */</span>
<a name="l00041"></a>00041 <span class="preprocessor">#ifndef APIENTRY</span>
<a name="l00042"></a>00042 <span class="preprocessor"></span><span class="preprocessor">        #if (_MSC_VER &gt;= 800) || defined(_STDCALL_SUPPORTED)</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span><span class="preprocessor">                #define APIENTRY    __stdcall</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span><span class="preprocessor">        #else</span>
<a name="l00045"></a>00045 <span class="preprocessor"></span><span class="preprocessor">                #define APIENTRY</span>
<a name="l00046"></a>00046 <span class="preprocessor"></span><span class="preprocessor">        #endif</span>
<a name="l00047"></a>00047 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00048"></a>00048 <span class="preprocessor"></span>
<a name="l00049"></a>00049 <span class="comment">/* Mipmapping parameters */</span>
<a name="l00050"></a>00050 <span class="preprocessor">#define PNG_NOMIPMAPS      0 </span><span class="comment">/* No mipmapping                        */</span>
<a name="l00051"></a>00051 <span class="preprocessor">#define PNG_BUILDMIPMAPS  -1 </span><span class="comment">/* Calls a clone of gluBuild2DMipmaps() */</span>
<a name="l00052"></a>00052 <span class="preprocessor">#define PNG_SIMPLEMIPMAPS -2 </span><span class="comment">/* Generates mipmaps without filtering  */</span>
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 <span class="comment">/* Who needs an "S" anyway? */</span>
<a name="l00055"></a>00055 <span class="preprocessor">#define PNG_NOMIPMAP     PNG_NOMIPMAPS</span>
<a name="l00056"></a>00056 <span class="preprocessor"></span><span class="preprocessor">#define PNG_BUILDMIPMAP  PNG_BUILDMIPMAPS</span>
<a name="l00057"></a>00057 <span class="preprocessor"></span><span class="preprocessor">#define PNG_SIMPLEMIPMAP PNG_SIMPLEMIPMAPS</span>
<a name="l00058"></a>00058 <span class="preprocessor"></span>
<a name="l00059"></a>00059 <span class="comment">/* Transparency parameters */</span>
<a name="l00060"></a>00060 <span class="preprocessor">#define PNG_CALLBACK  -3 </span><span class="comment">/* Call the callback function to generate alpha   */</span>
<a name="l00061"></a>00061 <span class="preprocessor">#define PNG_ALPHA     -2 </span><span class="comment">/* Use alpha channel in PNG file, if there is one */</span>
<a name="l00062"></a>00062 <span class="preprocessor">#define PNG_SOLID     -1 </span><span class="comment">/* No transparency                                */</span>
<a name="l00063"></a>00063 <span class="preprocessor">#define PNG_STENCIL    0 </span><span class="comment">/* Sets alpha to 0 for r=g=b=0, 1 otherwise       */</span>
<a name="l00064"></a>00064 <span class="preprocessor">#define PNG_BLEND1     1 </span><span class="comment">/* a = r+g+b                                      */</span>
<a name="l00065"></a>00065 <span class="preprocessor">#define PNG_BLEND2     2 </span><span class="comment">/* a = (r+g+b)/2                                  */</span>
<a name="l00066"></a>00066 <span class="preprocessor">#define PNG_BLEND3     3 </span><span class="comment">/* a = (r+g+b)/3                                  */</span>
<a name="l00067"></a>00067 <span class="preprocessor">#define PNG_BLEND4     4 </span><span class="comment">/* a = r*r+g*g+b*b                                */</span>
<a name="l00068"></a>00068 <span class="preprocessor">#define PNG_BLEND5     5 </span><span class="comment">/* a = (r*r+g*g+b*b)/2                            */</span>
<a name="l00069"></a>00069 <span class="preprocessor">#define PNG_BLEND6     6 </span><span class="comment">/* a = (r*r+g*g+b*b)/3                            */</span>
<a name="l00070"></a>00070 <span class="preprocessor">#define PNG_BLEND7     7 </span><span class="comment">/* a = (r*r+g*g+b*b)/4                            */</span>
<a name="l00071"></a>00071 <span class="preprocessor">#define PNG_BLEND8     8 </span><span class="comment">/* a = sqrt(r*r+g*g+b*b)                          */</span>
<a name="l00072"></a>00072 
<a name="l00073"></a>00073 <span class="keyword">typedef</span> <span class="keyword">struct </span>{
<a name="l00074"></a>00074         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Width;
<a name="l00075"></a>00075         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Height;
<a name="l00076"></a>00076         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Depth;
<a name="l00077"></a>00077         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Alpha;
<a name="l00078"></a>00078 } pngInfo;
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="keyword">typedef</span> <span class="keyword">struct </span>{
<a name="l00081"></a>00081         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Width;
<a name="l00082"></a>00082         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Height;
<a name="l00083"></a>00083         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Depth;
<a name="l00084"></a>00084         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Alpha;
<a name="l00085"></a>00085 
<a name="l00086"></a>00086         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Components;
<a name="l00087"></a>00087         <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *Data;
<a name="l00088"></a>00088         <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *Palette;
<a name="l00089"></a>00089 } pngRawInfo;
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 <span class="keyword">extern</span> <span class="keywordtype">int</span> APIENTRY pngLoadRaw(<span class="keyword">const</span> <span class="keywordtype">char</span> *filename, pngRawInfo *rawinfo);
<a name="l00092"></a>00092 <span class="keyword">extern</span> <span class="keywordtype">int</span> APIENTRY pngLoadRawF(FILE *file, pngRawInfo *rawinfo);
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 <span class="keyword">extern</span> <span class="keywordtype">int</span> APIENTRY pngLoad(<span class="keyword">const</span> <span class="keywordtype">char</span> *filename, <span class="keywordtype">int</span> mipmap, <span class="keywordtype">int</span> trans, pngInfo *info);
<a name="l00095"></a>00095 <span class="keyword">extern</span> <span class="keywordtype">int</span> APIENTRY pngLoadF(FILE *file, <span class="keywordtype">int</span> mipmap, <span class="keywordtype">int</span> trans, pngInfo *info);
<a name="l00096"></a>00096 
<a name="l00097"></a>00097 <span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> APIENTRY pngBind(<span class="keyword">const</span> <span class="keywordtype">char</span> *filename, <span class="keywordtype">int</span> mipmap, <span class="keywordtype">int</span> trans, pngInfo *info, <span class="keywordtype">int</span> wrapst, <span class="keywordtype">int</span> minfilter, <span class="keywordtype">int</span> magfilter);
<a name="l00098"></a>00098 <span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> APIENTRY pngBindF(FILE *file, <span class="keywordtype">int</span> mipmap, <span class="keywordtype">int</span> trans, pngInfo *info, <span class="keywordtype">int</span> wrapst, <span class="keywordtype">int</span> minfilter, <span class="keywordtype">int</span> magfilter);
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 <span class="keyword">extern</span> <span class="keywordtype">void</span> APIENTRY pngSetStencil(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> red, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> green, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> blue);
<a name="l00101"></a>00101 <span class="keyword">extern</span> <span class="keywordtype">void</span> APIENTRY pngSetAlphaCallback(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> (*callback)(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> red, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> green, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> blue));
<a name="l00102"></a>00102 <span class="keyword">extern</span> <span class="keywordtype">void</span> APIENTRY pngSetViewingGamma(<span class="keywordtype">double</span> viewingGamma);
<a name="l00103"></a>00103 <span class="keyword">extern</span> <span class="keywordtype">void</span> APIENTRY pngSetStandardOrientation(<span class="keywordtype">int</span> standardorientation);
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00106"></a>00106 <span class="preprocessor"></span>}
<a name="l00107"></a>00107 <span class="preprocessor">#endif</span>
<a name="l00108"></a>00108 <span class="preprocessor"></span>
<a name="l00109"></a>00109 <span class="preprocessor">#endif</span>
</pre></div><hr size="1"><address style="text-align: right;"><small>Generated on Mon Apr 14 22:06:00 2008 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.3 </small></address>
</body>
</html>
