<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhTileMap Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.4 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1_ph_tile_map.htm">PhTileMap</a></div>
<h1>phoenix::PhTileMap Class Reference</h1><!-- doxytag: class="phoenix::PhTileMap" --><!-- doxytag: inherits="phoenix::PhSceneNode" -->Tile map.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;PhTileMap.h&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for phoenix::PhTileMap:</div>
<div class="dynsection">

<p><center><img src="classphoenix_1_1_ph_tile_map.png" usemap="#phoenix::PhTileMap_map" border="0" alt=""></center>
<map name="phoenix::PhTileMap_map">
<area href="classphoenix_1_1_ph_scene_node.htm" alt="phoenix::PhSceneNode" shape="rect" coords="0,0,143,24">
</map>
</div>

<p>
<a href="classphoenix_1_1_ph_tile_map-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#5630fdcadd0147281d340ddf1b8afe7c">PhTileMap</a> (<a class="el" href="classphoenix_1_1_ph_scene_manager.htm">PhSceneManager</a> *sc, <a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> s, <a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> ts, <a class="el" href="classphoenix_1_1_ph_texture.htm">PhTexture</a> *t, float d=-100.0f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Construct.  <a href="#5630fdcadd0147281d340ddf1b8afe7c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ba38d3b5402f2aba39d1cc592dee978e"></a><!-- doxytag: member="phoenix::PhTileMap::~PhTileMap" ref="ba38d3b5402f2aba39d1cc592dee978e" args="()" -->
virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#ba38d3b5402f2aba39d1cc592dee978e">~PhTileMap</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destruct. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#8456b0f38e30c9030d5e6cee3874ee05">setTile</a> (int x, int t)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set tile.  <a href="#8456b0f38e30c9030d5e6cee3874ee05"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#adf811b71d18a229b08dfda4b6bf0411">setTile</a> (<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> pos, int t)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set tile.  <a href="#adf811b71d18a229b08dfda4b6bf0411"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#d535776a11daa23d9e8a98f2af49295b">getTile</a> (int x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get tile.  <a href="#d535776a11daa23d9e8a98f2af49295b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#baf681b45eaef2bf27a5d827440d37f1">getTile</a> (<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> pos)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get tile.  <a href="#baf681b45eaef2bf27a5d827440d37f1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#6cdd446c9cd5166ca8539a792e0b55c2">setMapSize</a> (<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> s)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set map size.  <a href="#6cdd446c9cd5166ca8539a792e0b55c2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#dcec730844e06133b1a098d62f804bbd">getMapSize</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get map size.  <a href="#dcec730844e06133b1a098d62f804bbd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#36a18c663df9d5ebb0f42d1c172ac2fc">setTileSize</a> (<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> s)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set tile size.  <a href="#36a18c663df9d5ebb0f42d1c172ac2fc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#f709fa2dba2ce8df6936db0ea83f430e">getTileSize</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get tile size.  <a href="#f709fa2dba2ce8df6936db0ea83f430e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#03de9c8dace4872e1ab151c0158e2552">setTexture</a> (<a class="el" href="classphoenix_1_1_ph_texture.htm">PhTexture</a> *t)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set texture.  <a href="#03de9c8dace4872e1ab151c0158e2552"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1_ph_texture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#f7825f032a89d8d3955a61d618e72e2b">getTexture</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get texture.  <a href="#f7825f032a89d8d3955a61d618e72e2b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#daa879bdd41fd43921fdeb0b730e213a">saveMap</a> (string f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Save map.  <a href="#daa879bdd41fd43921fdeb0b730e213a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#d976eafd408e096df9965abffbd938b9">loadMap</a> (string f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Load map.  <a href="#d976eafd408e096df9965abffbd938b9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#bc4a2ac72044663e9a0a5dfc2bc18491">onRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Render call.  <a href="#bc4a2ac72044663e9a0a5dfc2bc18491"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#b54cb66b7e1dd7899231849bc1c43ca4">onPreRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pre-render call.  <a href="#b54cb66b7e1dd7899231849bc1c43ca4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#d3d6de5addbee14e229afa8b3d54168a">onPostRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Post-render call.  <a href="#d3d6de5addbee14e229afa8b3d54168a"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9fb959b0f28b157e96dab6009da16604"></a><!-- doxytag: member="phoenix::PhTileMap::allocateTiles" ref="9fb959b0f28b157e96dab6009da16604" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#9fb959b0f28b157e96dab6009da16604">allocateTiles</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Allocates the map vector. <br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="95c413bc5c980e5c59fc32355304852b"></a><!-- doxytag: member="phoenix::PhTileMap::map" ref="95c413bc5c980e5c59fc32355304852b" args="" -->
vector&lt; char &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#95c413bc5c980e5c59fc32355304852b">map</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Stores the values of the tiles. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7fa7ba544aacc73b77e8cb5ccfa184f1"></a><!-- doxytag: member="phoenix::PhTileMap::tilesize" ref="7fa7ba544aacc73b77e8cb5ccfa184f1" args="" -->
<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#7fa7ba544aacc73b77e8cb5ccfa184f1">tilesize</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Stores the size of each tile (in pixels). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="003cc60d52dbc87f7a4c057d4306efd8"></a><!-- doxytag: member="phoenix::PhTileMap::tilemapsize" ref="003cc60d52dbc87f7a4c057d4306efd8" args="" -->
<a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#003cc60d52dbc87f7a4c057d4306efd8">tilemapsize</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Stores the size of the map itself (in tiles). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b63a2bcf402df6437de2f64925207cc4"></a><!-- doxytag: member="phoenix::PhTileMap::texture" ref="b63a2bcf402df6437de2f64925207cc4" args="" -->
<a class="el" href="classphoenix_1_1_ph_texture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#b63a2bcf402df6437de2f64925207cc4">texture</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Texture that is used to peice together the map. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="195a61bd4ffe2b6c413a8f4a4afbd699"></a><!-- doxytag: member="phoenix::PhTileMap::smgr" ref="195a61bd4ffe2b6c413a8f4a4afbd699" args="" -->
<a class="el" href="classphoenix_1_1_ph_scene_manager.htm">PhSceneManager</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1_ph_tile_map.htm#195a61bd4ffe2b6c413a8f4a4afbd699">smgr</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pointer to the scene manager. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Tile map. 
<p>
A simple yet highly effective tilemap scene node. Once it is created it's self-contained. The scene manager takes care of rendering it, all you really have to do is create the map and load it. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="5630fdcadd0147281d340ddf1b8afe7c"></a><!-- doxytag: member="phoenix::PhTileMap::PhTileMap" ref="5630fdcadd0147281d340ddf1b8afe7c" args="(PhSceneManager *sc, PhVector2d s, PhVector2d ts, PhTexture *t, float d=-100.0f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhTileMap::PhTileMap           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_scene_manager.htm">PhSceneManager</a> *&nbsp;</td>
          <td class="paramname"> <em>sc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>ts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_texture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>d</em> = <code>-100.0f</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Construct. 
<p>
Builds a tilemap scene node. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sc</em>&nbsp;</td><td>Pointer to the scene manager. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>Size of the tilemap (in tiles). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ts</em>&nbsp;</td><td>Size of each tile in the tilemap (in pixels). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>Texture where the tiles will come from. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>d</em>&nbsp;</td><td>Depth of the tile map (default -100.0f). </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="8456b0f38e30c9030d5e6cee3874ee05"></a><!-- doxytag: member="phoenix::PhTileMap::setTile" ref="8456b0f38e30c9030d5e6cee3874ee05" args="(int x, int t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::setTile           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>t</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set tile. 
<p>
Sets the tile at the given index to the given value. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Index of the tile. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>New value of the tile. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#d535776a11daa23d9e8a98f2af49295b" title="Get tile.">getTile()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="adf811b71d18a229b08dfda4b6bf0411"></a><!-- doxytag: member="phoenix::PhTileMap::setTile" ref="adf811b71d18a229b08dfda4b6bf0411" args="(PhVector2d pos, int t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::setTile           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>t</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set tile. 
<p>
Sets the tile at the given position to the given value. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pos</em>&nbsp;</td><td>The position of the tile, ie &lt;2,2&gt; is the second tile from the top, second tile from the left. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>The new value of the tile. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#d535776a11daa23d9e8a98f2af49295b" title="Get tile.">getTile()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="d535776a11daa23d9e8a98f2af49295b"></a><!-- doxytag: member="phoenix::PhTileMap::getTile" ref="d535776a11daa23d9e8a98f2af49295b" args="(int x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int phoenix::PhTileMap::getTile           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>x</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get tile. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Index of the tile. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The value of the tile at index X. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#8456b0f38e30c9030d5e6cee3874ee05" title="Set tile.">setTile()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="baf681b45eaef2bf27a5d827440d37f1"></a><!-- doxytag: member="phoenix::PhTileMap::getTile" ref="baf681b45eaef2bf27a5d827440d37f1" args="(PhVector2d pos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int phoenix::PhTileMap::getTile           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>pos</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get tile. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pos</em>&nbsp;</td><td>Position of the tile. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The value of the tile at the given position. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#8456b0f38e30c9030d5e6cee3874ee05" title="Set tile.">setTile()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="6cdd446c9cd5166ca8539a792e0b55c2"></a><!-- doxytag: member="phoenix::PhTileMap::setMapSize" ref="6cdd446c9cd5166ca8539a792e0b55c2" args="(PhVector2d s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::setMapSize           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set map size. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>The new size of the map, in tiles. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#dcec730844e06133b1a098d62f804bbd" title="Get map size.">getMapSize()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="dcec730844e06133b1a098d62f804bbd"></a><!-- doxytag: member="phoenix::PhTileMap::getMapSize" ref="dcec730844e06133b1a098d62f804bbd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> phoenix::PhTileMap::getMapSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get map size. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The size of the map, in tiles. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#6cdd446c9cd5166ca8539a792e0b55c2" title="Set map size.">setMapSize()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="36a18c663df9d5ebb0f42d1c172ac2fc"></a><!-- doxytag: member="phoenix::PhTileMap::setTileSize" ref="36a18c663df9d5ebb0f42d1c172ac2fc" args="(PhVector2d s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::setTileSize           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set tile size. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>The new size of the tiles, in pixels. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#f709fa2dba2ce8df6936db0ea83f430e" title="Get tile size.">getTileSize()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="f709fa2dba2ce8df6936db0ea83f430e"></a><!-- doxytag: member="phoenix::PhTileMap::getTileSize" ref="f709fa2dba2ce8df6936db0ea83f430e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1_ph_vector2d.htm">PhVector2d</a> phoenix::PhTileMap::getTileSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get tile size. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The size of the tiles, in pixels. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#36a18c663df9d5ebb0f42d1c172ac2fc" title="Set tile size.">setTileSize()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="03de9c8dace4872e1ab151c0158e2552"></a><!-- doxytag: member="phoenix::PhTileMap::setTexture" ref="03de9c8dace4872e1ab151c0158e2552" args="(PhTexture *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::setTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1_ph_texture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set texture. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>The new tile sheet texture. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#f7825f032a89d8d3955a61d618e72e2b" title="Get texture.">getTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="f7825f032a89d8d3955a61d618e72e2b"></a><!-- doxytag: member="phoenix::PhTileMap::getTexture" ref="f7825f032a89d8d3955a61d618e72e2b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1_ph_texture.htm">PhTexture</a>* phoenix::PhTileMap::getTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get texture. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The tile sheet texture. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#03de9c8dace4872e1ab151c0158e2552" title="Set texture.">setTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="daa879bdd41fd43921fdeb0b730e213a"></a><!-- doxytag: member="phoenix::PhTileMap::saveMap" ref="daa879bdd41fd43921fdeb0b730e213a" args="(string f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::saveMap           </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>f</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Save map. 
<p>
Saves the current tilemap to a file. <br>
 File format information: <br>
 first four bytes are the x of the mapsize. <br>
 second four bytes are the y of the mapsize. <br>
 third set of bytes is the x of the tilesize. <br>
 fourth set of bytes is the y of the tilesize. <br>
 remaining bytes each contain one tile. <br>
 <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>f</em>&nbsp;</td><td>Filename to save it to. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#d976eafd408e096df9965abffbd938b9" title="Load map.">loadMap()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="d976eafd408e096df9965abffbd938b9"></a><!-- doxytag: member="phoenix::PhTileMap::loadMap" ref="d976eafd408e096df9965abffbd938b9" args="(string f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::loadMap           </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>f</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Load map. 
<p>
Loads a tilemap from a file. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>f</em>&nbsp;</td><td>The filename to load from. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1_ph_tile_map.htm#daa879bdd41fd43921fdeb0b730e213a" title="Save map.">saveMap()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="bc4a2ac72044663e9a0a5dfc2bc18491"></a><!-- doxytag: member="phoenix::PhTileMap::onRender" ref="bc4a2ac72044663e9a0a5dfc2bc18491" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::onRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Render call. 
<p>
Any nodes that called phoenix::PhSceneManger::registerForRendering() will first be sorted according to their depth, then this function is called for each node in order. It is highly suggested that you put any drawing code in this function. Of course, it's possible to draw during any of the three node passes, but this pass is the only one that is exclusive (Nodes must register) and is the only one that is depth sorted. 
<p>Reimplemented from <a class="el" href="classphoenix_1_1_ph_scene_node.htm#dbc845e590cb208ee4aae79e407dc0a0">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="b54cb66b7e1dd7899231849bc1c43ca4"></a><!-- doxytag: member="phoenix::PhTileMap::onPreRender" ref="b54cb66b7e1dd7899231849bc1c43ca4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::onPreRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Pre-render call. 
<p>
All nodes in the list will have this function called by the scenemanger once per frame. Overloading this is required. If the scene node wants to be drawn it must call phoenix::PhSceneManger::registerForRendering(). 
<p>Reimplemented from <a class="el" href="classphoenix_1_1_ph_scene_node.htm#aadc8431e4764b5beb8f5dec11b5354f">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="d3d6de5addbee14e229afa8b3d54168a"></a><!-- doxytag: member="phoenix::PhTileMap::onPostRender" ref="d3d6de5addbee14e229afa8b3d54168a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTileMap::onPostRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Post-render call. 
<p>
The third render pass takes place at the end of every frame, the scene manager calls this function for every node in the list, and any code that should happen after everything is drawn should go here. 
<p>Reimplemented from <a class="el" href="classphoenix_1_1_ph_scene_node.htm#7048c33dcc9397d0c890222d41de0280">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>PhTileMap.h</ul>
<hr size="1"><address style="text-align: right;"><small>Generated on Sat Dec 1 20:29:05 2007 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.4 </small></address>
</body>
</html>
