<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhBackground Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhBackground.htm">PhBackground</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhBackground Class Reference</h1><!-- doxytag: class="phoenix::PhBackground" --><!-- doxytag: inherits="phoenix::PhSceneNode" -->Simple background implementation.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhBackground_8h-source.htm">PhBackground.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for phoenix::PhBackground:</div>
<div class="dynsection">
<p><center><img src="classphoenix_1_1PhBackground__inherit__graph.png" border="0" usemap="#phoenix_1_1PhBackground__inherit__map" alt="Inheritance graph"></center>
<map name="phoenix_1_1PhBackground__inherit__map">
<area shape="rect" href="classphoenix_1_1PhSceneNode.htm" title="Scenenode Prototype." alt="" coords="7,5,164,32"></map>
<center><font size="2">[<a href="graph_legend.htm">legend</a>]</font></center></div>

<p>
<a href="classphoenix_1_1PhBackground-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#75bcafbe595af6c6a3a2fb39513814f4">PhBackground</a> (<a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *s, <a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *t, const <a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> &amp;c=<a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>(255, 255, 255), const float &amp;d=-100.0f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#75bcafbe595af6c6a3a2fb39513814f4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#092e53ea1a7f50593dce0bdad1b62516">~PhBackground</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#092e53ea1a7f50593dce0bdad1b62516"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#787c1afaa8c3eb78974c88f9fd6143a3">setColor</a> (const <a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> &amp;c)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set color function.  <a href="#787c1afaa8c3eb78974c88f9fd6143a3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#e3a494d0e5dc82530207ec6749bd8b17">getColor</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get color function.  <a href="#e3a494d0e5dc82530207ec6749bd8b17"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#5e386dec0c81a57d35441f8515311a3e">setTexture</a> (<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *t)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set texture function.  <a href="#5e386dec0c81a57d35441f8515311a3e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#7a459145f48a2cf7f9e1900d35d2c26b">getTexture</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get texture function.  <a href="#7a459145f48a2cf7f9e1900d35d2c26b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#939ce968e2ea2d5779d7c52b10d3e55f">onPreRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Overloaded onPreRender.  <a href="#939ce968e2ea2d5779d7c52b10d3e55f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#8a68643b6953fc912b89d7b0f82e4225">onRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Overloaded onRender.  <a href="#8a68643b6953fc912b89d7b0f82e4225"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#cd45cb4f715f32f07f7ac155c67d21be">onPostRender</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Overloaded onPostRender.  <a href="#cd45cb4f715f32f07f7ac155c67d21be"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#4df877d162ee59e290cf53ee028a317b">color</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Color.  <a href="#4df877d162ee59e290cf53ee028a317b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#2e7b089d82b4dfa09e151238d0f26058">smgr</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scenemager.  <a href="#2e7b089d82b4dfa09e151238d0f26058"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm#df26e04d7ffb2b192c6ce0477941524f">texture</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Texture.  <a href="#df26e04d7ffb2b192c6ce0477941524f"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Simple background implementation. 
<p>
This class gives a simple scene node interface to draw a background that consists of a texture that is repeated over the whole screen. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSolidBackground.htm" title="Solid background node.">phoenix::PhSolidBackground</a>, <a class="el" href="classphoenix_1_1PhSceneNode.htm" title="Scenenode Prototype.">phoenix::PhSceneNode</a> </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="75bcafbe595af6c6a3a2fb39513814f4"></a><!-- doxytag: member="phoenix::PhBackground::PhBackground" ref="75bcafbe595af6c6a3a2fb39513814f4" args="(PhSceneManager *s, PhTexture *t, const PhColor &amp;c=PhColor(255, 255, 255), const float &amp;d=&#45;100.0f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhBackground::PhBackground           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a> *&nbsp;</td>
          <td class="paramname"> <em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>c</em> = <code><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>(255,&nbsp;255,&nbsp;255)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&nbsp;</td>
          <td class="paramname"> <em>d</em> = <code>-100.0f</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Builds the simple background scene node. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>A pointer to the scene manger, required. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>A pointer to the texture, required. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>The color to colorize the texture with, defualts to (255,255,255). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>d</em>&nbsp;</td><td>The depth to be drawn at, defaults at -100.0f, but as long as it's behind all objects you should be fine. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="092e53ea1a7f50593dce0bdad1b62516"></a><!-- doxytag: member="phoenix::PhBackground::~PhBackground" ref="092e53ea1a7f50593dce0bdad1b62516" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhBackground::~PhBackground           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>
Destructs the node, nothing to see here... 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="e3a494d0e5dc82530207ec6749bd8b17"></a><!-- doxytag: member="phoenix::PhBackground::getColor" ref="e3a494d0e5dc82530207ec6749bd8b17" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a>&amp; phoenix::PhBackground::getColor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get color function. 
<p>
Get the current color used to colorize the texture. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The current color. </dd></dl>

</div>
</div><p>
<a class="anchor" name="7a459145f48a2cf7f9e1900d35d2c26b"></a><!-- doxytag: member="phoenix::PhBackground::getTexture" ref="7a459145f48a2cf7f9e1900d35d2c26b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a>* phoenix::PhBackground::getTexture           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get texture function. 
<p>
Gets the current texture used by this node. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The current texture. </dd></dl>

</div>
</div><p>
<a class="anchor" name="cd45cb4f715f32f07f7ac155c67d21be"></a><!-- doxytag: member="phoenix::PhBackground::onPostRender" ref="cd45cb4f715f32f07f7ac155c67d21be" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhBackground::onPostRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Overloaded onPostRender. 
<p>
Blank overload of <a class="el" href="classphoenix_1_1PhSceneNode.htm#7048c33dcc9397d0c890222d41de0280" title="Post-render call.">PhSceneNode::onPostRender()</a>, this class does not need to do anything after it draws. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSceneNode.htm#7048c33dcc9397d0c890222d41de0280" title="Post-render call.">phoenix::PhSceneNode::onPostRender()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#7048c33dcc9397d0c890222d41de0280">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="939ce968e2ea2d5779d7c52b10d3e55f"></a><!-- doxytag: member="phoenix::PhBackground::onPreRender" ref="939ce968e2ea2d5779d7c52b10d3e55f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhBackground::onPreRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Overloaded onPreRender. 
<p>
Simply registers the node for rendering, as prescribed in <a class="el" href="classphoenix_1_1PhSceneNode.htm" title="Scenenode Prototype.">PhSceneNode</a>. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSceneNode.htm#aadc8431e4764b5beb8f5dec11b5354f" title="Pre-render call.">phoenix::PhSceneNode::onPreRender()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#aadc8431e4764b5beb8f5dec11b5354f">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="8a68643b6953fc912b89d7b0f82e4225"></a><!-- doxytag: member="phoenix::PhBackground::onRender" ref="8a68643b6953fc912b89d7b0f82e4225" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhBackground::onRender           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Overloaded onRender. 
<p>
This draws the background using the render system with the current texture and color. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSceneNode.htm#dbc845e590cb208ee4aae79e407dc0a0" title="Render call.">phoenix::PhSceneNode::onRender()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="classphoenix_1_1PhSceneNode.htm#dbc845e590cb208ee4aae79e407dc0a0">phoenix::PhSceneNode</a>.</p>

</div>
</div><p>
<a class="anchor" name="787c1afaa8c3eb78974c88f9fd6143a3"></a><!-- doxytag: member="phoenix::PhBackground::setColor" ref="787c1afaa8c3eb78974c88f9fd6143a3" args="(const PhColor &amp;c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhBackground::setColor           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>c</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set color function. 
<p>
Sets the color used to colorize the texture. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>The new color. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="5e386dec0c81a57d35441f8515311a3e"></a><!-- doxytag: member="phoenix::PhBackground::setTexture" ref="5e386dec0c81a57d35441f8515311a3e" args="(PhTexture *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhBackground::setTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set texture function. 
<p>
Sets the texture used by this node. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>The new texture. </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="4df877d162ee59e290cf53ee028a317b"></a><!-- doxytag: member="phoenix::PhBackground::color" ref="4df877d162ee59e290cf53ee028a317b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a> <a class="el" href="classphoenix_1_1PhBackground.htm#4df877d162ee59e290cf53ee028a317b">phoenix::PhBackground::color</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Color. 
<p>
Colorizes the texture, default is (255,255,255). <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhBackground.htm#787c1afaa8c3eb78974c88f9fd6143a3" title="Set color function.">setColor()</a>, <a class="el" href="classphoenix_1_1PhBackground.htm#e3a494d0e5dc82530207ec6749bd8b17" title="Get color function.">getColor()</a>, <a class="el" href="classphoenix_1_1PhColor.htm" title="Color.">phoenix::PhColor</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="2e7b089d82b4dfa09e151238d0f26058"></a><!-- doxytag: member="phoenix::PhBackground::smgr" ref="2e7b089d82b4dfa09e151238d0f26058" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a>* <a class="el" href="classphoenix_1_1PhBackground.htm#2e7b089d82b4dfa09e151238d0f26058">phoenix::PhBackground::smgr</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Scenemager. 
<p>
Pointer to the scenemanger, this is required by all scene nodes. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhSceneManager.htm" title="Scene Manager Class.">phoenix::PhSceneManager</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="df26e04d7ffb2b192c6ce0477941524f"></a><!-- doxytag: member="phoenix::PhBackground::texture" ref="df26e04d7ffb2b192c6ce0477941524f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a>* <a class="el" href="classphoenix_1_1PhBackground.htm#df26e04d7ffb2b192c6ce0477941524f">phoenix::PhBackground::texture</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Texture. 
<p>
Pointer to the texture to fill the screen with. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhTexture.htm" title="Texture class.">phoenix::PhTexture</a> </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>/home/jon/Phoenix/svn/0.3/libPhoenixGL/<a class="el" href="PhBackground_8h-source.htm">PhBackground.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Apr 26 01:07:55 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
