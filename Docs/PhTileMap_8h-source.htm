<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: svn/0.3/libPhoenixGL/PhTileMap.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>svn/0.3/libPhoenixGL/PhTileMap.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2007, Jonathan Wayne Parrott, Denzel Morris</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the "Software"), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE.</span>
<a name="l00022"></a>00022 <span class="comment"></span>
<a name="l00023"></a>00023 <span class="comment">*/</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef PHOENIXTILE</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define PHOENIXTILE</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor">#include "PhSceneManager.h"</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include "PhSceneNode.h"</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="keyword">using namespace </span>std;
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 <span class="keyword">namespace </span>phoenix
<a name="l00036"></a>00036 {
<a name="l00037"></a>00037 
<a name="l00039"></a>00039 
<a name="l00044"></a><a class="code" href="classphoenix_1_1PhTileMap.htm">00044</a>     <span class="keyword">class </span><a class="code" href="classphoenix_1_1PhTileMap.htm" title="Tile map.">PhTileMap</a>: <span class="keyword">public</span> <a class="code" href="classphoenix_1_1PhSceneNode.htm" title="Scenenode Prototype.">PhSceneNode</a>
<a name="l00045"></a>00045     {
<a name="l00046"></a>00046 
<a name="l00047"></a>00047     <span class="keyword">protected</span>:
<a name="l00048"></a>00048 
<a name="l00050"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#1925334777c5d41b16c547367802c446">00050</a>         vector&lt;unsigned int&gt; <a class="code" href="classphoenix_1_1PhTileMap.htm#1925334777c5d41b16c547367802c446" title="Stores the values of the tiles.">map</a>;
<a name="l00051"></a>00051 
<a name="l00053"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#7fa7ba544aacc73b77e8cb5ccfa184f1">00053</a>         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> <a class="code" href="classphoenix_1_1PhTileMap.htm#7fa7ba544aacc73b77e8cb5ccfa184f1" title="Stores the size of each tile (in pixels).">tilesize</a>;
<a name="l00054"></a>00054 
<a name="l00056"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8">00056</a>         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>;
<a name="l00057"></a>00057 
<a name="l00059"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#b63a2bcf402df6437de2f64925207cc4">00059</a>         <a class="code" href="classphoenix_1_1PhTexture.htm" title="Texture class.">PhTexture</a>* <a class="code" href="classphoenix_1_1PhTileMap.htm#b63a2bcf402df6437de2f64925207cc4" title="Texture that is used to peice together the map.">texture</a>;
<a name="l00060"></a>00060 
<a name="l00062"></a>00062         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#9fb959b0f28b157e96dab6009da16604" title="Allocates the map vector.">allocateTiles</a>();
<a name="l00063"></a>00063 
<a name="l00064"></a>00064     <span class="keyword">public</span>:
<a name="l00065"></a>00065 
<a name="l00067"></a>00067 
<a name="l00075"></a>00075         <a class="code" href="classphoenix_1_1PhTileMap.htm#5630fdcadd0147281d340ddf1b8afe7c" title="Construct.">PhTileMap</a>(<a class="code" href="classphoenix_1_1PhSceneManager.htm" title="Scene Manager Class.">PhSceneManager</a>* sc, <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> s, <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> ts, <a class="code" href="classphoenix_1_1PhTexture.htm" title="Texture class.">PhTexture</a>* t, <span class="keywordtype">float</span> d = -100.0f);
<a name="l00076"></a>00076 
<a name="l00078"></a>00078         <span class="keyword">virtual</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#ba38d3b5402f2aba39d1cc592dee978e" title="Destruct.">~PhTileMap</a>();
<a name="l00079"></a>00079 
<a name="l00081"></a>00081 
<a name="l00087"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#1ecb9a0527776e8c4d37d0b7afce60f3">00087</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#1ecb9a0527776e8c4d37d0b7afce60f3" title="Set tile (1D).">setTile</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; x, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; t)
<a name="l00088"></a>00088         {
<a name="l00089"></a>00089                         <span class="keywordflow">if</span> (x &lt; <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>.<a class="code" href="classphoenix_1_1PhVector2d.htm#c0d9341de69ffca7832997aa6d617573">getX</a>() * <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>.<a class="code" href="classphoenix_1_1PhVector2d.htm#348b86258f12290e27a344b8cee92150">getY</a>())
<a name="l00090"></a>00090                         {
<a name="l00091"></a>00091                                 <a class="code" href="classphoenix_1_1PhTileMap.htm#1925334777c5d41b16c547367802c446" title="Stores the values of the tiles.">map</a>[x] = t;
<a name="l00092"></a>00092                         }
<a name="l00093"></a>00093         }
<a name="l00094"></a>00094 
<a name="l00096"></a>00096 
<a name="l00102"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#409974f31abc24ee940ccdce978177a4">00102</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#1ecb9a0527776e8c4d37d0b7afce60f3" title="Set tile (1D).">setTile</a>( <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; pos, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; t)
<a name="l00103"></a>00103         {
<a name="l00104"></a>00104                         <span class="keywordflow">if</span> (pos.<a class="code" href="classphoenix_1_1PhVector2d.htm#c0d9341de69ffca7832997aa6d617573">getX</a>() &lt; <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>.<a class="code" href="classphoenix_1_1PhVector2d.htm#c0d9341de69ffca7832997aa6d617573">getX</a>() &amp;&amp; pos.<a class="code" href="classphoenix_1_1PhVector2d.htm#348b86258f12290e27a344b8cee92150">getY</a>() &lt; <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>.<a class="code" href="classphoenix_1_1PhVector2d.htm#348b86258f12290e27a344b8cee92150">getY</a>())
<a name="l00105"></a>00105                         {
<a name="l00106"></a>00106                                 <a class="code" href="classphoenix_1_1PhTileMap.htm#1925334777c5d41b16c547367802c446" title="Stores the values of the tiles.">map</a>[int ( (pos.<a class="code" href="classphoenix_1_1PhVector2d.htm#348b86258f12290e27a344b8cee92150">getY</a>()*<a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>.<a class="code" href="classphoenix_1_1PhVector2d.htm#c0d9341de69ffca7832997aa6d617573">getX</a>())+pos.<a class="code" href="classphoenix_1_1PhVector2d.htm#c0d9341de69ffca7832997aa6d617573">getX</a>() )] = t;
<a name="l00107"></a>00107                         }
<a name="l00108"></a>00108         }
<a name="l00109"></a>00109 
<a name="l00111"></a>00111 
<a name="l00116"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#cc9ecf6a80ee5c6ada1f7762343d4c10">00116</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; <a class="code" href="classphoenix_1_1PhTileMap.htm#cc9ecf6a80ee5c6ada1f7762343d4c10" title="Get tile (1D).">getTile</a>( <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; x)<span class="keyword"> const</span>
<a name="l00117"></a>00117 <span class="keyword">        </span>{
<a name="l00118"></a>00118                         <span class="keywordflow">if</span> (x &lt; <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>.<a class="code" href="classphoenix_1_1PhVector2d.htm#c0d9341de69ffca7832997aa6d617573">getX</a>() * <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>.<a class="code" href="classphoenix_1_1PhVector2d.htm#348b86258f12290e27a344b8cee92150">getY</a>())
<a name="l00119"></a>00119                         {
<a name="l00120"></a>00120                                 <span class="keywordflow">return</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#1925334777c5d41b16c547367802c446" title="Stores the values of the tiles.">map</a>[x];
<a name="l00121"></a>00121                         }
<a name="l00122"></a>00122                         <span class="keywordflow">return</span> *(<a class="code" href="classphoenix_1_1PhTileMap.htm#1925334777c5d41b16c547367802c446" title="Stores the values of the tiles.">map</a>.begin());
<a name="l00123"></a>00123         }
<a name="l00124"></a>00124 
<a name="l00126"></a>00126 
<a name="l00131"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#cfa0c589f4ce31debd6a7092f0237ddd">00131</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; <a class="code" href="classphoenix_1_1PhTileMap.htm#cfa0c589f4ce31debd6a7092f0237ddd" title="Get tile (2D).">getTile</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; pos)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#cfa0c589f4ce31debd6a7092f0237ddd" title="Get tile (2D).">getTile</a>( (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)( (pos.<a class="code" href="classphoenix_1_1PhVector2d.htm#348b86258f12290e27a344b8cee92150">getY</a>()*<a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>.<a class="code" href="classphoenix_1_1PhVector2d.htm#c0d9341de69ffca7832997aa6d617573">getX</a>())+pos.<a class="code" href="classphoenix_1_1PhVector2d.htm#c0d9341de69ffca7832997aa6d617573">getX</a>() ) ); }
<a name="l00132"></a>00132 
<a name="l00134"></a>00134 
<a name="l00138"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#5c4447f5b18021d246e900ee7cd80ef5">00138</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#5c4447f5b18021d246e900ee7cd80ef5" title="Set map size.">setMapSize</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; s)
<a name="l00139"></a>00139         {
<a name="l00140"></a>00140                 <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a> = s;
<a name="l00141"></a>00141                 <a class="code" href="classphoenix_1_1PhTileMap.htm#9fb959b0f28b157e96dab6009da16604" title="Allocates the map vector.">allocateTiles</a>();
<a name="l00142"></a>00142         }
<a name="l00143"></a>00143 
<a name="l00145"></a>00145 
<a name="l00149"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#afa758cf8f20f594905848605aa189dd">00149</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; <a class="code" href="classphoenix_1_1PhTileMap.htm#afa758cf8f20f594905848605aa189dd" title="Get map size.">getMapSize</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#003cc60d52dbc87f7a4c057d4306efd8" title="Stores the size of the map itself (in tiles).">tilemapsize</a>; }
<a name="l00150"></a>00150 
<a name="l00152"></a>00152 
<a name="l00156"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#e4e22dc4c3332c906639e6247b5c6c59">00156</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#e4e22dc4c3332c906639e6247b5c6c59" title="Set tile size.">setTileSize</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; s) { <a class="code" href="classphoenix_1_1PhTileMap.htm#7fa7ba544aacc73b77e8cb5ccfa184f1" title="Stores the size of each tile (in pixels).">tilesize</a> = s; }
<a name="l00157"></a>00157 
<a name="l00159"></a>00159 
<a name="l00163"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#018b38c6ff66b79399c9660706047ba0">00163</a>         <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; <a class="code" href="classphoenix_1_1PhTileMap.htm#018b38c6ff66b79399c9660706047ba0" title="Get tile size.">getTileSize</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#7fa7ba544aacc73b77e8cb5ccfa184f1" title="Stores the size of each tile (in pixels).">tilesize</a>; }
<a name="l00164"></a>00164 
<a name="l00166"></a>00166 
<a name="l00170"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#03de9c8dace4872e1ab151c0158e2552">00170</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#03de9c8dace4872e1ab151c0158e2552" title="Set texture.">setTexture</a>(<a class="code" href="classphoenix_1_1PhTexture.htm" title="Texture class.">PhTexture</a>* t) { <a class="code" href="classphoenix_1_1PhTileMap.htm#b63a2bcf402df6437de2f64925207cc4" title="Texture that is used to peice together the map.">texture</a> = t; }
<a name="l00171"></a>00171 
<a name="l00173"></a>00173 
<a name="l00177"></a><a class="code" href="classphoenix_1_1PhTileMap.htm#f1f69e756cd2834411e79565692e2222">00177</a>         <span class="keyword">inline</span> <a class="code" href="classphoenix_1_1PhTexture.htm" title="Texture class.">PhTexture</a>* <a class="code" href="classphoenix_1_1PhTileMap.htm#f1f69e756cd2834411e79565692e2222" title="Get texture.">getTexture</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#b63a2bcf402df6437de2f64925207cc4" title="Texture that is used to peice together the map.">texture</a>; }
<a name="l00178"></a>00178 
<a name="l00180"></a>00180 
<a name="l00191"></a>00191         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#daa879bdd41fd43921fdeb0b730e213a" title="Save map.">saveMap</a>(<span class="keywordtype">string</span> f);
<a name="l00192"></a>00192 
<a name="l00194"></a>00194 
<a name="l00199"></a>00199         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#d976eafd408e096df9965abffbd938b9" title="Load map.">loadMap</a>(<span class="keywordtype">string</span> f);
<a name="l00200"></a>00200 
<a name="l00201"></a>00201         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#bc4a2ac72044663e9a0a5dfc2bc18491" title="Render call.">onRender</a>();
<a name="l00202"></a>00202         <span class="keywordtype">void</span> <a class="code" href="classphoenix_1_1PhTileMap.htm#b54cb66b7e1dd7899231849bc1c43ca4" title="Pre-render call.">onPreRender</a>();
<a name="l00203"></a>00203 
<a name="l00204"></a>00204     };
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 }
<a name="l00207"></a>00207 
<a name="l00208"></a>00208 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:29:49 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
