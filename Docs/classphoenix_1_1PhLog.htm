<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhLog Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhLog.htm">PhLog</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhLog Class Reference</h1><!-- doxytag: class="phoenix::PhLog" -->Log class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhLog_8h-source.htm">svn/0.3/libPhoenixGL/PhLog.h</a>&gt;</code>
<p>

<p>
<a href="classphoenix_1_1PhLog-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e9c62a0eb667f3d7c21a5b3d1164f50a"></a><!-- doxytag: member="phoenix::PhLog::PhLog" ref="e9c62a0eb667f3d7c21a5b3d1164f50a" args="(PhLogManager *lmgr, std::string filename=std::string(&quot;&quot;))" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#e9c62a0eb667f3d7c21a5b3d1164f50a">PhLog</a> (<a class="el" href="classphoenix_1_1PhLogManager.htm">PhLogManager</a> *lmgr, std::string filename=std::string(&quot;&quot;))</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cf7d6233f7835ced1b1b7bfd1d2b084b"></a><!-- doxytag: member="phoenix::PhLog::~PhLog" ref="cf7d6233f7835ced1b1b7bfd1d2b084b" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#cf7d6233f7835ced1b1b7bfd1d2b084b">~PhLog</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#1107db5d5d88c4590786d66345a62ccd">openFile</a> (std::string logFileName)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Open file.  <a href="#1107db5d5d88c4590786d66345a62ccd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#1efb692148f63ddf1747ffdc297828bb">writeToLog</a> (std::string text)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Write to log.  <a href="#1efb692148f63ddf1747ffdc297828bb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#aa567de77dd9244e4f8741efb535e75c">useTabs</a> (const bool &amp;tabs)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Use tabs.  <a href="#aa567de77dd9244e4f8741efb535e75c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#90e49a108b3e9cf6e21ec8f464688060">useSpaces</a> (const bool &amp;spaces)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Use spaces.  <a href="#90e49a108b3e9cf6e21ec8f464688060"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const bool &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#189d25501b1c4de11a13f16e231b9d4a">areTabsUsed</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Are tabs used.  <a href="#189d25501b1c4de11a13f16e231b9d4a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const bool &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#ac200a67db1fd85eb8b4e9ad3aced34b">areSpacesUsed</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Are spaces used.  <a href="#ac200a67db1fd85eb8b4e9ad3aced34b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#7bda33df98b19d7e6ca31d10e905e236">setNumberOfTabs</a> (const int &amp;numTabs)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set number of tabs.  <a href="#7bda33df98b19d7e6ca31d10e905e236"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#6bf5f3fb7ff18e336da8333cc81553ea">setNumberOfSpaces</a> (const int &amp;numSpaces)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set number of spaces.  <a href="#6bf5f3fb7ff18e336da8333cc81553ea"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const int &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#df14416c85640a3a82fa302efa20ba66">getNumberOfTabs</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get number of tabs.  <a href="#df14416c85640a3a82fa302efa20ba66"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const int &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#43268bc89eecb2d4f55cb85e811dfc62">getNumberOfSpaces</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get number of spaces.  <a href="#43268bc89eecb2d4f55cb85e811dfc62"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#2c9ba8c88346d3c733fa12cc6a58136b">setNumberOfSpacesPerTab</a> (const int &amp;spacesPerTab)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set number of spaces per tab.  <a href="#2c9ba8c88346d3c733fa12cc6a58136b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const int &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#562f0a4ed03a1551a4312fd76e4ff903">getNumberOfSpacesPerTab</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get number of spaces per tab.  <a href="#562f0a4ed03a1551a4312fd76e4ff903"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#1da13c16277c41b50b7312c780fca552">setTreeView</a> (const bool &amp;treeView)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set tree view.  <a href="#1da13c16277c41b50b7312c780fca552"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const bool &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#4a89dff70aff6c2e680f65a17886bcb4">getTreeView</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get tree view.  <a href="#4a89dff70aff6c2e680f65a17886bcb4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#54caff5e7bc9ea03a1d9b00d346d80a0">setName</a> (const std::string &amp;n)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set name.  <a href="#54caff5e7bc9ea03a1d9b00d346d80a0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm#37a4bd05d36b51fc858678b6e6d13a3d">getName</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get name.  <a href="#37a4bd05d36b51fc858678b6e6d13a3d"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f04ea31984de7915e449106c38b0e563"></a><!-- doxytag: member="phoenix::PhLog::name" ref="f04ea31984de7915e449106c38b0e563" args="" -->
std::string&nbsp;</td><td class="memItemRight" valign="bottom"><b>name</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c9bec641daad06749760763267434611"></a><!-- doxytag: member="phoenix::PhLog::mLogFile" ref="c9bec641daad06749760763267434611" args="" -->
FILE *&nbsp;</td><td class="memItemRight" valign="bottom"><b>mLogFile</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="52268e33db721b3e40613035a5532e71"></a><!-- doxytag: member="phoenix::PhLog::mNumTabs" ref="52268e33db721b3e40613035a5532e71" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>mNumTabs</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="66fc587dba0a34b3fd76f69908876f88"></a><!-- doxytag: member="phoenix::PhLog::mNumSpaces" ref="66fc587dba0a34b3fd76f69908876f88" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>mNumSpaces</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0020bc5632bbc3227b4967abe873d09f"></a><!-- doxytag: member="phoenix::PhLog::mUseTabs" ref="0020bc5632bbc3227b4967abe873d09f" args="" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>mUseTabs</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ee413fc92f45410d19db9b6658366eed"></a><!-- doxytag: member="phoenix::PhLog::mUseSpaces" ref="ee413fc92f45410d19db9b6658366eed" args="" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>mUseSpaces</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="dd0accde85de933404b2f235971ed5b2"></a><!-- doxytag: member="phoenix::PhLog::mTreeView" ref="dd0accde85de933404b2f235971ed5b2" args="" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>mTreeView</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="35b2e4a07a5c594e7a190e5d4012c011"></a><!-- doxytag: member="phoenix::PhLog::mNumSpacesPerTab" ref="35b2e4a07a5c594e7a190e5d4012c011" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>mNumSpacesPerTab</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="223fb5f755299d92efc70379788943fc"></a><!-- doxytag: member="phoenix::PhLog::logManager" ref="223fb5f755299d92efc70379788943fc" args="" -->
<a class="el" href="classphoenix_1_1PhLogManager.htm">PhLogManager</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>logManager</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Log class. 
<p>
This class represents a log file. This can be used for writing debug files or anything else you wish to write. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhLogManager.htm" title="Log manager.">phoenix::PhLogManager</a> </dd></dl>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="ac200a67db1fd85eb8b4e9ad3aced34b"></a><!-- doxytag: member="phoenix::PhLog::areSpacesUsed" ref="ac200a67db1fd85eb8b4e9ad3aced34b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool&amp; phoenix::PhLog::areSpacesUsed           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Are spaces used. 
<p>
Tells whether spaces are used or not <dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether spaces are enabled. </dd></dl>

</div>
</div><p>
<a class="anchor" name="189d25501b1c4de11a13f16e231b9d4a"></a><!-- doxytag: member="phoenix::PhLog::areTabsUsed" ref="189d25501b1c4de11a13f16e231b9d4a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool&amp; phoenix::PhLog::areTabsUsed           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Are tabs used. 
<p>
Tells whether tabs are used or not. <dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether tabs are enabled. </dd></dl>

</div>
</div><p>
<a class="anchor" name="37a4bd05d36b51fc858678b6e6d13a3d"></a><!-- doxytag: member="phoenix::PhLog::getName" ref="37a4bd05d36b51fc858678b6e6d13a3d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; phoenix::PhLog::getName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get name. 
<p>
Returns the name of this log. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The name of this log. </dd></dl>

</div>
</div><p>
<a class="anchor" name="43268bc89eecb2d4f55cb85e811dfc62"></a><!-- doxytag: member="phoenix::PhLog::getNumberOfSpaces" ref="43268bc89eecb2d4f55cb85e811dfc62" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int&amp; phoenix::PhLog::getNumberOfSpaces           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get number of spaces. 
<p>
Returns the number of spaces used when writing to the file. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The number of spaces used. </dd></dl>

</div>
</div><p>
<a class="anchor" name="562f0a4ed03a1551a4312fd76e4ff903"></a><!-- doxytag: member="phoenix::PhLog::getNumberOfSpacesPerTab" ref="562f0a4ed03a1551a4312fd76e4ff903" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int&amp; phoenix::PhLog::getNumberOfSpacesPerTab           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get number of spaces per tab. 
<p>
Returns the number of spaces per tab. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The number of spaces per tab that are used. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhLog.htm#2c9ba8c88346d3c733fa12cc6a58136b" title="Set number of spaces per tab.">setNumberOfSpacesPerTab()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="df14416c85640a3a82fa302efa20ba66"></a><!-- doxytag: member="phoenix::PhLog::getNumberOfTabs" ref="df14416c85640a3a82fa302efa20ba66" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int&amp; phoenix::PhLog::getNumberOfTabs           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get number of tabs. 
<p>
Returns the number of tabs used when writing to the file. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The number of tabs used. </dd></dl>

</div>
</div><p>
<a class="anchor" name="4a89dff70aff6c2e680f65a17886bcb4"></a><!-- doxytag: member="phoenix::PhLog::getTreeView" ref="4a89dff70aff6c2e680f65a17886bcb4" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool&amp; phoenix::PhLog::getTreeView           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get tree view. 
<p>
Tells whether tree view is enabled or disabled. <dl class="return" compact><dt><b>Returns:</b></dt><dd>Is tree view enabled or not. </dd></dl>

</div>
</div><p>
<a class="anchor" name="1107db5d5d88c4590786d66345a62ccd"></a><!-- doxytag: member="phoenix::PhLog::openFile" ref="1107db5d5d88c4590786d66345a62ccd" args="(std::string logFileName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool phoenix::PhLog::openFile           </td>
          <td>(</td>
          <td class="paramtype">std::string&nbsp;</td>
          <td class="paramname"> <em>logFileName</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Open file. 
<p>
Opens a file to write to from the name given. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>logFileName</em>&nbsp;</td><td>The name of the file. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>False on fail, and true on success. </dd></dl>

</div>
</div><p>
<a class="anchor" name="54caff5e7bc9ea03a1d9b00d346d80a0"></a><!-- doxytag: member="phoenix::PhLog::setName" ref="54caff5e7bc9ea03a1d9b00d346d80a0" args="(const std::string &amp;n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhLog::setName           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set name. 
<p>
Sets the name that will be used to look up this log with <a class="el" href="classphoenix_1_1PhLogManager.htm" title="Log manager.">PhLogManager</a>. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>The name you want for the log. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="6bf5f3fb7ff18e336da8333cc81553ea"></a><!-- doxytag: member="phoenix::PhLog::setNumberOfSpaces" ref="6bf5f3fb7ff18e336da8333cc81553ea" args="(const int &amp;numSpaces)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhLog::setNumberOfSpaces           </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&nbsp;</td>
          <td class="paramname"> <em>numSpaces</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set number of spaces. 
<p>
Sets the number of spaces to be used when writing to the file. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>numSpaces</em>&nbsp;</td><td>Specify the number of spaces to use. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="2c9ba8c88346d3c733fa12cc6a58136b"></a><!-- doxytag: member="phoenix::PhLog::setNumberOfSpacesPerTab" ref="2c9ba8c88346d3c733fa12cc6a58136b" args="(const int &amp;spacesPerTab)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhLog::setNumberOfSpacesPerTab           </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&nbsp;</td>
          <td class="paramname"> <em>spacesPerTab</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set number of spaces per tab. 
<p>
This value must be set when using the tree view. (Default: 5). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>spacesPerTab</em>&nbsp;</td><td>Specify the number of spaces you want per tab </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhLog.htm#562f0a4ed03a1551a4312fd76e4ff903" title="Get number of spaces per tab.">getNumberOfSpacesPerTab()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="7bda33df98b19d7e6ca31d10e905e236"></a><!-- doxytag: member="phoenix::PhLog::setNumberOfTabs" ref="7bda33df98b19d7e6ca31d10e905e236" args="(const int &amp;numTabs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhLog::setNumberOfTabs           </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&nbsp;</td>
          <td class="paramname"> <em>numTabs</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set number of tabs. 
<p>
Sets the number of tabs to be used when writing to the file. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>numTabs</em>&nbsp;</td><td>Specify the number of tabs to use. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="1da13c16277c41b50b7312c780fca552"></a><!-- doxytag: member="phoenix::PhLog::setTreeView" ref="1da13c16277c41b50b7312c780fca552" args="(const bool &amp;treeView)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhLog::setTreeView           </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&nbsp;</td>
          <td class="paramname"> <em>treeView</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set tree view. 
<p>
Set a parameter specifying whether or not to display the log file in tree view or not. (Note: Tree view looks cool!) <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>treeView</em>&nbsp;</td><td>Enable or disable tree view. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="90e49a108b3e9cf6e21ec8f464688060"></a><!-- doxytag: member="phoenix::PhLog::useSpaces" ref="90e49a108b3e9cf6e21ec8f464688060" args="(const bool &amp;spaces)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhLog::useSpaces           </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&nbsp;</td>
          <td class="paramname"> <em>spaces</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Use spaces. 
<p>
Specifies whether spaces should be used when writing to the file. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>spaces</em>&nbsp;</td><td>True = yes, False = no. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhLog.htm#aa567de77dd9244e4f8741efb535e75c" title="Use tabs.">useTabs()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="aa567de77dd9244e4f8741efb535e75c"></a><!-- doxytag: member="phoenix::PhLog::useTabs" ref="aa567de77dd9244e4f8741efb535e75c" args="(const bool &amp;tabs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhLog::useTabs           </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&nbsp;</td>
          <td class="paramname"> <em>tabs</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Use tabs. 
<p>
Specifies whether tabs should be used when writing to the file. (Note: Tabs take precedent over spaces when both are enabled.) <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>tabs</em>&nbsp;</td><td>True = yes, False = no. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhLog.htm#90e49a108b3e9cf6e21ec8f464688060" title="Use spaces.">useSpaces()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="1efb692148f63ddf1747ffdc297828bb"></a><!-- doxytag: member="phoenix::PhLog::writeToLog" ref="1efb692148f63ddf1747ffdc297828bb" args="(std::string text)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhLog::writeToLog           </td>
          <td>(</td>
          <td class="paramtype">std::string&nbsp;</td>
          <td class="paramname"> <em>text</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Write to log. 
<p>
Writes the given line to the file, taking into account the parameters you provide for tabs and spaces. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>text</em>&nbsp;</td><td>The text that you would like to write to the file. </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>svn/0.3/libPhoenixGL/<a class="el" href="PhLog_8h-source.htm">PhLog.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:42:33 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
