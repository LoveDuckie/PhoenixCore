<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: svn/0.3/libPhoenixGL/PhVector2d.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>svn/0.3/libPhoenixGL/PhVector2d.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2007, Jonathan Wayne Parrott, Denzel Morris</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the "Software"), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE.</span>
<a name="l00022"></a>00022 <span class="comment"></span>
<a name="l00023"></a>00023 <span class="comment">*/</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef __PHVECTOR2D_H__</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define __PHVECTOR2D_H__</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include "PhRotationMatrix.h"</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keyword">namespace </span>phoenix
<a name="l00032"></a>00032 {
<a name="l00033"></a>00033 
<a name="l00035"></a>00035 
<a name="l00041"></a><a class="code" href="namespacephoenix.htm#4815ace64148335009c65ebf20ee778b">00041</a>     <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacephoenix.htm#4815ace64148335009c65ebf20ee778b" title="Radians to degrees.">RadiansToDegrees</a>(<span class="keywordtype">float</span> rad)
<a name="l00042"></a>00042     {
<a name="l00043"></a>00043         <span class="keyword">const</span> <span class="keywordtype">float</span> k = 180.0f / 3.14159265f;
<a name="l00044"></a>00044         <span class="keywordflow">return</span> rad * k;
<a name="l00045"></a>00045     }
<a name="l00046"></a>00046 
<a name="l00048"></a>00048 
<a name="l00054"></a><a class="code" href="namespacephoenix.htm#1368b3c3902a8c607499ab7455fff300">00054</a>     <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacephoenix.htm#1368b3c3902a8c607499ab7455fff300" title="Degrees to radians.">DegreesToRadians</a>(<span class="keywordtype">float</span> deg)
<a name="l00055"></a>00055     {
<a name="l00056"></a>00056         <span class="keyword">const</span> <span class="keywordtype">float</span> k = 3.14159265f / 180.0f;
<a name="l00057"></a>00057         <span class="keywordflow">return</span> deg * k;
<a name="l00058"></a>00058     }
<a name="l00059"></a>00059 
<a name="l00061"></a>00061 
<a name="l00065"></a><a class="code" href="classphoenix_1_1PhVector2d.htm">00065</a>     <span class="keyword">class </span><a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>
<a name="l00066"></a>00066     {
<a name="l00067"></a>00067     <span class="keyword">public</span>:
<a name="l00068"></a>00068 
<a name="l00069"></a>00069         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>();
<a name="l00070"></a>00070         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>(<span class="keywordtype">float</span> a, <span class="keywordtype">float</span> b);
<a name="l00071"></a>00071 
<a name="l00072"></a>00072         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">float</span> getX()<span class="keyword"> const</span>
<a name="l00073"></a>00073 <span class="keyword">        </span>{
<a name="l00074"></a>00074             <span class="keywordflow">return</span> x;
<a name="l00075"></a>00075         }
<a name="l00076"></a>00076         <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">float</span> getY()<span class="keyword"> const</span>
<a name="l00077"></a>00077 <span class="keyword">        </span>{
<a name="l00078"></a>00078             <span class="keywordflow">return</span> y;
<a name="l00079"></a>00079         }
<a name="l00080"></a>00080         <span class="keyword">inline</span> <span class="keywordtype">void</span> setX( <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;a )
<a name="l00081"></a>00081         {
<a name="l00082"></a>00082             x = a;
<a name="l00083"></a>00083         }
<a name="l00084"></a>00084         <span class="keyword">inline</span> <span class="keywordtype">void</span> setY( <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;b )
<a name="l00085"></a>00085         {
<a name="l00086"></a>00086             y = b;
<a name="l00087"></a>00087         }
<a name="l00088"></a>00088 
<a name="l00089"></a>00089         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator = (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue);
<a name="l00090"></a>00090 
<a name="l00091"></a>00091         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator+=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue);
<a name="l00092"></a>00092         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator-=(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue);
<a name="l00093"></a>00093 
<a name="l00094"></a>00094         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator+(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00095"></a>00095         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator-(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00096"></a>00096 
<a name="l00097"></a>00097         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator+(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00098"></a>00098         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator-(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00099"></a>00099         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator*(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00100"></a>00100         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator/(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00101"></a>00101 
<a name="l00102"></a>00102         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator+=(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue);
<a name="l00103"></a>00103         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator-=(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue);
<a name="l00104"></a>00104         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator*=(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue);
<a name="l00105"></a>00105         <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator/=(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;rvalue);
<a name="l00106"></a>00106 
<a name="l00107"></a>00107         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator-(<span class="keywordtype">void</span>) <span class="keyword">const</span>;
<a name="l00108"></a>00108 
<a name="l00109"></a>00109         <span class="keywordtype">bool</span> operator == (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00110"></a>00110         <span class="keywordtype">bool</span> operator != (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00111"></a>00111 
<a name="l00113"></a>00113         <span class="keyword">const</span> <span class="keywordtype">float</span> operator*(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00114"></a>00114 
<a name="l00116"></a>00116         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#4ebbeb5cdb7194d5a78dbfa3eb8d2cfd" title="Cross Product.">operator^</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue) <span class="keyword">const</span>;
<a name="l00117"></a>00117 
<a name="l00119"></a>00119 
<a name="l00123"></a>00123         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#8b1b88ca06bf7ad0e837cc9ae08c4f25" title="Normalization.">normalize</a>();
<a name="l00124"></a>00124 
<a name="l00126"></a>00126 
<a name="l00130"></a>00130         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#3d5bac07b16660fc64d6696b5321d02a" title="Magnitude.">getMagnitude</a>() <span class="keyword">const</span>;
<a name="l00131"></a>00131 
<a name="l00133"></a>00133 
<a name="l00138"></a>00138         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#723764cc87db234b7ab3312a469d201d" title="Magnitude squared.">getMagnitudeSquared</a>() <span class="keyword">const</span>;
<a name="l00139"></a>00139 
<a name="l00141"></a>00141 
<a name="l00146"></a>00146         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> <a class="code" href="classphoenix_1_1PhVector2d.htm#cfa5b3c40471fc4f59a17b0aeb378c61" title="Projection.">project</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; b);
<a name="l00147"></a>00147 
<a name="l00149"></a>00149 
<a name="l00152"></a>00152         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> <a class="code" href="classphoenix_1_1PhVector2d.htm#20121f2f137be421b212f4c8bf91b49f" title="Direction.">getDirection</a>(<span class="keywordtype">void</span>) <span class="keyword">const</span>;
<a name="l00153"></a>00153 
<a name="l00155"></a>00155 
<a name="l00160"></a>00160         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; <a class="code" href="classphoenix_1_1PhVector2d.htm#8c6c7a5dedf95e747f90432244d57343" title="Rotate.">rotate</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; angle);
<a name="l00161"></a>00161 
<a name="l00163"></a>00163 
<a name="l00169"></a>00169         <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="classphoenix_1_1PhVector2d.htm#bf4fa0bc70bd158129b8f8455f71d016" title="Get angle.">getAngle</a>(<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; xE = <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>(1.0f,0) ) <span class="keyword">const</span>;
<a name="l00170"></a>00170 
<a name="l00172"></a>00172 
<a name="l00177"></a>00177         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator * (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other) <span class="keyword">const</span>;
<a name="l00178"></a>00178 
<a name="l00179"></a>00179         <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>&amp; operator *= (<span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhRotationMatrix.htm" title="2D Rotation Matrix Class">PhRotationMatrix</a>&amp; other);
<a name="l00180"></a>00180 
<a name="l00181"></a>00181         ~<a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a>();
<a name="l00182"></a>00182     <span class="keyword">protected</span>:
<a name="l00183"></a>00183         <span class="keywordtype">float</span> x,y;
<a name="l00184"></a>00184     <span class="keyword">private</span>:
<a name="l00185"></a>00185     };
<a name="l00186"></a>00186 
<a name="l00187"></a>00187     <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> operator*(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;lvalue, <span class="keyword">const</span> <a class="code" href="classphoenix_1_1PhVector2d.htm" title="2D Vector class">PhVector2d</a> &amp;rvalue);
<a name="l00188"></a>00188 
<a name="l00189"></a>00189 }
<a name="l00190"></a>00190 
<a name="l00191"></a>00191 <span class="preprocessor">#endif // PHVECTOR2D_H</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:29:49 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
