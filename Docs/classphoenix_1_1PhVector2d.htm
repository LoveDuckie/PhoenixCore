<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhVector2d Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.3 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li class="current"><a href="classes.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="classes.htm"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a></div>
<h1>phoenix::PhVector2d Class Reference</h1><!-- doxytag: class="phoenix::PhVector2d" -->2D Vector class  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhVector2d_8h-source.htm">PhVector2d.h</a>&gt;</code>
<p>

<p>
<a href="classphoenix_1_1PhVector2d-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#793f77dcf7590c5b41c293e735a7d87d">PhVector2d</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#793f77dcf7590c5b41c293e735a7d87d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#39f2408ccf595c66c6e3a84968ff7d60">PhVector2d</a> (float a, float b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#39f2408ccf595c66c6e3a84968ff7d60"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#a2f1bccfb41548e65fb72af4d112c984">getX</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get X component.  <a href="#a2f1bccfb41548e65fb72af4d112c984"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#b8e23cd85ea9f14918e7ca16f0120363">getY</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get Y component.  <a href="#b8e23cd85ea9f14918e7ca16f0120363"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#cf9b9caf3ffec4333865f5d319d8c042">setX</a> (float a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set X component.  <a href="#cf9b9caf3ffec4333865f5d319d8c042"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#769716de02afc0d178ff82fb875e1de1">setY</a> (float a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set Y component.  <a href="#769716de02afc0d178ff82fb875e1de1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#b6b4c8f7a02d3fe116783aa7eb4e6404">normalize</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Normalization.  <a href="#b6b4c8f7a02d3fe116783aa7eb4e6404"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#ee64e10ba1ede6c951bf7b01005ec1bb">getMagnitude</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Magnitude.  <a href="#ee64e10ba1ede6c951bf7b01005ec1bb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#3f68a5538dc470178712842ddcc7679e">getMagnitudeSquared</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Magnitude squared.  <a href="#3f68a5538dc470178712842ddcc7679e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#18675688f2c22234899ac202e115f118">project</a> (<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Projection.  <a href="#18675688f2c22234899ac202e115f118"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#e229f38f144422063f03c744856a67cf">direction</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Direction.  <a href="#e229f38f144422063f03c744856a67cf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#99c1e0b0521e17134d7d49aae0a9b8a9">rotate</a> (float angle)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rotate.  <a href="#99c1e0b0521e17134d7d49aae0a9b8a9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#a91d59dad5736df877ce0947edac78ed">getAngle</a> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;xE=<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(1.0f, 0))</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get angle.  <a href="#a91d59dad5736df877ce0947edac78ed"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="990af342cdac228aee5c3904035fc2f2"></a><!-- doxytag: member="phoenix::PhVector2d::operator/=" ref="990af342cdac228aee5c3904035fc2f2" args="(const float Scalar)" -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (const float Scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5f3ba3bc5df4e9c556d99fa4504f5700"></a><!-- doxytag: member="phoenix::PhVector2d::operator *=" ref="5f3ba3bc5df4e9c556d99fa4504f5700" args="(const float Scalar)" -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator *=</b> (const float Scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3cbcb640ad85b136b609c07e3a8b26e8"></a><!-- doxytag: member="phoenix::PhVector2d::operator+=" ref="3cbcb640ad85b136b609c07e3a8b26e8" args="(const PhVector2d &amp;Other)" -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;Other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="20e84491685e0d1f3979bd12220196b7"></a><!-- doxytag: member="phoenix::PhVector2d::operator-=" ref="20e84491685e0d1f3979bd12220196b7" args="(const PhVector2d &amp;Other)" -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;Other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="eac73b3c261dc987c4b89f00673a8377"></a><!-- doxytag: member="phoenix::PhVector2d::operator==" ref="eac73b3c261dc987c4b89f00673a8377" args="(const PhVector2d &amp;V) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#b52e25e56997c0d88c5e63b618db21f9">operator^</a> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Cross product.  <a href="#b52e25e56997c0d88c5e63b618db21f9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#5c358c6d57ed0f40c75d826634c988b0">operator *</a> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dot product.  <a href="#5c358c6d57ed0f40c75d826634c988b0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="64bf98f34b89ff5a51a486018482d638"></a><!-- doxytag: member="phoenix::PhVector2d::operator *" ref="64bf98f34b89ff5a51a486018482d638" args="(float s) const " -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator *</b> (float s) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6c0b106f8da9b248a39f06d5776e70ce"></a><!-- doxytag: member="phoenix::PhVector2d::operator/" ref="6c0b106f8da9b248a39f06d5776e70ce" args="(float s) const " -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/</b> (float s) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="167f185fff3971810a6448236132d1bd"></a><!-- doxytag: member="phoenix::PhVector2d::operator+" ref="167f185fff3971810a6448236132d1bd" args="(const PhVector2d &amp;V) const " -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="20d7c542db4f8d886a144c34bc1425ef"></a><!-- doxytag: member="phoenix::PhVector2d::operator-" ref="20d7c542db4f8d886a144c34bc1425ef" args="(const PhVector2d &amp;V) const " -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b39818aaa6ab049de6fa31712787c9e4"></a><!-- doxytag: member="phoenix::PhVector2d::operator-" ref="b39818aaa6ab049de6fa31712787c9e4" args="(void) const " -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm#232ad0585f524f05f40538789a11afec">operator *</a> (<a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Matrix multiplication.  <a href="#232ad0585f524f05f40538789a11afec"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d29e8d95638bcfc8f2263137e7d5e71d"></a><!-- doxytag: member="phoenix::PhVector2d::operator *=" ref="d29e8d95638bcfc8f2263137e7d5e71d" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator *=</b> (<a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ba083419addf1bd76c82ce39712c24fe"></a><!-- doxytag: member="phoenix::PhVector2d::operator *" ref="ba083419addf1bd76c82ce39712c24fe" args="(float k, const PhVector2d &amp;V)" -->
<a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator *</b> (float k, const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;V)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
2D Vector class 
<p>
Provides a fast and efficient way to do vector math. <dl class="note" compact><dt><b>Note:</b></dt><dd>Only the ambigious operators are documented, the others (such as +, -, +=, etc.) are considered obvious and therefore not documented. </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="793f77dcf7590c5b41c293e735a7d87d"></a><!-- doxytag: member="phoenix::PhVector2d::PhVector2d" ref="793f77dcf7590c5b41c293e735a7d87d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhVector2d::PhVector2d           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Basic constructor, creates a zero-length vector &lt;0,0&gt;. 
</div>
</div><p>
<a class="anchor" name="39f2408ccf595c66c6e3a84968ff7d60"></a><!-- doxytag: member="phoenix::PhVector2d::PhVector2d" ref="39f2408ccf595c66c6e3a84968ff7d60" args="(float a, float b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhVector2d::PhVector2d           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>b</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Creates a vector with the given rectangular coordinates. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The X component of the vector. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>The Y component of the vector. </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="a2f1bccfb41548e65fb72af4d112c984"></a><!-- doxytag: member="phoenix::PhVector2d::getX" ref="a2f1bccfb41548e65fb72af4d112c984" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhVector2d::getX           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get X component. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The X component of the vector. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhVector2d.htm#cf9b9caf3ffec4333865f5d319d8c042" title="Set X component.">setX()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="b8e23cd85ea9f14918e7ca16f0120363"></a><!-- doxytag: member="phoenix::PhVector2d::getY" ref="b8e23cd85ea9f14918e7ca16f0120363" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhVector2d::getY           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get Y component. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The Y component of the vector. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhVector2d.htm#769716de02afc0d178ff82fb875e1de1" title="Set Y component.">setY()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="cf9b9caf3ffec4333865f5d319d8c042"></a><!-- doxytag: member="phoenix::PhVector2d::setX" ref="cf9b9caf3ffec4333865f5d319d8c042" args="(float a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhVector2d::setX           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set X component. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The X component of the vector. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhVector2d.htm#a2f1bccfb41548e65fb72af4d112c984" title="Get X component.">getX()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="769716de02afc0d178ff82fb875e1de1"></a><!-- doxytag: member="phoenix::PhVector2d::setY" ref="769716de02afc0d178ff82fb875e1de1" args="(float a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhVector2d::setY           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set Y component. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The Y component of the vector. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhVector2d.htm#b8e23cd85ea9f14918e7ca16f0120363" title="Get Y component.">getY()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="b6b4c8f7a02d3fe116783aa7eb4e6404"></a><!-- doxytag: member="phoenix::PhVector2d::normalize" ref="b6b4c8f7a02d3fe116783aa7eb4e6404" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhVector2d::normalize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Normalization. 
<p>
Normalizes the vector, as in turns in into a unit-length vector. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The length of the vector before normalization. </dd></dl>

</div>
</div><p>
<a class="anchor" name="ee64e10ba1ede6c951bf7b01005ec1bb"></a><!-- doxytag: member="phoenix::PhVector2d::getMagnitude" ref="ee64e10ba1ede6c951bf7b01005ec1bb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhVector2d::getMagnitude           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Magnitude. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The magnitude (length) of the vector. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd>getManitudeSquared(); </dd></dl>

</div>
</div><p>
<a class="anchor" name="3f68a5538dc470178712842ddcc7679e"></a><!-- doxytag: member="phoenix::PhVector2d::getMagnitudeSquared" ref="3f68a5538dc470178712842ddcc7679e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhVector2d::getMagnitudeSquared           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Magnitude squared. 
<p>
This is much faster than the above because it does not bother to take the square root. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The squared magnitude (length) of the vector. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhVector2d.htm#ee64e10ba1ede6c951bf7b01005ec1bb" title="Magnitude.">getMagnitude()</a>; </dd></dl>

</div>
</div><p>
<a class="anchor" name="18675688f2c22234899ac202e115f118"></a><!-- doxytag: member="phoenix::PhVector2d::project" ref="18675688f2c22234899ac202e115f118" args="(PhVector2d b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> phoenix::PhVector2d::project           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td>
          <td class="paramname"> <em>b</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Projection. 
<p>
Projects this vector onto vector b. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Vector to project this vector onto </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The product of projection. </dd></dl>

</div>
</div><p>
<a class="anchor" name="e229f38f144422063f03c744856a67cf"></a><!-- doxytag: member="phoenix::PhVector2d::direction" ref="e229f38f144422063f03c744856a67cf" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> phoenix::PhVector2d::direction           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Direction. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A unit-length (normalized) vector with the same angle measure as this one. </dd></dl>

</div>
</div><p>
<a class="anchor" name="99c1e0b0521e17134d7d49aae0a9b8a9"></a><!-- doxytag: member="phoenix::PhVector2d::rotate" ref="99c1e0b0521e17134d7d49aae0a9b8a9" args="(float angle)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>&amp; phoenix::PhVector2d::rotate           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>angle</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rotate. 
<p>
Rotates the vector the desired amount. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>angle</em>&nbsp;</td><td>The measure of the angle in radians. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The rotated vector. Note that this vector itself is also rotated. </dd></dl>

</div>
</div><p>
<a class="anchor" name="a91d59dad5736df877ce0947edac78ed"></a><!-- doxytag: member="phoenix::PhVector2d::getAngle" ref="a91d59dad5736df877ce0947edac78ed" args="(const PhVector2d &amp;xE=PhVector2d(1.0f, 0))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhVector2d::getAngle           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>xE</em> = <code><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a>(1.0f,&nbsp;0)</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get angle. 
<p>
Get the angle measure of the vector relative to the reference vector given. By defualt this is &lt;1,0&gt; but it can be changed. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>xE</em>&nbsp;</td><td>The reference vector, by defualt this is &lt;1,0&gt; </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The angle between the reference vector and this vector. </dd></dl>

</div>
</div><p>
<a class="anchor" name="b52e25e56997c0d88c5e63b618db21f9"></a><!-- doxytag: member="phoenix::PhVector2d::operator^" ref="b52e25e56997c0d88c5e63b618db21f9" args="(const PhVector2d &amp;V) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhVector2d::operator^           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>V</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Cross product. 
<p>
Returns the cross product of the vector. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The cross product. </dd></dl>

</div>
</div><p>
<a class="anchor" name="5c358c6d57ed0f40c75d826634c988b0"></a><!-- doxytag: member="phoenix::PhVector2d::operator *" ref="5c358c6d57ed0f40c75d826634c988b0" args="(const PhVector2d &amp;V) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::PhVector2d::operator *           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>V</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Dot product. 
<p>
Returns the dot product. <dl class="return" compact><dt><b>Returns:</b></dt><dd>The dot product. </dd></dl>

</div>
</div><p>
<a class="anchor" name="232ad0585f524f05f40538789a11afec"></a><!-- doxytag: member="phoenix::PhVector2d::operator *" ref="232ad0585f524f05f40538789a11afec" args="(PhRotationMatrix &amp;other)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a> phoenix::PhVector2d::operator *           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>other</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Matrix multiplication. 
<p>
Essentially rotates this vector by the matrix. <dl class="note" compact><dt><b>Note:</b></dt><dd>this is technically mathematically illegal. The matrix should be multiplied by the vector. </dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The rotated vector. </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>/home/jon/Desktop/Documents/workspace/Phoenix SVN/trunk/libPhoenixGL/<a class="el" href="PhVector2d_8h-source.htm">PhVector2d.h</a></ul>
<hr size="1"><address style="text-align: right;"><small>Generated on Mon Jan 28 19:50:08 2008 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.3 </small></address>
</body>
</html>
