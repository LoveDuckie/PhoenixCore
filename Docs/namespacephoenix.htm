<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix Namespace Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.3 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li class="current"><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="annotated.htm"><span>Classes</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="namespaces.htm"><span>Namespace List</span></a></li>
    <li><a href="namespacemembers.htm"><span>Namespace&nbsp;Members</span></a></li>
  </ul>
</div>
<h1>phoenix Namespace Reference</h1>The <a class="el" href="namespacephoenix.htm" title="The phoenix namespace.">phoenix</a> namespace.  
<a href="#_details">More...</a>
<p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhBackground.htm">PhBackground</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Simple background implementation.  <a href="classphoenix_1_1PhBackground.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhColor.htm">PhColor</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Color.  <a href="classphoenix_1_1PhColor.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhDrawSceneNode.htm">PhDrawSceneNode</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Draw scene node.  <a href="classphoenix_1_1PhDrawSceneNode.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhEventHandler.htm">PhEventHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Event handler.  <a href="classphoenix_1_1PhEventHandler.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhExtendedBackground.htm">PhExtendedBackground</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Extended Background.  <a href="classphoenix_1_1PhExtendedBackground.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLog.htm">PhLog</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Log class.  <a href="classphoenix_1_1PhLog.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhLogManager.htm">PhLogManager</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Log manager.  <a href="classphoenix_1_1PhLogManager.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhPolygon.htm">PhPolygon</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Polygon class.  <a href="classphoenix_1_1PhPolygon.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm">PhPolygonCollisionHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The polygon collision handler.  <a href="classphoenix_1_1PhPolygonCollisionHandler.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structphoenix_1_1PhStaticGeometry.htm">PhStaticGeometry</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Static geomery.  <a href="structphoenix_1_1PhStaticGeometry.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhCollisionObject.htm">PhCollisionObject</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collision object.  <a href="classphoenix_1_1PhCollisionObject.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structphoenix_1_1PhCollisionData.htm">PhCollisionData</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collision data.  <a href="structphoenix_1_1PhCollisionData.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRect.htm">PhRect</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rectangle class.  <a href="classphoenix_1_1PhRect.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhRenderSystem.htm">PhRenderSystem</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The render system.  <a href="classphoenix_1_1PhRenderSystem.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneManager.htm">PhSceneManager</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scene Manger Class.  <a href="classphoenix_1_1PhSceneManager.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSceneNode.htm">PhSceneNode</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scenenode Prototype.  <a href="classphoenix_1_1PhSceneNode.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSolidBackground.htm">PhSolidBackground</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Solid background node.  <a href="classphoenix_1_1PhSolidBackground.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhSpriteAnimation.htm">PhSpriteAnimation</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sprite Animation.  <a href="classphoenix_1_1PhSpriteAnimation.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Texture class.  <a href="classphoenix_1_1PhTexture.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm">PhTextureManager</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Texture manager.  <a href="classphoenix_1_1PhTextureManager.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTileMap.htm">PhTileMap</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tile map.  <a href="classphoenix_1_1PhTileMap.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTimer.htm">PhTimer</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Timer class.  <a href="classphoenix_1_1PhTimer.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhVector2d.htm">PhVector2d</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">2D Vector class  <a href="classphoenix_1_1PhVector2d.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhView.htm">PhView</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">View class.  <a href="classphoenix_1_1PhView.htm#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacephoenix_1_1aux.htm">aux</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The <a class="el" href="namespacephoenix_1_1aux.htm" title="The aux library.">aux</a> library. <br></td></tr>

<p>
<tr><td colspan="2"><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef function<br>
&lt; void(<a class="el" href="structphoenix_1_1PhCollisionData.htm">PhCollisionData</a> <br>
data)&gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacephoenix.htm#e7c1dbb22b3ff875bdd09aa11b6ea2fb">PhObjectCallback</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Callback typedef.  <a href="#e7c1dbb22b3ff875bdd09aa11b6ea2fb"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Enumerations</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacephoenix.htm#0d8b6aa3253a7738919632f246084684">PhMouseKey</a> </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mouse key definitions.  <a href="namespacephoenix.htm#0d8b6aa3253a7738919632f246084684">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacephoenix.htm#c879acb91928581e54371aef031e90b0">PhKey</a> </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Keyboard key definitions.  <a href="namespacephoenix.htm#c879acb91928581e54371aef031e90b0">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class a_type&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">a_type&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacephoenix.htm#bd4ef1611eab447627d965243a00cd16">porportion</a> (a_type a, a_type b, a_type c, a_type d, int find)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Porportion.  <a href="#bd4ef1611eab447627d965243a00cd16"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacephoenix.htm#4815ace64148335009c65ebf20ee778b">RadiansToDegrees</a> (float rad)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Radians to degrees.  <a href="#4815ace64148335009c65ebf20ee778b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacephoenix.htm#1368b3c3902a8c607499ab7455fff300">DegreesToRadians</a> (float deg)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Degrees to radians.  <a href="#1368b3c3902a8c607499ab7455fff300"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The <a class="el" href="namespacephoenix.htm" title="The phoenix namespace.">phoenix</a> namespace. 
<p>
2D Rotation Matrix Class<p>
Copyright (c) 2007, Jonathan Wayne Parrott.<p>
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:<p>
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.<p>
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.<p>
Provides a fast and efficient way to rotate points. <dl class="note" compact><dt><b>Note:</b></dt><dd>This is generally only used inside PhoenixGL, for rotation of vectors. <p>
Only ambigious operations are documented. </dd></dl>
<hr><h2>Typedef Documentation</h2>
<a class="anchor" name="e7c1dbb22b3ff875bdd09aa11b6ea2fb"></a><!-- doxytag: member="phoenix::PhObjectCallback" ref="e7c1dbb22b3ff875bdd09aa11b6ea2fb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef function&lt;void (<a class="el" href="structphoenix_1_1PhCollisionData.htm">PhCollisionData</a> data)&gt; <a class="el" href="namespacephoenix.htm#e7c1dbb22b3ff875bdd09aa11b6ea2fb">phoenix::PhObjectCallback</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Callback typedef. 
<p>
Defines the type of collision callbacks. When the collision manager detects a collision it calls the callbacks of the involved objects and passes it a <a class="el" href="structphoenix_1_1PhCollisionData.htm" title="Collision data.">phoenix::PhCollisionData</a> object representing details from the collision. For non-class members you can simply cast a function pointer to this type (ie PhObjectCallback(function)). However, for member functions (which is usually the case) you can use boost which provides an elegant way to do so (ie PhObjectCallback(boost::bind(&amp;Class::function, this, _1)) ). <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhCollisionObject.htm" title="Collision object.">phoenix::PhCollisionObject</a>, <a class="el" href="classphoenix_1_1PhPolygonCollisionHandler.htm" title="The polygon collision handler.">phoenix::PhPolygonCollisionHandler</a> </dd></dl>

</div>
</div><p>
<hr><h2>Enumeration Type Documentation</h2>
<a class="anchor" name="c879acb91928581e54371aef031e90b0"></a><!-- doxytag: member="phoenix::PhKey" ref="c879acb91928581e54371aef031e90b0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacephoenix.htm#c879acb91928581e54371aef031e90b0">phoenix::PhKey</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Keyboard key definitions. 
<p>
Defines keyboard keys for the event handler <dl class="see" compact><dt><b>See also:</b></dt><dd>PhEventHandle </dd></dl>

</div>
</div><p>
<a class="anchor" name="0d8b6aa3253a7738919632f246084684"></a><!-- doxytag: member="phoenix::PhMouseKey" ref="0d8b6aa3253a7738919632f246084684" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacephoenix.htm#0d8b6aa3253a7738919632f246084684">phoenix::PhMouseKey</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Mouse key definitions. 
<p>
Defines mouse keys for the event handler <dl class="see" compact><dt><b>See also:</b></dt><dd>PhEventHandle </dd></dl>

</div>
</div><p>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="1368b3c3902a8c607499ab7455fff300"></a><!-- doxytag: member="phoenix::DegreesToRadians" ref="1368b3c3902a8c607499ab7455fff300" args="(float deg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::DegreesToRadians           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>deg</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Degrees to radians. 
<p>
Converts degrees to radians, as simple as that. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>deg</em>&nbsp;</td><td>Angle in degrees. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Angle in radians. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="namespacephoenix.htm#4815ace64148335009c65ebf20ee778b" title="Radians to degrees.">phoenix::RadiansToDegrees()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="bd4ef1611eab447627d965243a00cd16"></a><!-- doxytag: member="phoenix::porportion" ref="bd4ef1611eab447627d965243a00cd16" args="(a_type a, a_type b, a_type c, a_type d, int find)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class a_type&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">a_type phoenix::porportion           </td>
          <td>(</td>
          <td class="paramtype">a_type&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">a_type&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">a_type&nbsp;</td>
          <td class="paramname"> <em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">a_type&nbsp;</td>
          <td class="paramname"> <em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>find</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Porportion. 
<p>
Porportion, it returns a porportional value based on this: <br>
 a/b = c/d <br>
 Note that if you're looking for something, one of these four will be unknown, it doesn't matter what value you pass to it. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Numerator of first fraction. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Denominator of first fraction. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>Numerator of second fraction. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>d</em>&nbsp;</td><td>Denominator of second fraction. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>find</em>&nbsp;</td><td>The parameter you wanna find, a being 0 and d being 3. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The value you seek. </dd></dl>

</div>
</div><p>
<a class="anchor" name="4815ace64148335009c65ebf20ee778b"></a><!-- doxytag: member="phoenix::RadiansToDegrees" ref="4815ace64148335009c65ebf20ee778b" args="(float rad)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::RadiansToDegrees           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>rad</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Radians to degrees. 
<p>
Converts radians to degrees, as simple as that. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>rad</em>&nbsp;</td><td>Angle in radians. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Angle in degrees. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="namespacephoenix.htm#1368b3c3902a8c607499ab7455fff300" title="Degrees to radians.">phoenix::DegreesToRadians()</a> </dd></dl>

</div>
</div><p>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Jan 27 21:54:43 2008 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.3 </small></address>
</body>
</html>
