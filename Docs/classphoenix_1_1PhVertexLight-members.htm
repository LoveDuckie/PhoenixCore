<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhVertexLight Member List</h1>This is the complete list of members for <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>, including all inherited members.<p><table>
  <tr bgcolor="#f0f0f0"><td><b>ambient</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>catten</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>depth</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>diffuse</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#d3bb341063f33876456a8a4adc5a8817">getAmbient</a>() const </td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#a90532f2bf5b37e568ae46ce7ff9dba8">getConstantAttenuation</a>() const </td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#d6480805f04ba3944a1919c00bbe1078">getDepth</a>() const </td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#541102b9f261c875ef04860387f8c5d7">getDiffuse</a>() const </td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#053af0f8f8bacbacf9ec96e28379290d">getLinearAttenuation</a>() const </td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#0b8eb09f3f145ee7cb0ddc79f7dc9f08">getPosition</a>() const </td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#66b5e916c019f292751ce4be78bc5763">getQuadraticAttenuation</a>() const </td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#1c4e8cdcad69fad2311224d616e5423c">getSpecular</a>() const </td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>latten</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>lsys</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#0ce9f4747b77056012bf5593ebffec9e">PhVertexLight</a>(PhVertexLightSystem *l, const PhVector2d &amp;Position=PhVector2d(0.0f, 0.0f), const PhColor &amp;c=PhColor(255, 255, 255, 255))</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>position</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>qatten</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#bb842d1be54a2ccd3ddf5e5dd959c047">setAmbient</a>(const PhColor &amp;a)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#abfbc59dd29b2e1e3402e6a88f6e2951">setAttenuation</a>(const float &amp;c, const float &amp;l, const float &amp;q)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#a114b278925aebf63c686a761cf81d3a">setConstantAttenuation</a>(const float &amp;c)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#1ba8616ba2a1f1b4166f3b1d686ed9b9">setDepth</a>(const float &amp;d)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#3c3bc46397b8c5a47c6e7007f95c94e5">setDiffuse</a>(const PhColor &amp;d)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>setLight</b>(const int &amp;n) (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#580771e61fc2a655917be70ede7005cf">setLinearAttenuation</a>(const float &amp;l)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#9201a26aecde6c0d9fb042d124c7f45f">setPosition</a>(const PhVector2d &amp;p)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#41f988496d22db030e831f06786d34cb">setQuadraticAttenuation</a>(const float &amp;q)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#5f37fd5c04fa0803d26bd8f4da61cf78">setSpecular</a>(const PhColor &amp;s)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>specular</b> (defined in <a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a>)</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classphoenix_1_1PhVertexLight.htm#8bdb110f515cc6234d46500b68a23645">~PhVertexLight</a>()</td><td><a class="el" href="classphoenix_1_1PhVertexLight.htm">phoenix::PhVertexLight</a></td><td><code> [virtual]</code></td></tr>
</table></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:42:33 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
