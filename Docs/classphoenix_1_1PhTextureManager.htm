<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::PhTextureManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<a class="el" href="classphoenix_1_1PhTextureManager.htm">PhTextureManager</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::PhTextureManager Class Reference</h1><!-- doxytag: class="phoenix::PhTextureManager" -->Texture manager.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhTextureManager_8h-source.htm">svn/0.3/libPhoenixGL/PhTextureManager.h</a>&gt;</code>
<p>

<p>
<a href="classphoenix_1_1PhTextureManager-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0ac3350a37b3ffadff342df2f7810408"></a><!-- doxytag: member="phoenix::PhTextureManager::PhTextureManager" ref="0ac3350a37b3ffadff342df2f7810408" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#0ac3350a37b3ffadff342df2f7810408">PhTextureManager</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#341706be39997b0519f39ba4c1b12289">~PhTextureManager</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#341706be39997b0519f39ba4c1b12289"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#084a28305bfca7badf20b75b260dd5f4">addTexture</a> (<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *texture)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Add texture.  <a href="#084a28305bfca7badf20b75b260dd5f4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#0ce5d90d43428f4c1b01bfc4e390a3d6">removeTexture</a> (<a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *texture)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Remove texture.  <a href="#0ce5d90d43428f4c1b01bfc4e390a3d6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#727976bc84bb779ebc1ea26931c9513e">deleteTextures</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Delete textures.  <a href="#727976bc84bb779ebc1ea26931c9513e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#c5e5e1418a7903aa8533ae1f0bf17360">findTexture</a> (const std::string &amp;n)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Find texture.  <a href="#c5e5e1418a7903aa8533ae1f0bf17360"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#c8c232f881667d0c119aeac4a36f0cbf">findTexture</a> (const GLuint &amp;n)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Find texture.  <a href="#c8c232f881667d0c119aeac4a36f0cbf"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4ad76e2615e6eba395e17169049b60a4"></a><!-- doxytag: member="phoenix::PhTextureManager::texturelist" ref="4ad76e2615e6eba395e17169049b60a4" args="" -->
vector&lt; <a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1PhTextureManager.htm#4ad76e2615e6eba395e17169049b60a4">texturelist</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">List of all the textures currently loaded. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Texture manager. 
<p>
This class takes care of keeping track of and cleaning up all textures after the program exits. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhTexture.htm" title="Texture class.">PhTexture</a>, <a class="el" href="classphoenix_1_1PhRenderSystem.htm" title="The render system.">PhRenderSystem</a> </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="341706be39997b0519f39ba4c1b12289"></a><!-- doxytag: member="phoenix::PhTextureManager::~PhTextureManager" ref="341706be39997b0519f39ba4c1b12289" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::PhTextureManager::~PhTextureManager           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>
When this object is destroyed (It will be automatically destroyed when the render system is destroyed). It deletes all the textures. 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="084a28305bfca7badf20b75b260dd5f4"></a><!-- doxytag: member="phoenix::PhTextureManager::addTexture" ref="084a28305bfca7badf20b75b260dd5f4" args="(PhTexture *texture)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTextureManager::addTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>texture</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add texture. 
<p>
Adds a texture to the list. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>texture</em>&nbsp;</td><td>A pointer to the texture to be stored. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhTextureManager.htm#0ce5d90d43428f4c1b01bfc4e390a3d6" title="Remove texture.">removeTexture()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="727976bc84bb779ebc1ea26931c9513e"></a><!-- doxytag: member="phoenix::PhTextureManager::deleteTextures" ref="727976bc84bb779ebc1ea26931c9513e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTextureManager::deleteTextures           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Delete textures. 
<p>
Deletes all the textures in the list. 
</div>
</div><p>
<a class="anchor" name="c8c232f881667d0c119aeac4a36f0cbf"></a><!-- doxytag: member="phoenix::PhTextureManager::findTexture" ref="c8c232f881667d0c119aeac4a36f0cbf" args="(const GLuint &amp;n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a>* phoenix::PhTextureManager::findTexture           </td>
          <td>(</td>
          <td class="paramtype">const GLuint &amp;&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Find texture. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>The GL id of the texture you want to find. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A pointer to the texture if found, else NULL. </dd></dl>

</div>
</div><p>
<a class="anchor" name="c5e5e1418a7903aa8533ae1f0bf17360"></a><!-- doxytag: member="phoenix::PhTextureManager::findTexture" ref="c5e5e1418a7903aa8533ae1f0bf17360" args="(const std::string &amp;n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a>* phoenix::PhTextureManager::findTexture           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Find texture. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>The name of the texture you want to find. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A pointer to the texture if found, else NULL. </dd></dl>

</div>
</div><p>
<a class="anchor" name="0ce5d90d43428f4c1b01bfc4e390a3d6"></a><!-- doxytag: member="phoenix::PhTextureManager::removeTexture" ref="0ce5d90d43428f4c1b01bfc4e390a3d6" args="(PhTexture *texture)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::PhTextureManager::removeTexture           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1PhTexture.htm">PhTexture</a> *&nbsp;</td>
          <td class="paramname"> <em>texture</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remove texture. 
<p>
Removes a texture to the list. Does not actually delete the texture. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>texture</em>&nbsp;</td><td>A pointer to the texture to be removed. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1PhTextureManager.htm#084a28305bfca7badf20b75b260dd5f4" title="Add texture.">addTexture()</a> </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>svn/0.3/libPhoenixGL/<a class="el" href="PhTextureManager_8h-source.htm">PhTextureManager.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri May 8 11:29:49 2009 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
