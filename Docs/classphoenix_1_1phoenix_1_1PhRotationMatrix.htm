<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PhoenixGL: phoenix::phoenix::PhRotationMatrix Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacephoenix.htm">phoenix</a>::<b>phoenix</b>::<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>
  </div>
</div>
<div class="contents">
<h1>phoenix::phoenix::PhRotationMatrix Class Reference</h1><!-- doxytag: class="phoenix::phoenix::PhRotationMatrix" -->2D Rotation Matrix Class  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PhVertexLightSystem_8h-source.htm">PhVertexLightSystem.h</a>&gt;</code>
<p>

<p>
<a href="classphoenix_1_1phoenix_1_1PhRotationMatrix-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#58a29c212ed08ea0037c97c021b119fb">PhRotationMatrix</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#58a29c212ed08ea0037c97c021b119fb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#8d50255bfe24c3d3dfe3f539212bff96">PhRotationMatrix</a> (float a, float b, float c, float d)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#8d50255bfe24c3d3dfe3f539212bff96"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#403d3e9bd28ada2c8e92c5801cec3c05">PhRotationMatrix</a> (float a)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#403d3e9bd28ada2c8e92c5801cec3c05"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d92ff294ea8a783282ee86eb905b6d3e"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::PhRotationMatrix" ref="d92ff294ea8a783282ee86eb905b6d3e" args="(const PhRotationMatrix &amp;other)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>PhRotationMatrix</b> (const <a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#696d986a6f2e00aa86c7d8408baf85a6">setRotation</a> (float rad)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set rotation.  <a href="#696d986a6f2e00aa86c7d8408baf85a6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#75bbcc9242f602e117985a8a3957abac">getRotation</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get rotation.  <a href="#75bbcc9242f602e117985a8a3957abac"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#85d57e04bdd120669c5acaf57639498a">operator()</a> (const int row, const int col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Matrix access operator.  <a href="#85d57e04bdd120669c5acaf57639498a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#b2c7abc5000a8a0e743b7c1bcfbe8b5c">operator[]</a> (const int x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Element access operator.  <a href="#b2c7abc5000a8a0e743b7c1bcfbe8b5c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="93188860ed09113d4f37ec4c64488ceb"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator+" ref="93188860ed09113d4f37ec4c64488ceb" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="93c7afa07a897cc10e0d4f4ca07d824b"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator&#45;" ref="93c7afa07a897cc10e0d4f4ca07d824b" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="484e40b8174fb28b31ae646f7a85520b"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator*" ref="484e40b8174fb28b31ae646f7a85520b" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="70d08d4a1ba1f6d135e3a941090198b9"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator*" ref="70d08d4a1ba1f6d135e3a941090198b9" args="(float scalar)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (float scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#8e9c9c356abe79dbb03c9161798e8f3a">operator*</a> (<a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Vector multiplication operation.  <a href="#8e9c9c356abe79dbb03c9161798e8f3a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="51d4781282068c1a6f874643af610062"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator/" ref="51d4781282068c1a6f874643af610062" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="73c124fd8fcbb31cefebc14f1ffd34dc"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator/" ref="73c124fd8fcbb31cefebc14f1ffd34dc" args="(float scalar)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/</b> (float scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="34d643b4dd1a61b8422c7fbd244a327a"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator+=" ref="34d643b4dd1a61b8422c7fbd244a327a" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e510ccd2fef57ed0d319892181f6d5bd"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator&#45;=" ref="e510ccd2fef57ed0d319892181f6d5bd" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e7eb6cdd101a43dd354b3a38cc202ed2"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator*=" ref="e7eb6cdd101a43dd354b3a38cc202ed2" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e71b471f5b0438b6f77aad0be19769c6"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator*=" ref="e71b471f5b0438b6f77aad0be19769c6" args="(float scalar)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (float scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1043e2b03d5889864fb6102059a47869"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator/=" ref="1043e2b03d5889864fb6102059a47869" args="(PhRotationMatrix &amp;other)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="42a5be7333097e940acd4a419c19162b"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator/=" ref="42a5be7333097e940acd4a419c19162b" args="(float scalar)" -->
<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (float scalar)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#f062e92f2963a8451c286ad479b5ba4f">determinant</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Determinant.  <a href="#f062e92f2963a8451c286ad479b5ba4f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#125d9086b6bde8c59b3429c42ba3b921">inverse</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Inverse.  <a href="#125d9086b6bde8c59b3429c42ba3b921"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c842ca3225cee58d4ade1c6dbc023317"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator==" ref="c842ca3225cee58d4ade1c6dbc023317" args="(PhRotationMatrix &amp;other)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b11163c3f033ea967cdb1649153a4002"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator!=" ref="b11163c3f033ea967cdb1649153a4002" args="(PhRotationMatrix &amp;other)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (<a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> &amp;other)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5744984644f3d2b8791db27235ded904"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::Elements" ref="5744984644f3d2b8791db27235ded904" args="[4]" -->
float&nbsp;</td><td class="memItemRight" valign="bottom"><b>Elements</b> [4]</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
2D Rotation Matrix Class 
<p>
Provides a fast and efficient way to rotate vectors and polygons. <dl class="note" compact><dt><b>Note:</b></dt><dd>This is generally only used inside PhoenixGL, for rotation of vectors. <p>
Only ambigious operations are documented. </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="58a29c212ed08ea0037c97c021b119fb"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::PhRotationMatrix" ref="58a29c212ed08ea0037c97c021b119fb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::phoenix::PhRotationMatrix::PhRotationMatrix           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Creates an identity matrix ([1,0],[0,1]) 
</div>
</div><p>
<a class="anchor" name="8d50255bfe24c3d3dfe3f539212bff96"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::PhRotationMatrix" ref="8d50255bfe24c3d3dfe3f539212bff96" args="(float a, float b, float c, float d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::phoenix::PhRotationMatrix::PhRotationMatrix           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>d</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Creates a matrix with given elements. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Element[0,0]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Element[0,1]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>Element[1,0]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>d</em>&nbsp;</td><td>Element[1,1]. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="403d3e9bd28ada2c8e92c5801cec3c05"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::PhRotationMatrix" ref="403d3e9bd28ada2c8e92c5801cec3c05" args="(float a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">phoenix::phoenix::PhRotationMatrix::PhRotationMatrix           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Creates a rotation matrix with the given angle. (Most common). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>The angle (in radians). </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="f062e92f2963a8451c286ad479b5ba4f"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::determinant" ref="f062e92f2963a8451c286ad479b5ba4f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhRotationMatrix::determinant           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Determinant. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The determinant of the matrix. </dd></dl>
<dl class="note" compact><dt><b>Note:</b></dt><dd>This is used by the <a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#125d9086b6bde8c59b3429c42ba3b921" title="Inverse.">inverse()</a> function. </dd></dl>

</div>
</div><p>
<a class="anchor" name="75bbcc9242f602e117985a8a3957abac"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::getRotation" ref="75bbcc9242f602e117985a8a3957abac" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float phoenix::phoenix::PhRotationMatrix::getRotation           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get rotation. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The angle of rotation in radians. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#696d986a6f2e00aa86c7d8408baf85a6" title="Set rotation.">setRotation()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="125d9086b6bde8c59b3429c42ba3b921"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::inverse" ref="125d9086b6bde8c59b3429c42ba3b921" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm">PhRotationMatrix</a> phoenix::phoenix::PhRotationMatrix::inverse           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Inverse. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The multiplicative inverse of this matrix. </dd></dl>
<dl class="note" compact><dt><b>Note:</b></dt><dd>This is used by the division operators. </dd></dl>

</div>
</div><p>
<a class="anchor" name="85d57e04bdd120669c5acaf57639498a"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator()" ref="85d57e04bdd120669c5acaf57639498a" args="(const int row, const int col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float&amp; phoenix::phoenix::PhRotationMatrix::operator()           </td>
          <td>(</td>
          <td class="paramtype">const int&nbsp;</td>
          <td class="paramname"> <em>row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&nbsp;</td>
          <td class="paramname"> <em>col</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Matrix access operator. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>An element in the matrix. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>row</em>&nbsp;</td><td>The row of the element. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>col</em>&nbsp;</td><td>The column of the element. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="8e9c9c356abe79dbb03c9161798e8f3a"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator*" ref="8e9c9c356abe79dbb03c9161798e8f3a" args="(PhVector2d &amp;other)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> phoenix::phoenix::PhRotationMatrix::operator*           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classphoenix_1_1phoenix_1_1PhVector2d.htm">PhVector2d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>other</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Vector multiplication operation. 
<p>
Essentially rotates the given vector by this matrix. <dl class="note" compact><dt><b>Note:</b></dt><dd>This is mathematically incorrect, the vector should be the left-hand operand, and the matrix should be the right had operand. This is due to matrix multiplication rules. However we're not bound by that. </dd></dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The rotated vector. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>other</em>&nbsp;</td><td>The vector to rotate. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="b2c7abc5000a8a0e743b7c1bcfbe8b5c"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::operator[]" ref="b2c7abc5000a8a0e743b7c1bcfbe8b5c" args="(const int x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float&amp; phoenix::phoenix::PhRotationMatrix::operator[]           </td>
          <td>(</td>
          <td class="paramtype">const int&nbsp;</td>
          <td class="paramname"> <em>x</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Element access operator. 
<p>
Allows you to access the matrix as a one-dimensional array. <dl class="return" compact><dt><b>Returns:</b></dt><dd>An element in the Matrix. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>The index of the element. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="696d986a6f2e00aa86c7d8408baf85a6"></a><!-- doxytag: member="phoenix::phoenix::PhRotationMatrix::setRotation" ref="696d986a6f2e00aa86c7d8408baf85a6" args="(float rad)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phoenix::phoenix::PhRotationMatrix::setRotation           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>rad</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set rotation. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>rad</em>&nbsp;</td><td>The angle of rotation in radians. </td></tr>
  </table>
</dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classphoenix_1_1phoenix_1_1PhRotationMatrix.htm#75bbcc9242f602e117985a8a3957abac" title="Get rotation.">getRotation()</a> </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>trunk/libPhoenixGL/<a class="el" href="PhVertexLightSystem_8h-source.htm">PhVertexLightSystem.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Nov 2 17:26:52 2008 for PhoenixGL by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.7.1 </small></address>
</body>
</html>
